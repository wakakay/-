
<template>
  <scroll-view
    class="text-selection-ver2-article flex-space-between-column"
    scroll-into-view="{{ scrollPosition }}"
    scroll-with-animation="{{ scrollWithAnimation }}"
    scroll-y
    scroll-top="{{ scrollTop }}"
    scroll-left="{{ scrollLeft }}"
    upper-threshold="{{ headLine }}"
    lower-threshold="{{ bottomLine }}"
    bindscrolltoupper="handleScrollToTop"
    bindscrolltolower="handleScrollToBottom"
    animation="{{animation}}"
  >
    <view class="ageagea" id="aa"></view>
    <!-- <view class="text-selection-ver2-article__header" :class="{'image-loading': !imageLoaded}" wx:if="{{('neutral'===bundle.cardStatus&&!bundle.descriptionList[2])||('iscorrectVer2'===bundle.cardStatus&&bundle.select.length<3)}}">
      <image src="{{bundle.bigimage}}" class="text-selection-ver2-article__header-icon" hidden="{{!imageLoaded}}" @load="handleImageLoaded" mode="scaleToFill"></image>
    </view> -->
    <!-- <text class="text-selection-ver2-article__body__title {{ ('neutral'===bundle.cardStatus&&!bundle.descriptionList[2])||('iscorrectVer2'===bundle.cardStatus&&bundle.select.length<3)? 'with-image': 'without-image' }}"> {{ bundle.title }} </text>
    <text class="text-selection-ver2-article__body-operatetip" wx:if="{{ bundle.operatetip }}"> {{ bundle.operatetip }} </text> -->
    <text class="text-selection-ver2-article__body__title without-image"> {{ bundle.title }} </text>
    <view wx:if="{{ 'transit'===bundle.cardStatus }}">
      <view wx:for="{{bundle.descriptionList}}" wx:for-index="$mtextSelectionVer2$index" wx:for-item="$mtextSelectionVer2$item" wx:key="$mtextSelectionVer2$index" wx:if="{{ $mtextSelectionVer2$item }}">
        <view class="text-selection-ver2-article-button {{$mtextSelectionVer2$index===0?'text-selection-ver2-article-button-margin0':''}}" hover-class="btn-plain-hover" type="default" plain="{{true}}" data-status="{{ bundle.cardStatus }}" data-feedback="{{ bundle.feedback }}" @tap.stop="handleCollectTransition">
        {{$mtextSelectionVer2$item}} </view>
      </view>
    </view>
    <!-- end btn-group -->
    <view wx:elif="{{ 'neutral'===bundle.cardStatus }}" class="flex-space-between-column text-selection-ver2-article-btn-wrapper">
        <view wx:for="{{bundle.descriptionList}}" wx:for-index="$mtextSelectionVer2$index" wx:for-item="$mtextSelectionVer2$item" wx:key="$mtextSelectionVer2$index" wx:if="{{ $mtextSelectionVer2$item }}" class="text-selection-ver2-article-button {{$mtextSelectionVer2$index===0?'text-selection-ver2-article-button-margin0':''}}" hover-class="btn-plain-hover" type="default" plain="{{true}}" data-status="{{ bundle.cardStatus }}" data-feedback="{{ bundle.feedbackNeutral }}"
          @tap.stop="handleCollectNeutralResponse"> {{$mtextSelectionVer2$item}} </view>
    </view>
    <!-- end btn-group -->
    <view wx:else class="flex-space-between-column text-selection-ver2-article-btn-wrapper">
        <view wx:for="{{bundle.select}}" wx:for-index="$mtextSelectionVer2$index" wx:for-item="$mtextSelectionVer2$item" wx:key="$mtextSelectionVer2$index" wx:if="{{ $mtextSelectionVer2$item.option }}" class="text-selection-ver2-article-button {{$mtextSelectionVer2$index===0?'text-selection-ver2-article-button-margin0':''}}" data-status="{{ bundle.cardStatus }}" data-id="{{$mtextSelectionVer2$item&&$mtextSelectionVer2$item.id}}" data-flag="{{ $mtextSelectionVer2$item&&$mtextSelectionVer2$item.isanswer }}"
          data-feedback="{{ $mtextSelectionVer2$item&&$mtextSelectionVer2$item.feedback }}" @tap.stop="handleCollection" data-card-i-d="{{ bundle.id }}" data-ability-skill="{{ $mtextSelectionVer2$item.abilitySkill }}" data-ability-group="{{ $mtextSelectionVer2$item.abilityGroup }}" data-message="{{ $mtextSelectionVer2$item.option }}" data-weight="{{ $mtextSelectionVer2$item.weight }}" data-mark="{{ bundle.score }}"> {{$mtextSelectionVer2$item.option}} </view>
    </view><!-- else -->
    <view class="ageagea" id="gg"></view>
  </scroll-view>
  <!-- <view class="anchor-footer" wx:if="{{ 'textSelectionVer2'===bundle.type && bundle.isAnchorFooterShown && bundle.pullDownFlag}}">
      <image class="anchor-footer__indicator" src="http://wx-small.runwise.cn/image/imageID3067bbb50dd4a3aa922b41ba6a6c.svg" mode="scaleToFill" @tap.stop="handleAnchorTap"></image>
  </view> -->
  <!-- footer -->
  <!-- end text-selection-ver2-article -->
</template>

<script>
  import wepy from 'wepy'
  import {
    getStore,
    connect
  } from 'wepy-redux'
  import loadingMixin from '../../mixins/loading'
  //import Feedback from '../../components/Feedback/index'
  //import Transition from '../../components/Transition/index'
  import { sleep } from '../../utils'
  const store = getStore()
  export default class textSelectionVer2Ver2 extends wepy.component {
    components = {
      //'textSelectionVer2feedback': Feedback,
      //'textSelectionVer2Transit': Transition
    } // end components
    mixins = [loadingMixin] // end mixins
    props = {
      offset: {},
      bundle: {
        type: Object
      },
      isActived: {
        type: Boolean
      },
      cardTop: {
        type: Number
      }
    } // end props
    methods = {
      activateCard(currentCardOffset) {
        this.scrollPosition = 'aa'
        sleep(0.1)
          .then(() => {
            this.scrollPosition = ''
            this.$apply()
          })
      },
      handleAnchorTap() {
        this.scrollPosition = 'gg'
        sleep(0.1)
          .then(() => {
            this.scrollPosition = ''
            this.$apply()
          })
      },
      handleScrollToTop() {
        // console.log('anchorShow')
        this.$emit('anchorShow', this.$index)
      },
      handleScrollToBottom() {
        // console.log('anchorHide')
        this.$emit('anchorHide', this.$index)
      },
      handleCollection({
        target: {
          dataset: {
            status,
            id,
            flag,
            feedback,
            abilitySkill,
            abilityGroup,
            weight,
            message,
            mark,
            cardID
          }
        }
      }) {
        this.$emit('feedback', {
          offset: this.$index,
          feedbackBundle: {
            feedbackType: status,
            flag: Boolean(flag),
            ...feedback
          }
        })
        this.$emit('shuffleTextSelect', this.$index) // 乱序
        null!=mark && this.$emit('reportCardScore', { cardID, score: mark, message, weight, abilityGroup, abilitySkill })
      }, // end handleCollection
      handleCollectTransition({
        target: {
          dataset: {
            status,
            feedback
          }
        }
      }) {
        // console.log('handleCollectTransition', this.$index, status, feedback)
        this.$emit('transition', {
          offset: this.$index,
          feedbackBundle: feedback
        })
      }, // end handleCollection
      handleCollectNeutralResponse({
        target: {
          dataset: {
            feedback
          }
        }
      }) {
        this.$emit('neutralResponse', {
          offset: this.$index,
          feedbackBundle: feedback
        })
        this.$emit('shuffleTextSelect', this.$index) // 乱序
      } // handleCollectNeutralResponse
    } // end methods
    clearAnimation() {
      this.rotate(0, 1)
    }
    events = {
      closeFeedback(offset, $event) {},
      cardSwitch(current, $event) {
        // console.log('card switch______')
        this.presentSection = current
        this.$apply()
      } // end cardSwitch
    } // end events
    data = {
      animation: {},
      icons: {
        'right': '../../assets/img/feedback_right.svg',
        'wrong': '../../assets/img/feedback_wrong.svg'
      }, // end icons
      presentSection: -1,
      scrollTop: 100,
      scrollPosition: '',
      scrollWithAnimation: true,
      bottomLine: 30
    }
    rotate(deg, opacity) {
      this.animation = wx.createAnimation({
        duration: 350,
        timingFunction: 'ease',
      })
      this.animation.rotateY(deg).opacity(opacity).step()
      this.animation = this.animation.export()
      this.$apply()
    } // end reverse

    computed = {
      scrollLeft() {
        return this.$parent.windowWidth - 100
      }, // end scrollLeft
      headLine() {
        return this.$parent.cardHeight - 64
      }
    } // end computed
  }
</script>

<style lang="less">
  .text-selection-ver2-article::-webkit-scrollbar {
    width: 8rpx;
    padding-right: 100rpx;
    /*border-radius: 4rpx;*/
    /*background-color: red;*/
  }

  .text-selection-ver2-article::-webkit-scrollbar-thumb {
    /*width: 8rpx;*/
    /*border-radius: 4rpx;*/
    background-color: red;
  }

  .init {
    transform: none !important;
    opacity: 1 !important;
  }
  .text-selection-ver2-article__feedback__wrapper {
    height: 100%;
  }
  .text-selection-ver2-article {
    height: 100%;
    width: 100%;
    position: relative;
    background-color: #fff;
    border-radius: 16rpx;
    overflow: hidden;
    display: flex;
    justify-content: center;
    flex-direction: column;
    align-items: center;
    overflow-y: scroll;
  }
  .text-selection-ver2-article__header-icon {
    width: 100%;
    height: 360rpx;
    /* margin-bottom: 40rpx; */
  }
  .text-selection-ver2-article__header {
    width: 100%;
    /*background-color: #E06EB5;*/
  }
  .text-selection-ver2-article__body__title {
    display: block;
    text-align: left;
    padding: 104rpx 72rpx 96rpx 72rpx;
    text-align: center;
    color: #303f48;
    font-size: 40rpx;
    line-height: 56rpx;
    font-family: PingFangSC-Medium;
    word-break: break-all;
    white-space: pre-line;
  }
  .text-selection-ver2-article__body__title.with-image {
    padding-top: 40rpx;
  }
  .text-selection-ver2-article__body-operatetip {
    display: block;
    padding: 0rpx 72rpx 48rpx 72rpx;
    text-align: center;
    font-size: 32rpx;
    color: #4d626d;
    line-height: 32rpx;
  }
  .text-selection-ver2-article-button {
    width: 500rpx;
    padding: 28rpx 44rpx;
    margin-top: 32rpx;
    height: auto;
    text-align: left;
    background-color: #2db7b5;
    color: #fff;
    font-family: PingFangSC-Medium;
    font-size: 32rpx;
    line-height: 44rpx;
    overflow: hidden;
    border-radius: 16rpx;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 2;
    overflow: hidden;
  }
  .text-selection-ver2-article-button-margin0 {
    margin-top: 0rpx !important;
  }
  .text-selection-ver2-article-button:active {
    /* #0067d8; */
    background-color: #269B9A !important;
  }

  .text-selection-ver2-article-btn-wrapper {
    align-items: center;
    padding-bottom: 36px;
  }
</style>
