<template>

  <view wx:for="{{ bundle.select }}" wx:for-item="$mcombination$item" wx:for-index="$mcombination$index" wx:key="{{$mcombination$index}}" class="flex-start-column combination-article {{ bundle.step == $mcombination$index? 'shown': 'hidden' }}">
    <view class="flex-space-between-row combination-article__header">
      <view class="combination-article__header__status">
        <text class="combination-article__header__status__molecular">{{ bundle.step + 1 }}</text>
        <text class="combination-article__header__status__line">-</text>
        <text class="combination-article__header__status__denominator">{{ bundle.select.length }}</text>
      </view><!-- status -->
      <text class="combination-article__header__caption"> {{ bundle.title }} </text>
    </view><!-- header -->
    <scroll-view
      class="combination-article__scroll-view flex-space-between-column"
      scroll-into-view="{{ scrollPosition }}"
      scroll-with-animation="{{ scrollWithAnimation }}"
      scroll-y
      scroll-top="{{ scrollTop }}"
      scroll-left="{{ scrollLeft }}"
      upper-threshold="{{ headLine }}"
      lower-threshold="{{ bottomLine }}"
      bindscrolltoupper="handleScrollToTop"
      bindscrolltolower="handleScrollToBottom"
      animation="{{animation}}"
      style="height: {{ cardHeight - 110 }}px"
    >
      <text id="start-c" class="combination-article__title {{ bundle.step == $mcombination$index? 'shown': 'hidden' }}"> {{ $mcombination$item.option }} </text>
      <view class="combination-article__btn-wrapper {{ bundle.step == $mcombination$index? 'shown': 'hidden' }}">
        <button wx:for="{{ $mcombination$item&&$mcombination$item.combinationSelect }}" wx:for-item="$mcombination$inner$item" wx:for-index="$mcombination$inner$index" wx:key="{{ $mcombination$inner$index }}" class="combination-article__btn-wrapper__btn" hover-class="combination-article__btn-wrapper__btn-hover" data-card-i-d="{{ bundle.id }}" data-weight="{{ $mcombination$inner$item.weight }}" data-score="{{ $mcombination$item.index }}" data-message="{{ $mcombination$inner$item.text }}" data-mark="{{ $mcombination$item.index }}" data-ability-skill="{{ $mcombination$item.abilitySkill }}" data-ability-group="{{ $mcombination$item.abilityGroup }}" data-question-index="{{ $mcombination$index }}" @tap.stop="handleOptionSelect"> {{ $mcombination$inner$item.text }} </button>
      </view><!-- wrapper -->
      <view class="ageagea" id="zz"></view>
    </scroll-view>
    <view class="anchor-footer" wx:if="{{ 'combination'===bundle.type && bundle.isAnchorFooterShown }}">
      <image class="anchor-footer__indicator" src="http://wx-small.runwise.cn/image/imageID3067bbb50dd4a3aa922b41ba6a6c.svg" mode="scaleToFill" @tap.stop="handleAnchorTap"></image>
    </view><!-- footer -->
  </view><!-- combination-article -->
</template>

<script>
  import wepy from 'wepy'
  import { sleep } from '../../utils'
  import { getStore, connect } from 'wepy-redux'

   @connect({
    cardHeight(state) {
      return state.user.screenHeight >= 740? 550: state.user.screenHeight * 0.75
    } // mapState 即getters
  })
  export default class Combination extends wepy.component {
    data = {
      scrollTop: 100,
      scrollPosition: '',
      scrollWithAnimation: true,
      bottomLine: 30
    } // end data

    computed = {
      scrollLeft() {
        return this.$parent.windowWidth - 100
      }, // end scrollLeft
      headLine() {
        return this.$parent.cardHeight - 64
      }
    } // end computed

    methods = {
      activateCard(currentCardOffset) {
        this.scrollPosition = 'start-c'
        sleep(0.1)
          .then(() => {
            this.scrollPosition = ''
            this.$apply()
          })
      },
      handleOptionSelect({ target: { dataset: { score, weight, abilitySkill, abilityGroup, message, mark, cardID, questionIndex } } }) {
        this.$emit('anchorShow', this.$index)
        null!=mark && this.$emit('reportCardScore', { cardID, score: mark, message, weight, abilityGroup, abilitySkill, questionIndex })

        let mIfTimeToFeedback = this.$parent.cards[this.$parent.cardSyncCurrent]['step']===this.$parent.cards[this.$parent.cardSyncCurrent]['select'].length - 1
        this.$emit('selectCombinationOption', { componentOffset: this.$index, score: score * weight / 100 })
        if (!mIfTimeToFeedback) return false
        let mSum = this.$parent.cards[this.$parent.cardSyncCurrent]['select'].map(item => item.scoreGotten).reduce((total, current) => total + current)
        let mFeedback = this.$parent.cards[this.$parent.cardSyncCurrent]['feedback']['sliderFeedback'].filter(item => mSum>item.startNum && mSum<=item.endNum)[0]
        this.$emit('sliderResponse', {
          offset: this.$index,
          feedbackBundle: mFeedback
        })
        this.$emit('shuffleCombinationCard', this.$index)
      }, // end handleOptionSelect
      handleAnchorTap() {
        this.scrollPosition = 'zz'
        console.log('here')
        sleep(0.1)
          .then(() => {
            this.scrollPosition = ''
            this.$apply()
          })
      },
      handleScrollToTop() {
        // console.log('anchorShow')
        this.$emit('anchorShow', this.$index)
      },
      handleScrollToBottom() {
        // console.log('anchorHide')
        this.$emit('anchorHide', this.$index)
      }
    } // end methods
  }
</script>

<style lang="less">
  .combination-article {
    width: 100%;
    background-color: #FFF;
    height: auto;
    border-radius: 16rpx;
    align-items: center;
  }

  .combination-article__scroll-view {
    overflow-y: scroll;
  }

  .combination-article.shown {
    display: flex;
  }

  .combination-article.hidden {
    display: none;
  }

  .combination-article__title.shown {
    animation: fadeInUp .3s ease-in;
  }

  .combination-article__title.hidden {
    animation: fadeInDown .3s ease-out;
  }

  .combination-article__btn-wrapper.shown {
    animation: fadeInUp .3s ease-in;
  }

  .combination-article__btn-wrapper.hidden {
    animation: fadeInDown .3s ease-out;
  }

  .combination-article__header {
    width: 100%;
    height: 110px;
    align-items: center;
    background-color: #C5F3E8;
    position: relative;
  }

    .combination-article__header__caption {
      width: 414rpx;
      display: block;
      margin-left: 24rpx;
      margin-right: 80rpx;
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;
      text-align: left;
      color: #006564;
      font-family: PingFang-SC-Medium;
      font-size: 32rpx;
    }
  .combination-article__header__status {
      width: 104rpx;
      height: 104rpx;
      margin-left: 80rpx;
      position: relative;
      /*left: 0;
      right: 0;
      bottom: -52rpx;
      margin: auto;*/
      border-radius: 50%;
      border: 8rpx solid #FFF;
      background-color: #47B99F;
      background-image: url("https://wx-small.runwise.cn/image/imageID49f728f102d4c9842fd09cfdf5ae.jpeg");
      background-position: center;
      background-size: cover;
      background-repeat: no-repeat;
      text-align: center;
      color: #FFF;
      backface-visibility: hidden;
      z-index: 1000;
      opacity: 1;
    }

    .combination-article__header__status__molecular {
      color: #FFF;
      font-family: PingFangSC-Medium;
      font-size: 60rpx;
      position: absolute;
      left: 10rpx;
      top: 0;
    }

    .combination-article__header__status__denominator {
      color: #FFF;
      font-family: PingFangSC-Medium;
      font-size: 32rpx;
      position: absolute;
      left: 70rpx;
      top: 50rpx;
    }

    .combination-article__header__status__line {
      font-size: 80rpx;
      display: inline-block;
      transform: rotate(-65deg) scaleX(2);
      position: absolute;
      left: 30rpx;
      top: -5rpx;
    }

  .combination-article__title {
    width: 558rpx;
    max-height: 118rpx;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 2;
    overflow: hidden;
    padding-top: 104rpx;
    margin: 0 auto 72rpx;
    /*background-color: #E28FC4;*/
    color: #000;
    font-family: PingFangSC-Semibold;
    font-size: 40rpx;
    line-height: 60rpx;
  }

  .combination-article__btn-wrapper {
    flex: 1;
    /*background-color: #43B0DC;*/
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    padding-bottom: 36px;
  }

  .combination-article__btn-wrapper__btn {
    width: 558rpx;
    height: auto;
    padding: 28rpx 44rpx;
    line-height: 44rpx;
    margin-bottom: 32rpx;
    border-radius: 16rpx !important;
    border: 0 !important;
    background-color: #2DB7B5;
    color: #FFF;
    text-align: left;
    font-family: PingFangSC-Medium;
    font-size: 32rpx;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 2;
  }

  .combination-article__btn-wrapper__btn-hover {
    background-color: #269B9A !important;
  }

  .combination-article__btn-wrapper__btn:last-child {
    margin-bottom: 0;
  }

  .combination-article__btn-wrapper__btn::after {
    border: 0 !important;
    border-radius: 0 !important;
  }
</style>
