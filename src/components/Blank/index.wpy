<template>
  <view class="blank-article">
    <image class="blank-article__icon {{isActived ? 'on' : ''}}" mode="scaleToFill" src="http://wx-small.runwise.cn/image/imageID0e8b94ac9ff4459769f1fe3b4816.png"></image>
    <view class="blank-article__sentence {{isActived ? 'on' : ''}}">
      {{ bundle.sentences[0] }}
      <view class="blank-article__sentence__fixed-block" :class="{'actived': enlargeInActived, 'underline': -1!==selectedBtnOffset}"> {{ bundle.sentences[1] }} </view>
      {{ bundle.sentences[2] }}
    </view>
    <!-- blank-article__sentence -->
    <!-- <rich-text nodes="{{bundle.richTextNodeList}}" :class="{'blank-article__sentence-actived': -1!==selectedBtnOffset}"></rich-text> -->
    <view class="blank-article__buttons-wrapper {{isActived ? 'on' : ''}}">
      <button class="blank-article__buttons-wrapper__btn orange-btn" hover-class="blank-article__buttons-wrapper__btn-hover" wx:for="{{bundle.select}}" wx:for-index="$mblank$index" wx:for-item="$mblank$item" wx:key="{{ $mblank$index }}" :class="{ disactived: $mblank$index === selectedBtnOffset, shade: !$mblank$item.isShown }" data-status="{{ bundle.cardStatus }}" data-id="{{ $mblank$item.id }}" data-is-answer="{{ $mblank$item.isanswer }}" data-btn-offset="{{ $mblank$index }}" data-shown="{{ $mblank$item.isShown }}" data-feedback="{{ $mblank$item.feedback }}" @tap.stop="handleSelectBlank"> {{ $mblank$item.option }} </button>
      <!-- <button class="blank-article__buttons-wrapper__btn orange-btn" hover-class="blank-article__buttons-wrapper__btn-hover" wx:for="{{bundle.select}}" wx:for-index="$mblank$index" wx:for-item="$mblank$item" wx:key="{{ $mblank$index }}" :class="{ disactived: $mblank$index === selectedBtnOffset, shade: !$mblank$item.isShown }" data-status="{{ bundle.cardStatus }}" data-id="{{ $mblank$item.id }}" data-is-answer="{{ $mblank$item.isanswer }}" data-btn-offset="{{ $mblank$index }}" data-shown="{{ $mblank$item.isShown }}" data-feedback="{{ $mblank$item.feedback }}" @tap.stop="handleSelectBlank"> {{ $mblank$item.option }} </button> -->
    </view><!-- blank-article__buttons-->
  </view><!-- blank-article -->
</template>

<script>
  import wepy from 'wepy'
  import { sleep } from '../../utils'

  export default class Blank extends wepy.component {
    data = {
      disactived: false,
      selectedBtnOffset: -1,
      enlargeInActived: false
    }

    methods = {
      handleSelectBlank({ target: { dataset: { status, comIndex, id, isAnswer, btnOffset, feedback, shown } } }) {
        // console.log('select blank', comIndex, id, isAnswer)
        if (!shown) return
        this.selectedBtnOffset = btnOffset
        sleep(0.4)
          .then(() => {
            this.$emit('fillBlank', { componentOffset: comIndex, optionID: id })
            this.selectedBtnOffset = -1
            this.enlargeInActived = true
            this.$apply()
            return sleep(0.4)
          })
          .then(() => {
            this.enlargeInActived = false
            this.$emit('feedback', { offset: comIndex, feedbackBundle: { ...feedback, feedbackType: status, flag: Boolean(isAnswer) } })
            this.$emit('shuffleBlank', { componentOffset: comIndex })
            this.$apply()
          })
          .catch(error => console.log(error))
      } // end handleSelectBlank
    } // end methods
  }
</script>

<style lang="less">
  .blank-article {
    width: 100%;
    height: 100%;
    background-color: #FFF;
    display: flex;
    flex-direction: column;
    flex-wrap: nowrap;
    justify-content: flex-start;
    align-items: center;
  }

  .blank-article__icon.on {
    animation: zoomIn .3s ease-in 0s;
  }

  .blank-article__sentence.on {
    animation: zoomIn .3s ease-in 0.05s;
  }

  .blank-article__buttons-wrapper.on {
    animation: zoomIn .3s ease-in .1s;
  }

  .blank-article__icon {
    width: 100%;
    height: 360rpx;
    /*background-color: #F6C6CB;*/
  }

  .blank-article__sentence {
    width: 522rpx;
    max-height: 264rpx;
    /*background-color: #A4C0F4;*/
    margin-top: 16rpx;
    color: #000;
    font-size: 36rpx;
    font-family: PingFangSC-Semibold;
    line-height: 2.4;
  }

  .blank-article__sentence__fixed-block {
    display: inline-block;
    background-color: transparent;
    color: transparent;
    border-radius: 4rpx;
    line-height: 1;
    padding: 14rpx 20rpx;
    position: relative;
    top: -10rpx;
  }

  .blank-article__sentence__fixed-block.actived {
    animation: enlargeIn .2s ease-in-out 0s;
    background-color: #007aff;
    color: #FFF;
  }

  .blank-article__sentence__fixed-block::after {
    content: ' ';
    position: absolute;
    width: 100%;
    height: 100%;
    border-bottom: 4rpx solid #000;
    left: 0;
    bottom: -5rpx;
  }

  .blank-article__sentence__fixed-block.underline::after {
    border-bottom: 0 !important;
    background: repeat;
  }

  .blank-article__buttons-wrapper {
    width: 582rpx;
    /*background-color: #F3E180;*/
    margin-top: 50rpx;
    margin-bottom: auto;
  }

  .blank-article__buttons-wrapper__btn {
    margin: 0;
    padding: 0 30rpx;
    height: 80rpx;
    display: inline-block;
    border-radius: 0;
    margin-right: 20rpx;
    margin-bottom: 20rpx;
    width: auto;
    border-radius: 4rpx;
    box-shadow: 0 4rpx 8rpx #0067d8;
  }

  .blank-article__buttons-wrapper__btn-hover {
    background-color: #0067d8;
    box-shadow: 0 4rpx 8rpx #0067d8;
  }

  .blank-article__buttons-wrapper__btn.disactived {
    background-color: #0067d8;
    animation: vanishY .5s ease-out 0s;
  }

  .blank-article__buttons-wrapper__btn.orange-btn.shade {
    background-color: #007aff !important;
    opacity: .3;
    color: #007aff !important;
  }

  .blank-article__buttons-wrapper__btn::after {
    border: 0;
  }

  .blank-article__buttons-wrapper__btn.orange-btn {
    background-color: #007aff !important;
    color: #FFF;
    font-size: 32rpx;
    font-family: PingFangSC-Medium;
    line-height: 80rpx;
  }

</style>
