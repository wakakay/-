<!--general.wxml-->
<template name="general">
    <view class="general-article">
        <image wx:if="{{bundle.cardStatus==='image'}}" class="general-article-bigimage {{isActived ? 'on' : ''}}" src="{{bundle.bigimage}}" mode="scaleToFill"></image>
        <view class="text-subtitle general-article_title {{isActived ? 'on' : ''}}"><text style="font-size:50rpx !important;color:#2db7b5 !important;margin-right:18rpx;">{{bundle.stepNumber}}</text> {{' æ­¥'+bundle.title}}</view>
        <view class="general-article_title-blank"></view>
        <view class="general-article_body {{isActived ? 'on' : ''}}" wx:if="{{!bundle.cardStatus}}">
            <view style="margin-top:20rpx;width:fit-content;">
                <repeat wx:for="{{ bundle.select }}" wx:for-index="$mgeneral$index" wx:for-item="$mgeneral$item" wx:key="$mgeneral$index">
                    <view class="general-article_body-item" wx:if="{{$mgeneral$index<bundle.stepNumber}}">
                        <image class="general-article_body-item-icon" src="{{item.icon}}" mode="scaleToFill"></image>
                        <view class="general-article_body-item-index">{{index+1}}
                        </view>
                        <view>
                            <view class="general-article_body-item-title">{{item.option}}</view>
                            <view class="general-article_body-item-content">{{item.description}}</view>
                        </view>
                    </view>
                </repeat>
            </view>
        </view>
    </view>
</template>

<script>
    import wepy from "wepy";
    import loadingMixin from "../../mixins/loading";
    export default class General extends wepy.component {
        mixins = [loadingMixin]; // end mixins
        props = {
            offset: {},
            bundle: {
                type: Object
            },
            isActived: {
                type: Boolean
            }
        }; // end props
        data = {}; // end data
        methods = {
            handleTapTitle() {
                console.log("tap title", this.offset);
            }
        }; // end methods
    }
</script>

<style lang="less" scoped>
    .general-article {
        width: 100%;
        height: 100%;
        background-color: #fff;
        position: relative;
    }

    .general-article-bigimage.on {
        animation: zoomIn .3s ease-in 0s;
    }

    .general-article_title.on {
        animation: zoomIn .3s ease-in .05s;
    }

    .general-article_body.on {
        animation: zoomIn .3s ease-in .15s;
    }

    .general-article-bigimage{
        width: 100%;
        height: 100%;
        left: 0;
        top: 0;
        position: absolute;
        z-index: 1;
    }
    .general-article_title {
        margin: 0 auto;
        display: flex;
        justify-content: center;
        align-items: flex-end;
        height: 156rpx;
        width: 100%;
        position: absolute;
        z-index: 2;
        font-weight: bold;
    }
    .general-article_title-blank {
        height: 156rpx;
        width: 100%;
    }
    .general-article_body {
        height: 100%;
        background-color: #fff;
        display: flex;
        flex-direction: column;
        align-items: center;
    }
    .general-article_body-item {
        display: flex;
        margin: 40rpx auto;
    }
    .general-article_body-item-icon {
        width: 128rpx;
        height: 128rpx;
    }
    .general-article_body-item-index {
        padding: 26rpx 12rpx 0 26rpx;
        color: #2db7b5;
        font-family: PingFangSC-Semibold;
        font-size: 40rpx;
        line-height: 40rpx;
    }
    .general-article_body-item-title {
        padding-top: 26rpx;
        max-width: 360rpx;
        color: #2db7b5;
        font-family: PingFangSC-Semibold;
        font-size: 40rpx;
        line-height: 40rpx;
    }
    .general-article_body-item-content {
        padding-top: 20rpx;
        max-width: 360rpx;
        color: #303F48;
        font-family: PingFangSC-Semibold;
        font-size: 32rpx;
        line-height: 40rpx;
    }
</style>
