<!--transition.wxml-->
<template>
  <view class="transition-article" >
      <image class="transition-article-titleimg" src="{{bundle.fragment.data.bigimage}}" mode="scaleToFill">
           <view class="feedback-article__body__fixed-top" @tap.stop="handleCloseFeedback">
          <image class="feedback-article__body__fixed-top__icon" mode="scaleToFill" src="../../assets/img/icon-redo.svg"></image>
          <text class="feedback-article__body__fixed-top__text" > 再做一次 </text>
        </view><!-- feedback-article__body__fixed-top -->
      </image>
      <view class="transition-article-body">
          <view class="text-subtitle transition-article-body-title">{{bundle.fragment.data.title}}</view>
          <view wx:if="{{ bundle.fragment.data.descrListType }}" class="text-body transition-article-body-content">
            <view class="imagetextList-article-desclist-item" wx:for="{{bundle.fragment.data.descriptionList}}" wx:for-index="$mtransition$index" wx:for-item="$mtransition$item" wx:key="$mtransition$index">
                <view class="imagetextList-article-tag-icon-point"></view>
                <view class="imagetextList-article-desclist-text">{{ $mtransition$item }}</view>
            </view><!-- item -->
          </view><!-- body-cntent -->
          <view wx:else class="text-body transition-article-body-content">{{bundle.fragment.data.description}}</view>
          <view class="text-em transition-article-body-point">{{bundle.fragment.data.point.text}}</view>
          <view class="transition-article-bottom">
              <view class="transition-article-bottom-button" @tap.stop="handleTapBtn">{{bundle.fragment.data.point.button}}</view>
          </view>
      </view>
  </view><!-- end article -->
</template>

<script>
  import wepy from 'wepy'
  import { getStore, connect } from 'wepy-redux'

  const store = getStore()
  export default class Transition extends wepy.component {
    props = {
      bundle: {
        type: Object
      },
      offset: {
        type: Number
      }
    } // end props

    data = {} // data

    methods = {
      handleTapBtn(event) {
        this.$emit('switchToNextCard', this.$index)
      }, // end handleTapBtn
      handleCloseFeedback(event) {
        this.$emit('closeFeedback', this.$index)
      }
    } // end methods

  }
</script>

<style lang="less">
.transition-article{
    width: 100%;
    height: 100%;
    background-color: #fff;
    position: relative;
}
.transition-article-titleimg{
    width: 100%;
    height: 360rpx;
}
.transition-article-body{
    display: flex;
    flex-direction: column;
    justify-content: center;
}
.transition-article-body-title{
    margin: 32rpx auto;
}
.transition-article-body-content{
    margin: 0 72rpx;
    word-break: break-all;
    white-space: pre-line;
}
.transition-article-body-point{
    text-align: left;
    margin: 32rpx 72rpx 0 72rpx;
}
.transition-article-bottom{
    position: absolute;
    bottom: 48rpx;
    height: 144rpx;
    width: 100%;
    display: flex;
    justify-content: center;
}
.transition-article-bottom-button{
    width: 336rpx;
    height: 96rpx;
    background-color: #2DB7B5;
    box-shadow:  0 12rpx 32rpx #2DB7B5;
    color: #fff;
    font-size: 32rpx;
    line-height: 96rpx;
    text-align: center;
    border-radius: 16rpx;
}

</style>
