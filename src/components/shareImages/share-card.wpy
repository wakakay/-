<style lang="less" scoped>
    @import "../../assets/style/theme";
    .cell-canvas{width:375px;height:650px;position:fixed;left:150%;top:0;z-index:@z-index-normal;}
    .ui-share-box{
        box-sizing:border-box;width:100%;height:100%;padding:128rpx 32rpx 0;position:fixed;left:0;top:0;z-index:@z-index-mask;display:none;
        &.is-iphonex{
            padding:196rpx 32rpx 0;
            .ui-thumb{width:686rpx;height:1070rpx;}
        }
        .ui-mask{width:100%;height:100%;background-color:@background-mask-normal;position:absolute;left:0;top:0;}
        .ui-thumb{
            width:686rpx;height:970rpx;position:relative;z-index:@z-index-normal;
            image{width:100%;height:100%;}
        }
        .ui-button-box{
            height:100rpx;margin-top:44rpx;
            button{width:100%;font-size:34rpx;border-radius:@border-radius-20;}
            text{margin-right:10rpx;font-size:52rpx;}
            button:nth-of-type(1){background-color:@background-white;color:@color-blue;}
            button:nth-of-type(2){background-color:@background-blue;color:@color-white;}
        }
    }

    .ui-toast-box{
        box-sizing:border-box;width:100%;height:100%;padding-top:50%;background-color:@background-mask-normal;position:fixed;left:0;top:0;z-index:@z-index-highest;display:none;
        .ui-toast-content{
            width:606rpx;height:582rpx;margin:0 auto;background-color:@color-white;border-radius:@border-radius-32;
            .ui-content{padding:70rpx 32rpx 0;}
            .cell-title{padding-bottom:54rpx;font-size:48rpx;color:@color-black;line-height:66rpx;text-align:center;}
            .cell-content{font-size:36rpx;color:@color-black;line-height:56rpx;}
            button{width:336rpx;height:100rpx;margin:0 auto 48rpx;background-color:@background-blue;font-size:34rpx;color:@color-white;border-radius:@border-radius-20;}
        }
    }
</style>

<template>
    <view class="ui-share-box" :class="{'is-iphonex': isIphonex, 'is-show': isDrawOver}">
        <view class="ui-mask" @tap.stop="getClose"></view>
        <view class="ui-thumb">
            <image mode="aspectFit" src="{{shareThumb}}"></image>
        </view>
        <view class="ui-button-box main-justify">
            <button class="main-center cross-center"
                    @tap.stop="getSaveImage">
                <text class="icon-down"></text>保存图片
            </button>

            <!--<button class="main-center cross-center"
                    open-type="share"><text class="icon-share"></text>分享给好友</button>-->
        </view>
    </view>
    <canvas class="cell-canvas" canvas-id="cardShare" style="width:{{cardShareInfo.width}}px;height:{{cardShareInfo.height}}px"></canvas>


    <view class="ui-toast-box" :class="{'is-show': isShowToast}">
        <view class="ui-toast-content dir-top main-justify">
            <view class="ui-content">
                <view class="cell-title">温馨提示</view>
                <view class="cell-content">你关闭了访问相册的权限，无法保存，请在设置中打开允许访问相册后再保存。</view>
            </view>
            <button open-type="openSetting"
                    bindopensetting='getSetting'>确定</button>
        </view>
    </view>

</template>

<script>
    import wepy from 'wepy'
    import {getStore, connect} from 'wepy-redux'
    import _ from 'underscore'

    const store = getStore()
    @connect({
        systemInfo(state) {
            return state.user
        }
    })
    export default class cardShareImage extends wepy.component {
        props = {

        }

        computed = {
        }

        data = {
            isIphonex: /iphone10|iphone x/i.test(wx.getSystemInfoSync().model),
            isDrawStart: true, // 是否可以开始绘画
            isDrawOver: false, // 是否会话结束
            cardCanvas: null, // 画布容器
            isShowToast: false,
            shareThumb: '', // 最后生成的分享图片
            shareImage: [], // 加载的图片信息
            // 画布上元素参考的的信息，有设计稿定死的
            cardShareInfo: {
                width: 375,
                height: 650,
                prop: 1
            }
        }

        onLoad() {

        }
        /**
         * 获取微信设置信息
         * @private
         */
        __wxSetting() {
            let self = this
            // 检测设置中是否允许保存到相册中去
            wx.getSetting({
                success(res) {
                    // 第一次，系统会自动调取授权
                    if (_.isUndefined(res.authSetting['scope.writePhotosAlbum'])) {
                        self.__saveImage()
                    } else if (!res.authSetting['scope.writePhotosAlbum']){ // 不授权
                        self.isShowToast = true
                    } else { // 授权
                        self.__saveImage()
                    }
                    self.$apply()
                }
            })
        }

        methods = {
            /**
             * 保存图片
             * @private
             */
            getSaveImage() {
                let self = this
                self.__wxSetting()
            },
            /**
             * 询问是否授权访问相册
             * @private
             */
            getSetting(event) {
                let self = this
                // 对用户的设置进行判断，如果没有授权，即使用户返回到保存页面，显示的也是“去授权”按钮；同意授权之后才显示保存按钮
                self.isShowToast = false
                if (event.detail.authSetting['scope.writePhotosAlbum']) {
                    self.__saveImage()
                }
            },
            /**
             * 关闭组件
             * @private
             */
            getClose() {
                let self = this
                self.isDrawOver = false
                self.$apply()
            }
        }

        events = {
            // 监听父组件的触发事件
            'card-share-images-list': (images, event) => {
                _.mapObject(images, (val, key) => {
                    if (-1 !== val.toString().indexOf('http://image.runwise.cn/')) {
                        images[key] = val.replace('http://image.runwise.cn/', 'https://wx-small.runwise.cn/')
                    }
                    if (-1 !== val.toString().indexOf('http://wx-small.runwise.cn')) {
                        images[key] = val.replace('http://wx-small.runwise.cn', 'https://wx-small.runwise.cn/')
                    }
                })

                let self = this
                console.log(23, self)
                self.cardCanvas = wx.createCanvasContext('cardShare')
                self.cardShareInfo = {
                    width: 343,
                    height: 535,
                    prop: 1
                }
                /*let width = _.clone(self.cardShareInfo.width)
                let height = _.clone(self.cardShareInfo.height)

                if (self.systemInfo.pixelRatio > 2 && self.systemInfo.pixelRatio < 3) {
                    self.cardShareInfo.prop = self.systemInfo.pixelRatio / 3
                    self.cardShareInfo.width = Math.ceil(self.systemInfo.windowWidth * self.cardShareInfo.prop)
                } else if (self.systemInfo.pixelRatio > 1 && self.systemInfo.pixelRatio < 2) {
                    self.cardShareInfo.prop = self.systemInfo.pixelRatio / 2
                    self.cardShareInfo.width = Math.ceil(self.systemInfo.windowWidth * self.cardShareInfo.prop)
                } else {
                    self.cardShareInfo.prop = self.systemInfo.windowWidth / width
                    self.cardShareInfo.width = Math.ceil(self.cardShareInfo.width * self.cardShareInfo.prop)
                }

                self.cardShareInfo.height = Math.ceil(height * self.cardShareInfo.prop)*/
                // 如果还没绘画结束，则不继续绘画下一个
                if (self.isDrawStart) {
                    self.isDrawStart = false
                    self.isDrawOver = false
                    self.cardCanvas.clearRect(0, 0, self.cardShareInfo.width, self.cardShareInfo.height)
                    self.__initShareCard(images)
                }
            }
        }
        /**
         * 初始化，绘画所需要的元素及计算实际画布参考的大小及比例
         * @private
         */
        __initShareCard(images) {
            let self = this
            // 背景图片
            let senceThumb = new Promise((resolve, reject) => {
                wx.getImageInfo({
                    src: images.senceThumb, success(res) {
                        resolve(res);
                    }
                })
            })
            // 卡片
            let contentImage = new Promise((resolve, reject) => {
                wx.getImageInfo({
                    src: images.contentImage, success(res) {
                        resolve(res)
                    }
                })
            })
            // 二维码
            let shareImage = new Promise((resolve, reject) => {
                wx.getImageInfo({
                    src: images.shareImage, success (res) {
                        resolve(res)
                    }
                })
            })

            wx.showLoading({
                title: '努力生成中...'
            })
            Promise.all(
                [senceThumb, contentImage, shareImage]
            ).then(res => {
                self.shareImage = res

                self.__drawStart() // 绘画开始
                self.cardCanvas.draw(false, () => {
                    wx.hideLoading()
                    self.__creatImage()
                })
            })
        }

        /**
         * 绘画开始，微课的图标
         * @private
         */
        __drawStart() {
            let self = this
            let shareImage = self.shareImage
            let cardShareInfo = self.cardShareInfo
            let w = Math.ceil(shareImage[0].width * cardShareInfo.prop)
            let h = Math.ceil(shareImage[0].height * cardShareInfo.prop)

            self.cardCanvas.drawImage(shareImage[0].path, 24, 8, 56, 56) // 背景图片


            self.cardCanvas.closePath()
            self.cardCanvas.stroke()
        }















        /**
         * 生成图片
         * @private
         */
        __creatImage() {
            let self = this
            let cardShareInfo = self.cardShareInfo

            wx.canvasToTempFilePath({
                destWidth: cardShareInfo.width * 3,
                destHeight: cardShareInfo.height * 3,
                fileType: 'jpg',
                canvasId: 'cardShare',
                success(respone) {
                    self.isDrawStart = true
                    self.isDrawOver = true
                    self.shareThumb = respone.tempFilePath
                    self.$apply()
                }
            })
        }
    }
</script>
