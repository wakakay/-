<!--transitV2.wxml-->
<template>
    <view class="transitV2-article">
        <view class="transitV2-article-body">
            <view wx:if="{{bundle.layoutStatus.imageTop==='text'}}" class="transitV2-article-body-content-top {{isActived ? 'on' : ''}}">{{bundle.description}}</view>
            <view class="transitV2-article-body-img {{isActived ? 'on' : ''}}" :class="{'image-loading': !imageLoaded}">
                <image class="transitV2-article-body-img" @load="handleImageLoaded" src="{{bundle.bigimage}}" hidden="{{!imageLoaded}}" mode="widthFix"></image>
            </view>
            <view wx:if="{{bundle.layoutStatus.imageTop==='image'}}" class="transitV2-article-body-content-bottom">{{bundle.description}}</view>
        </view>
        <view class="transitV2-article-bottom {{isActived ? 'on' : ''}}">
            <view class="transitV2-article-bottom-text">{{bundle.navigation.point.text}}</view>
            <!-- <view class="transitV2-article-bottom-button" @tap.stop="handleTapBtn">{{bundle.navigation.button.text}}</view> -->
            <button class="transitV2-article-bottom-button" hover-class="btn-plain-hover"  @tap.stop="handleTapBtn"> {{bundle.navigation.button.text}} </button>
        </view>
    </view>
    <!-- end article -->
</template>

<script>
    import wepy from 'wepy'
    import {
        getStore,
        connect
    } from 'wepy-redux'
    import loadingMixin from '../../mixins/loading'
    const store = getStore()
    export default class TransitV2 extends wepy.component {
        mixins = [loadingMixin] // end mixins
        props = {
            bundle: {
                type: Object
            },
            offset: {
                type: Number
            },
            isActived: {
                type: Boolean
            }
        } // end props
        data = {} // data
        methods = {
            handleTapBtn(event) {
                this.$emit('switchToNextCard', this.$index)
            } // end handleTapBtn
        } // end methods
    }
</script>

<style lang="less">
    .transitV2-article {
        width: 100%;
        height: 100%;
        background-color: #fff;
        position: relative;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
    }
    .transitV2-article-body {
        height: calc(~"100% - 324rpx");
        /* background-color: #ff7e67; */
        display: flex;
        flex-direction: column;
        justify-content: center;
    }
    .transitV2-article-bottom {
        display: flex;
        flex-direction: column;
        align-items: center;
    }
    .transitV2-article-bottom.on {
        animation: zoomIn .3s ease-in .1s;
    }
    .transitV2-article-body-img {
        width: 100%;
    }
    .transitV2-article-body-img.on {
        animation: zoomIn .3s ease-in 0.05s;
    }
    .transitV2-article-body-content-bottom {
        margin: 48rpx 72rpx 0 72rpx;
        word-break: break-all;
        white-space: pre-line;
        color: #2c3f49;
        font-family: 'PingFangSC-Regular';
        font-size: 36rpx;
        line-height: 60rpx;
    }
    .transitV2-article-body-content-top {
        margin: 0 72rpx 48rpx 72rpx;
        word-break: break-all;
        white-space: pre-line;
        color: #2c3f49;
        font-family: 'PingFangSC-Regular';
        font-size: 36rpx;
        line-height: 60rpx;
    }
    .transitV2-article-body-content-top.on {
        animation: zoomIn .3s ease-in 0s;
    }
    .transitV2-article-bottom-text {
        margin: 0 72rpx;
        word-break: break-all;
        white-space: pre-line;
        color: #303f48;
        font-family: 'PingFangSC-Medium';
        font-size: 40rpx;
        line-height: 64rpx;
        text-align: left;
    }
    .transitV2-article-bottom-button {
        min-width: 240rpx;
        padding:0 40rpx;
        height: 88rpx;
        background-color: #2db7b5;
        font-family: 'PingFangSC-Medium';
        color: #fff;
        font-size: 36rpx;
        line-height: 88rpx;
        text-align: center;
        border-radius: 16rpx;
        margin: 48rpx 0 60rpx 0;
    }
    .transitV2-article-bottom-button :active{
        background-color:rgba(0,255,122, 0.4)
    }
</style>
