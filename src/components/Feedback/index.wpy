<template>
  <view class="feedback-article" :class="{actived: isActived}">
    <view class="feedback-article__body__fixed-top" @tap.stop="handleCloseFeedback">
          <image class="feedback-article__body__fixed-top__icon" mode="scaleToFill" src="../../assets/img/icon-redo.svg"></image>
          <text class="feedback-article__body__fixed-top__text" > 再做一次 </text>
        </view><!-- feedback-article__body__fixed-top -->
    <view  class="feedback-article__body flex-start-center-column flex-items-center">
      <image wx:if="{{bundle.fragment.data.bigimage}}" class="image-responsive feedback-article__body__icon" src="{{bundle.fragment.data.bigimage}}" mode="widthFix"/>
      <image wx:else class="image-responsive feedback-article__body__icon" src="{{bundle.fragment.data.flag ? right.icon : wrong.icon}}" mode="widthFix"/>

      <text class="text-subtitle feedback-article__title" wx:if="{{bundle.fragment.data.title}}"> {{ bundle.fragment.data.title }} </text>
      <view wx:if="{{ bundle.fragment.data.descrListType&&bundle.fragment.data.descriptionList[0] }}" class="feedback-article__body__desc left">
        <view class="imagetextList-article-desclist-item" wx:for="{{bundle.fragment.data.descriptionList}}" wx:for-index="$mfeedback$index" wx:for-item="$mfeedback$item" wx:key="$mfeedback$index" wx:if="{{ $mfeedback$item }}">
            <view class="imagetextList-article-tag-icon-point" />
            <view class="imagetextList-article-desclist-text">{{ $mfeedback$item }}</view>
        </view>
      </view><!-- end feedback-article__body -->
      <view wx:if="{{ !bundle.fragment.data.descrListType&&bundle.fragment.data.description }}" class="feedback-article__body__desc text-body {{bundle.fragment.data.feedbackType==='iscorrectVer2'?'feedback-article__body__desc__new':''}}">
        {{ bundle.fragment.data.description }}
      </view><!-- end feedback-article__body -->
      <view class="fixed-footer feedback-article__footer">
          <text class="icon-fallback cell-fallback"></text>
        <text class="fixed-block__text text-body"> 左滑继续 </text>
      </view>
      <!-- end fixed-block -->
    </view><!-- end feedback-article__body -->
  </view><!-- end feedback-article -->
</template>
<script>
  import wepy from 'wepy'

  export default class Feedback extends wepy.component {
    props = {
      offset: {
      },
      bundle: {
        type: Object
      },

    } // end props

    data = {
        isActived: false,
        right: {
          icon: 'http://wx-small.runwise.cn/image/imageID493b20e5ac844aa80d6d2c1286fd.svg',
          title: '恭喜答对了'
        },
        wrong: {
          icon: 'http://wx-small.runwise.cn/image/imageID7a3a430fa0c4199d92beceb989f1.svg',
        }, // end fail
        uniqueOffset: null,
        flag: false,
        title: '很遗憾，答错了',
        description: '描述描述',
        point: {
          text: ''
        }
    } // end data

    events = {
      feedbackRender: (offset, feedbackBundle, $event) => {
        let { title, description, flag, point } = feedbackBundle
        // console.log('feedback bundle', feedbackBundle, JSON.stringify(feedbackBundle))
        this.uniqueOffset = offset
        this.title = title
        this.description = description
        this.flag = flag
        this.point = point
        this.$apply()
      } // feedbackRender
    } // end events

    methods = {
      resetFeedback() {
        this.isActived = false
      },
      handleBegin(event) {
        this.isActived = !this.isActived
      }, // end handleBegin
      handleImageLoad(event) {
        // console.log('image load event', event)
      }, // end handleImageLoad
      handleImageError(event) {
        // console.log('image error event', event)
      }, // end handleImageError
      handleCloseFeedback(event) {
        this.$emit('closeFeedback', this.$index)
        this.$emit('shuffleTextSelect', this.$index)
      }
    } // end methods

  } // end class
</script>
<style lang="less">
  /* feedback.wxss */
  .feedback-article {
    width: 100%;
    height: 100%;
    background-color: #fff;
    animation: fadeIn .2s;
    /*animation: customBounceIn .9s;*/
    /*transform: rotateY(0deg);*/
    /*transition: all 2s ease-in .1s;*/
    position: relative;
  }

  .feedback-article.actived {
    /*transform: rotateY(360deg);    */
  }

  .feedback-article__title {
    margin: 48rpx auto;
  }

  .image-responsive {
    width: 702rpx;
    height: 360rpx;
    display: block;
    margin: 0 auto;
  }
  .feedback-sub-title {
    margin: 50rpx 0;
    align-self: flex-start;
    color: rgb(107, 119, 127);
  }

  .inner-gap {
    padding: 0 100rpx;
  }
  .feedback-article__body{
    width: 100%;
    height: 100%;
  }

  .feedback-article__body__desc {
    width: 100%;
    box-sizing: border-box;
    padding: 0 72rpx;
  }
  .feedback-article__body__desc__new{
    color: #2C3F49;
    font-family: PingFangSC-Regular;
    font-size: 36rpx;
    line-height: 56rpx;
  }

  .feedback-article__body__desc.left {
    align-self: left;
    color: #2C3F49;
    font-family: PingFangSC-Regular;
    font-size: 36rpx;
    line-height: 64rpx;
    text-align: left;
  }

  .feedback-article__more-icon {
    width: 100rpx;
    height: 100rpx;
  }

  .feedback-article__more-desc {
    font-size: 30rpx;
    line-height: 300%;
  }

  .btn-fill-orange {
    color: #2DB7B5 !important;
    background-color:  #FFF2EF !important;
    border: 0 !important;
  }

  .feedback-article__body__icon {
    position: relative;
  }

  .feedback-article__body__fixed-top {
    height: 32rpx;
    padding: 20rpx;
    /*background-color: #F7BED7;*/
    position: absolute;
    left: 12rpx;
    top: 20rpx;
    z-index: 9;
  }

  .feedback-article__body__fixed-top__icon {
    width: 32rpx;
    height: 32rpx;
    display: inline-block;
    vertical-align: top;
  }

  .feedback-article__body__fixed-top__text {
    display: inline-block;
    vertical-align: top;
    line-height: 32rpx;
    text-align: left;
    text-indent: 4rpx;
    color: #2DB7B5;
    font-family: PingFangSC-Regular;
    font-size: 28rpx;
  }

  .feedback-article__footer {
      .cell-fallback{
          font-size:50rpx;color:rgb(255,126,103);margin-right:10rpx;
      }
  }

  .feedback-return-btn::after {
    border: 0;
  }

  .imagetextList-article-desclist-item {
    width: 558rpx;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }
</style>
