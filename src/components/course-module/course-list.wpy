<style lang="less" scoped>
    @import "../../assets/style/theme";
    .cell-clear{width:100%;height:60rpx;clear:both;background-color:#fff;}
    .ui-course-list{clear:both;overflow:hidden;}
    .ui-course-list .ui-item{background-color:#fff;border-bottom:2rpx solid #F1F2F5;}
    .ui-course-list .ui-item:last-of-type{border-bottom:none}
    .ui-course-list .ui-header{box-sizing:border-box;width:100%;height:148rpx;padding:0 36rpx;position:relative;}
    .ui-course-list .ui-header .cell-seq{margin-right:34rpx;font-size:44rpx;color:@color-white;background: @background-gray-d6;height:60rpx;width:60rpx;border-radius:@border-radius-12;text-align:center;line-height:60rpx;
}
    .ui-course-list .ui-header .cell-icon-button{display:block;width:36rpx;font-size:22rpx;color:@color-blue;position:absolute;right:36rpx;transform:rotate(180deg);transition:all .2s;}
    .ui-course-list .ui-header .cell-icon-hiden{transform:rotate(0deg);}
    .ui-course-list .ui-header .is-new-course .cell-new text::after{content:'新';display:inline-block;width:36rpx;height:36rpx;margin-left:6rpx;background-color:@color-red;font-size:26rpx;color:#fff;text-align:center;line-height:36rpx;border-radius:8rpx;position:relative;top:-2rpx;}
    .ui-course-list .ui-header .cell-title{width:520rpx;}
    .ui-course-list .ui-header .cell-title view:nth-of-type(1) text{display:block;padding-bottom:12rpx;font-size:36rpx;font-weight:700;color:@color-black;line-height:40rpx;text-overflow:ellipsis;white-space:nowrap;overflow:hidden;position:relative;}
    .ui-course-list .ui-header .cell-title view:nth-of-type(2) text{display:block;font-size:26rpx;color:@color-gray;line-height:28rpx;}

    .ui-course-list .ui-list{height:0;overflow:hidden;transition:all .3s ease-in-out;}
    .ui-course-list .ui-item-course{box-sizing:border-box;width:100%;height:144rpx;padding:12rpx 0;background:none;position:relative;}
    .ui-course-list .ui-item-course::before{content:' ';width:100%;border-bottom:1px solid @background-gray-F4;position:absolute;left:164rpx;top:0;}
    .ui-course-list .ui-item-course:first-child::before{width:0;}
    .ui-course-list .ui-item-course .cell-thumb{width:110rpx;height:110rpx;margin-left:28rpx;margin-right:20rpx;background:none;line-height:1;}
    .ui-course-list .ui-item-course .cell-thumb image{width:110rpx;height:110rpx;border-radius:@border-radius-20;}
    .ui-course-list .ui-item-course .ui-content{padding:0 32rpx 0 4rpx;}
     .ui-course-list .ui-content-title{width:368rpx;background:none;text-align:left;line-height:1;}
    .ui-course-list .ui-content-title text:nth-of-type(1){display:block;padding-bottom:12rpx;font-size:32rpx;color:@color-black;text-overflow:ellipsis;white-space:nowrap;line-height:48rpx;overflow:hidden;}
    .ui-course-list .ui-content-title text:nth-of-type(2){display:block;padding-bottom:12rpx;font-size:24rpx;color:@color-gray;line-height:40rpx;}
    .ui-course-list .ui-item-course .ui-progress{width:96rpx;height:8rpx;margin:0 auto 12rpx;background-color:@background-tint-blue;border-radius:@border-radius-8;position:absolute;display:none;top:-22rpx;left:28rpx;}
    .ui-course-list .ui-item-course .ui-button{width:150rpx;position:relative;}
    .ui-course-list .ui-item-course .cell-current{width:0%;height:8rpx;background-color:@background-blue;border-radius:@border-radius-8;}
    .ui-course-list .ui-item-course .cell-button{width:140rpx;height:60rpx;margin:0 auto;background-color:@background-gray-F4;color:@color-blue;font-size:30rpx;font-weight:700;letter-spacing:1px;line-height:60rpx;text-align:center;border-radius:130rpx;}
    .ui-course-list .ui-item-course .cell-finish{background-color:@background-gray-F4;color:@color-blue;}
    .ui-course-list .ui-item-course .cell-button-hover{background-color:@background-gray-hover;color:@color-blue;}
    .ui-course-list .ui-item-course .cell-price{display:none;width:150rpx;font-size:24rpx;color:@color-gray;text-align:center;line-height:28rpx;position:absolute;bottom:-36rpx;left:4rpx;}
</style>

<template>
    <view class="ui-course-list">
        <repeat for="{{courseList}}" item="data" index="pIndex" key="item.courseID">
            <view class="ui-item">
                <view class="ui-header flex cross-center" data-courseID="{{data.courseID}}" hover-stay-time="100" @tap.stop="getShowCourse">
                    <text class="icon-course cell-seq"></text>
                    <view class="cell-title" :class="{'is-new-course': data.isNewCourse}">
                        <view class="cell-new"><text>{{data.name}}</text></view>
                        <view><text>{{data.showPoint}}</text></view>
                    </view>
                    <text :class="{'cell-icon-hiden': data.isShow}" class="icon-up-arrow cell-icon-button"></text>
                </view>

                <view class="ui-list" style="height: {{data.isShow ? data.senceList.length * 144 : 0}}rpx">
                    <form bindsubmit="handleSavePushCode" report-submit>
                        <repeat for="{{data.senceList}}" key="item.id" index="cIndex" item="item">
                            <button class="ui-item-course flex"
                                    data-courseID="{{data.courseID}}"
                                    data-item="{{item}}"
                                    form-type="submit"
                                    hover-stay-time="100"
                                    @tap.stop="getSence">
                                <view class="cell-thumb flex-box-0">
                                    <image mode="aspectFit" src="{{item.coverImageUrl}}"></image>
                                </view>
                                <view class="ui-content flex-box-1 main-justify cross-center">
                                    <view class="ui-content-title">
                                        <text>{{item.senceName}}</text>
                                        <text>{{item.senceTarget}}</text>
                                    </view>
                                    <view class="ui-button">
                                        <view class="ui-progress {{(item.buttonStatus=='continue') ? 'is-show' : ''}}">
                                            <view class="cell-current" style="width: {{item.progress}}%"></view>
                                        </view>
                                        <view class="cell-button {{item.buttonStatus=='finish' ? 'cell-finish' : ''}}"><text>{{item.statusName}}</text></view>
                                        <view class="cell-price {{item.buttonStatus=='needPay' ? 'is-show' : ''}}"><text>{{item.sencePrice}} 即能币</text></view>
                                    </view>
                                </view>
                            </button>
                        </repeat>
                    </form>
                </view>
            </view>
        </repeat>
    </view>
    <view class="cell-clear"></view>
</template>

<script>
    import wepy from 'wepy'
    import {getStore, connect} from 'wepy-redux'
    import PushMixin from '../../mixins/push'
    import _ from 'underscore'
    import {login} from '../../redux/models/user'

    const store = getStore()
    @connect({
        systemInfo(state) {
            return state.user
        },
        userName(state) {
            return state.user.nickName
        },
        role(state) {
            return state.user.role
        },
        entrance(state) {//全局场景值
            return state.entrance
        },
    })
    export default class courseList extends wepy.component {
        mixins = [PushMixin]

        props = {
            lists: {
                type: Array,
                default: []
            }
        }

        computed = {
            courseList() {
                let self = this
                return self.lists
            }
        }

        data = {
            isAuthorization: false
        }

        onLoad() {
            let self = this
            // 是否有登录
            if (self.systemInfo.token.startsWith('userID')) {
                self.isAuthorization = true
            }
        }

        methods = {
            /**
             * 展开收缩每个课程的列表
             * @param event
             */
            getShowCourse(event) {
                let self = this
                let courseID = event.currentTarget.dataset.courseid
                let index = _.findIndex(self.courseList, {courseID: courseID})
                let data = {
                    index: index
                }
                self.$emit('onShowCourse', data)
            },
            /**
             * 点击某节课，通知父级处理
             * @param event
             */
            getSence(event) {
                let self = this
                if ('defaultToken' === self.systemInfo.token) {
                    return
                }

                let {currentTarget: {dataset}} = event
                self.__emit(dataset)

                wx.reportAnalytics('tap_to_lesson', {
                    role: this.role,
                    nickname: this.userName,
                    channel: this.entrance.mappers[this.entrance.scenceID],
                    courseid: dataset.courseid,
                    senceid: dataset.item.id,
                    buttonstatus: dataset.item.buttonStatus,
                    source:'系列详情'
                })
            }
        }

        /**
         * 通知父级
         * @param dataset
         * @private
         */
        __emit(dataset, type=0) {
            let self = this
            let courseID = dataset.courseid
            let senceID = dataset.item.id
            let buttonStatus = dataset.item.buttonStatus
            let data = {
                type: 'sence',
                courseID: courseID,
                item: dataset.item,
                isAuthorize: type
            }
            self.$emit('on-click', data)
        }

        events = {}
    }
</script>
