<!--components/session/session.wxml-->
<template>
  <view class="session-article flex-space-between-column" animation="{{animation}}">
    <view class="session-article__header">
      <image src="{{bundle.bigimage}}" mode="scaleToFill"></image>
      <text class="session-article__header__nickname"> {{ bundle.title }} </text>
    </view>
    <view class="session-article__time text-description"> {{ bundle.timetag }} </view><!-- end time -->
    <view class="session__body">
      <view wx:for="{{bundle.descriptionList}}" wx:for-index="$msession$index" wx:for-item="$msession$item" wx:if="{{$msession$item}}" wx:key="$msession$index" class="bubbleItem session__body__left-bubble-{{$msession$index}} {{isActived ? 'actived' : ''}}">     <!--左侧的泡泡-->  
          <view class="bubble leftBubble text-body">  
              {{ $msession$item }}
              <text class="bottomLevel"></text>  
              <text class="topLevel"></text>  
          </view>  
      </view>  
      <view class="bubbleItem clearfix session__body__right-bubble" wx:for="{{bundle.select}}" wx:key="{{index}}" wx:if="{{selectedId===item.id}}"> 
          <view class="bubble rightBubble text-body">
              {{ item.option }}
              <text class="bottomLevel"></text>  
              <text class="topLevel"></text>  
          </view>  
      </view> 
    </view><!-- end session__body -->
    <text class="text-description session-article__caption {{isActived ? 'actived' : ''}}"> {{ bundle.operatetip }} </text>
    <view class="session-article__footer {{isActived ? 'actived' : ''}}">
      <image class="session-article__footer__input-bar" src="../../assets/img/icon-input-bar.svg" mode="scaleToFill"></image>

      <view class="session-article__footer__btn-group" wx:if="{{ 'iscorrectVer2'===bundle.cardStatus||'iscorrect'===bundle.cardStatus || ''===bundle.cardStatus }}"> 
        <block wx:for="{{item.select}}" wx:for-index="$msession$index" wx:for-item="$msession$item" wx:key="$msession$index"> 
          <button class="btn-plain" hidden="{{ $msession$item&&$msession$item.id===selectedId }}" hover-class="btn-plain-hover" type="default" plain="{{true}}" data-status="{{ bundle.cardStatus }}" data-id="{{$msession$item&&$msession$item.id}}" data-flag="{{ $msession$item&&$msession$item.isanswer }}" data-feedback="{{ $msession$item&&$msession$item.feedback }}" @tap="handleSelectAnswer"> {{$msession$item.option}} </button>
        </block>
      </view><!-- end group -->  

      <view class="session-article__footer__btn-group" wx:if="{{ 'transit'===bundle.cardStatus }}"> 
        <block wx:for="{{ bundle.descriptionList }}" wx:for-index="$msession$index" wx:for-item="$msession$item" wx:key="$msession$index"> 
          <button class="btn-plain" hidden="{{ $msession$item&&$msession$item.id===selectedId }}" hover-class="btn-plain-hover" type="default" plain="{{true}}" data-status="{{ bundle.cardStatus }}" data-feedback="{{ bundle.feedback }}" @tap.stop="handleAnswerTransition"> {{$msession$item}} </button>
        </block>
      </view><!-- end group -->

    </view><!-- end footer -->
  </view><!-- end article -->
</template>

<script>
  import wepy from 'wepy'
  import { getStore, connect } from 'wepy-redux'
  import { sleep } from '../../utils'
  export default class Session extends wepy.component {
    components = {
    } // end components

    props = {
      offset: {},
      bundle: {
        type: Object
      },
      isActived: {
        type: Boolean
      }
    } // end props

    data = {
      animation: {},
      selectedId: ''
    } // end data

    computed = {
    }

    methods = {
      handleSelectAnswer({target: {dataset: {status, id, flag, feedback}}}) {
        this.selectedId = id
        sleep(0.4)
          .then(() => {
            this.$emit('feedback', { offset: this.$index, feedbackBundle: {feedbackType: status, flag ,...feedback} })
            this.selectedId = ''
            this.$apply()
          })
      }, // end handleSelectAnswer
      handleAnswerTransition({target: {dataset: { status, feedback}}}) {
        // console.log('handleCollectTransition', this.$index, status, feedback)
        sleep(0.4)
          .then(() => {
            this.$emit('transition', { offset: this.$index, feedbackBundle: feedback })
            this.selectedId = ''
            this.$apply()
          })
      } // end handleCollection
    } // end methods

    events = {
      closeFeedback(offset, $event) {
        console.log('closeFeedback')
        this.selectedId = ''
        this.$apply()
      },
      cardSwitch(current, $event) {
        // if (!this.isActived) return
      } // end cardSwitch
    } // end events

    rotate(deg, opacity) {
      this.animation = wx.createAnimation({
        duration: 350,
        timingFunction: 'ease',
      })
      this.animation.rotateY(deg).opacity(opacity).step()
      this.animation = this.animation.export()
      this.$apply()
    } // end reverse

    clearAnimation() {
      this.rotate(0, 1)
    }

  } // end class
</script>

<style type="text/css" lang="css">
  /* components/session/session.wxss */
.true {
  background-color: yellow;
}
.false {
  background-color: pink;
}

.session-article {
  width: 100%;
  height: 100%;
  background-color: #fff;
  border-radius: 16rpx;
  overflow: hidden;
}

.session-article__header {
  height: 152rpx;
  background-color: #233E4E;
}

.session-article__header image {
  display: block;
  height: 80rpx;
  width: 80rpx;
  margin: 20rpx auto 8rpx;
  border-radius: 50%; 
}

.session-article__header__nickname {
  display: block;
  text-align: center;
  font-family: PingFangSC-Medium;
  font-size: 24rpx;
  line-height: 34rpx;
  color: #FFF;
}

.session-article__time {
  height: 80rpx;
  text-align: center;
  line-height: 80rpx;
  /*background-color: #00E074;*/
}

.session__body {
  flex: 3;
  /*background-color: #DF10DF;*/
}

.session__body__left-bubble-0.actived {
  animation: customZoomIn .35s ease-in 0s;
}

.session__body__left-bubble-1.actived {
  animation: customZoomIn .35s ease-in .15s;
}

.session__body__right-bubble {
  animation: fadeInUp .35s;
}

.session-article__section {
  width: 702rpx;
  height: 150rpx;
  background-color: #47B99F;
}

.session-article__caption {
  line-height: 50rpx;
  text-align: center;
}

.session-article__caption.actived {
  -webkit-animation: fadeIn 1.2s ease-in .4s;
  -o-animation: fadeIn 1.2s ease-in .4s;
  animation: fadeIn 1.2s ease-in .4s;
}

.session-article__footer {
  /*height: 80rpx;*/
  height: auto;
  min-height: 80rpx;
  max-height: 350rpx;
  background-color: #CFD4DA;
  align-items: center;
}

.session-article__footer.actived {
  animation: fadeInUp .35s ease-in .3s;
}

.session-article__footer__input-bar {
  width: 100%;
  height: 80rpx;
}

.session-article__footer__btn-group {
  height: 270rpx;
  display: flex;
  flex-direction: column;
  flex-wrap: nowrap;
  justify-content: center;
  align-items: center;
  /*background-color: #E85E6C;*/
  text-align: center;
}

.session-article__footer.actived .btn-plain:first-child {
  /*animation: fadeInUp .35s ease-in .55s;*/
  animation: fadeInUp .9s ease-in;
}

.session-article__footer.actived .btn-plain:last-child {
  animation: fadeInUp 1.15s ease-in;
}

.session-article__footer .session-article__footer__btn-group > .btn-plain {
  width: 520rpx;
  height: 88rpx;
  padding: 0 20rpx;
  margin: 0 auto;
  vertical-align: top;
  display: block;
  font-size: 28rpx;
  line-height: 88rpx;
  color: #000;
  font-family: PingFangSC-Medium;
  border-radius: 16rpx;
  background-color: #FEFFFF;
  box-shadow: 0 2rpx 2rpx rgba(0, 0, 0, .3);
}

.session-article__footer .session-article__footer__btn-group > .btn-plain:first-child {
  margin-bottom: 20rpx;
}
</style>
