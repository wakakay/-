<style lang="less" scoped>
    @import "../../assets/style/theme";
    .ui-weclome-box{
        box-sizing:border-box;width:100%;height:100%;background-position:center top;background-repeat:no-repeat;background-size:cover;position:relative;left:0;top:0;
        view{box-sizing:border-box;}

        .ui-button{
            width:100%;height:160rpx;position:fixed;left:0;bottom:0;
            &.is-iphonex{height:248rpx;}
            .cell-button{width:480rpx;height:88rpx;border-radius:@border-radius-20;background-color:@background-mask-white;font-size:36rpx;font-weight:700;color:@color-white;letter-spacing:1px;}
            .cell-hover{background-color:@background-mask-normal}
        }
    }
</style>

<template>
    <view class="ui-weclome-box" style="background-image:url({{banner}});">
        <jn-header className="background-transparent" hiddenButton></jn-header>

        <view class="ui-button main-center" :class="{'is-iphonex': isIphonex}">
            <button class="cell-button main-center cross-center"
                  open-type="getUserInfo"
                  hover-class="cell-hover"
                  bindgetuserinfo="getRegistered">免费领取</button>
        </view>
    </view>
</template>

<script>
    import wepy from 'wepy'
    import {getStore, connect} from 'wepy-redux'
    import header from '../../components/common/header'
    import Loading from '../../components/common/loading'
    import {CustomError} from '../../errors'
    import {login} from '../../redux/models/user'
    import {registered as fetchRegistered} from '../../api'

    const store = getStore()
    @connect({
        systemInfo(state) {
            return state.user
        },
        entrance(state) { // 全局场景值
            return state.entrance
        }
    })
    export default class registeredWeclome extends wepy.page {
        components = {
            'jn-header': header
        }

        data = {
            isIphonex: /iphone10|iphone x/i.test(wx.getSystemInfoSync().model),
            swiperList: [],
            banner: null,
            isClick: false
        }

        onLoad() {
            let self = this
            wepy.$instance.globalData.getLoadHuilder() // ga统计
            let postData = {
                token: 'defaultToken',
                imageType: 'useronboarding'
            }
            fetchRegistered.weclomeSwiper(postData).then((respone) => {
                self.banner = respone.imageList[0].url
                self.$apply()
            }).catch(error => {

            })
        }

        onShow() {
            let self = this
            self.isClick = false
        }

        methods = {
            /**
             * 微信授权登录
             */
            getRegistered(event) {
                let self = this
                let {detail: {errMsg}} = event

                wx.reportAnalytics('welcome_register', {
                    username: self.systemInfo.userName,
                    channel: self.entrance.mappers[self.entrance.scenceID],
                    role: self.systemInfo.role
                })

                return new Promise((resolve, reject) => {
                    if (errMsg === 'getUserInfo:fail auth deny') throw new CustomError('用户拒绝授权')
                    if (errMsg && errMsg.includes('fail')) throw new CustomError('用户授权失败')

                    resolve(errMsg)
                }).then(userInfo => { // 确定授权
                    return store.dispatch(login())
                }).then((respone) => { // 授权成功
                    self.__isGetGift()
                }).catch(error => { // 拒接授权

                })
            }
        }

        /**
         * 是否领取过新手礼包
         * @private
         */
        __isGetGift() {
            let self = this
            if (self.isClick) {
                return
            }
            self.isClick = true

            let postData = {
                token: self.systemInfo.token
            }
            fetchRegistered.userInfo(postData).then((respone) => {
                respone.hasGift ? wx.reLaunch({url: '/pages/FindList/index'}) : wx.navigateTo({url: '/pages/registered-module/interest-select'})
                self.$apply()
            }).catch(error => {
                wx.showToast({
                    icon: 'none',
                    title: ' 网络错误 '
                })
            })
        }

        events = {}
    }
</script>
