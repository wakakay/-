<style lang="less" scoped>
    @import "../../assets/style/course-detail";
</style>

<template>
    <jn-loading wx:if="{{!isLoaded}}"></jn-loading>

    <form class="ui-course-details-box" bindsubmit="handleSavePushCode" report-submit>
        <jn-header :title.sync="courseTitle" :className.sync="headerBackground" buttonAfter></jn-header>

        <view class="ui-board-box">
            <view class="ui-header-thumb" style="height: calc(100% + {{headerHeigth}}px);top:-{{headerHeigth}}px;background-image:url({{courseDetail.image}})">
                <view class="cell-mask"></view>
            </view>
            <view class="ui-content">
                <view class="cell-subtitle">{{courseDetail.courseSkill}}</view>
                <view class="cell-title main-justify">
                    <text>{{courseDetail.name}}</text>
                    <button class="main-center cross-center" open-type="share">
                        <text class="icon-share"></text>
                    </button>
                    <view class="ui-tips" wx:if="{{isTips}}">分享赚5即能币<text class="icon-arrow"></text></view>
                </view>
                <view class="ui-introduction-board">
                    <view class="cell-text main-justify">
                        <view><text>概况</text></view>
                        <view><text class="icon-complete"></text><text> {{courseDetail.progress}}%</text></view>
                    </view>
                    <view class="ui-progress">
                        <progress percent="{{courseDetail.progress}}" color="#fff" backgroundColor="rgba(255,255,255,.6)" />
                    </view>
                    <view class="ui-list box-mean">
                        <view class="dir-top main-justify"><text>微课</text><text>{{courseDetail.senceCount}}节</text></view>
                        <view class="dir-top main-justify"><text>学习时长</text><text>{{courseDetail.courseMinute}}分钟</text></view>
                        <view class="dir-top main-justify"><text>测练</text><text>{{courseDetail.practiceCount}}道</text></view>
                        <view class="dir-top main-justify"><text>已学</text><text>{{courseDetail.userCount}}人</text></view>
                    </view>
                </view>
            </view>
        </view>

        <view class="ui-title">课程概述</view>
        <view class="ui-introduction-content">
            <view>
                <text>{{courseDetail.textDescription}}</text>
            </view>
            <image mode="widthFix" src="{{courseDetail.imageList}}" wx:if="{{courseDetail.imageList}}"></image>
        </view>
        <view class="cell-border"></view>

        <view class="ui-title" wx:if="{{courseDetail.linkEditorList.length}}">你将获得</view>
        <scroll-view wx:if="{{courseDetail.linkEditorList.length}}" class="ui-special-list" scroll-x scroll-with-animation>
            <repeat for="{{courseDetail.linkEditorList}}" key="index" index="index" item="item">
                <button form-type="submit" hover-stay-time="100"
                        class="ui-item" style="background-image:url('{{item.coverImageURL}}')"
                        data-item="{{item}}"
                        @tap.stop="getEditor">
                        <view class="ui-mask">
                            <view class="ui-top main-justify">
                                <view>{{item.sceneTypeText}}</view>
                                <view class="ui-count">
                                    <text class="icon-eyes"></text>
                                    {{item.userCount}}
                                </view>
                            </view>
                            <view class="cell-title text-overflow-t">{{item.name}}</view>
                            <view wx:if="{{'todaySkill' == item.sceneType}}" class="ui-bottom">
                                <view class="ui-skill main-justify">
                                    <view># {{item.senceTarget}}</view>
                                    <view class="cell-num">{{item.skillScore}}</view>
                                </view>
                                <view class="ui-progress">
                                    <view class="cell-line box-mean">
                                        <view></view><view></view><view></view><view></view><view></view>
                                    </view>
                                    <view class="cell-percent" style="width: {{item.progress}}%;"></view>
                                </view>
                            </view>
                            <view wx:if="{{'todaySkill' != item.sceneType}}" class="cell-subtitle text-overflow">{{item.subtitle}}</view>
                        </view>
                </button>
            </repeat>
        </scroll-view>


        <view class="ui-title" id="senceList" wx:if="{{courseDetail.senceList.length}}">微课列表</view>
        <view class="ui-course-list" wx:if="{{courseDetail.senceList.length}}">
            <repeat for="{{courseDetail.senceList}}" key="index" index="index" item="item">
                <button class="ui-item"
                        style="background-image:url({{item.coverImageURL}})"
                        hover-stay-time="100"
                        form-type="submit"
                        data-item="{{item}}"
                        @tap.stop="getCourseLearning">
                    <view class="cell-title">{{item.senceName}}</view>
                    <view class="ui-skills">
                        <text class="icon-study-bar"></text>{{item.labelName}}
                    </view>
                    <view class="cell-subtitle">{{item.senceTarget}}</view>

                    <view class="ui-status">
                        <text class="icon-lock cell-text" wx:if="{{item.buttonStatus=='needPay'}}"></text>
                        <view class="cell-status" wx:elif="{{item.buttonStatus=='notBeginOrTry'}}">即学</view>
                        <view class="ui-circular-progress" wx:else>
                            <view class="cell-progress-number main-center cross-center">{{item.progress || 0}}%</view>
                            <view class="ui-wrapper ui-right">
                                <view class="cell-circle-right" style="transform:rotate({{item.progress <= 50 ? (-135 + 3.6 * item.progress) : 45}}deg);"></view>
                            </view>
                            <view class="ui-wrapper ui-left">
                                <view class="cell-circle-left" style="transform:rotate({{item.progress > 50 ? (-135 + 3.6 * (item.progress - 50)) : -135}}deg);"></view></view>
                        </view>
                    </view>

                    <image class="cell-thumb" mode="aspectFit" src="{{item.imageUrl}}"></image>
                </button>
            </repeat>
        </view>

        <view class="ui-title" wx:if="{{courseDetail.receive.length}}">技能强化</view>
        <view class="ui-get-list">
            <repeat for="{{courseDetail.receive}}" key="index" index="index" item="item">
                <button class="ui-item flex"
                        hover-stay-time="100"
                        data-type="{{index}}"
                        form-type="submit"
                        data-item="{{item}}"
                        @tap.stop="getTemplate">
                    <view class="ui-icon flex-box-0 main-center cross-center">
                        <text class="{{index==0 ? 'icon-job-skills' : index==1 ? 'icon-work-template' : 'icon-community'}}"></text>
                        <text class="icon-app-icon"></text>
                        <view wx:if="{{2 == index}}" class="cell-dot"></view>
                    </view>
                    <view class="ui-content">
                        <view class="cell-title">{{item.title}}</view>
                        <view class="cell-subtitle">{{item.remark}}</view>
                        <text class="icon-details"></text>
                    </view>
                </button>
            </repeat>
        </view>

        <view class="ui-title" wx:if="{{courseDetail.feedbackList.length}}">精选评价</view>
        <view class="ui-comments-box" wx:if="{{courseDetail.feedbackList.length}}">
            <swiper class="ui-comments-list"
                next-margin="28rpx" previous-margin="38rpx">
                <block wx:for="{{courseDetail.feedbackList}}"
                    wx:index="{{ index }}" wx:key="{{ index }}" wx:for-item="item">
                    <swiper-item class="ui-swiper">
                        <view class="ui-item">
                            <view class="ui-top">
                                <view class="ui-user">
                                    <image mode="scaleToFill" src="{{item.avatarUrl}}"/>
                                    <view class="cell-name">{{item.nickName}}</view>
                                </view>
                                <view class="ui-star">
                                    <text class="{{item.star>=1 ? 'icon-selete-star' : 'icon-not-star'}}"></text>
                                    <text class="{{item.star>=2 ? 'icon-selete-star' : 'icon-not-star'}}"></text>
                                    <text class="{{item.star>=3 ? 'icon-selete-star' : 'icon-not-star'}}"></text>
                                    <text class="{{item.star>=4 ? 'icon-selete-star' : 'icon-not-star'}}"></text>
                                    <text class="{{item.star>=5 ? 'icon-selete-star' : 'icon-not-star'}}"></text>
                                </view>
                            </view>
                            <view class="ui-title-box">
                                <view class="cell-title">[{{item.name}}]</view>
                                <view class="cell-date">{{item.feedbackTime}}</view>
                            </view>
                            <view class="ui-message wrap-nowrap">{{item.showMessage}}</view>
                        </view>
                    </swiper-item>
                </block>
            </swiper>
        </view>

        <view class="ui-title" wx:if="{{courseDetail.courseLink.length}}">为你推荐</view>
        <view class="ui-recommend-list">
            <repeat for="{{courseDetail.courseLink}}" key="index" index="index" item="item">
                <button class="ui-item dir-left" hover-stay-time="100" form-type="submit" data-item="{{item}}" @tap.stop="getCourse">
                    <view class="ui-thumb"><image mode="scaleToFill" src="{{item.courseImage}}"></image></view>
                    <view class="ui-content">
                        <view class="cell-title">{{item.courseName}}</view>
                        <view class="cell-subtitle">{{item.courseSkill}}</view>
                        <view class="ui-star">
                            <text class="{{item.courseStar>=1 ? 'icon-selete-star' : 'icon-not-star'}}"></text>
                            <text class="{{item.courseStar>=1 ? 'icon-selete-star' : 'icon-not-star'}}"></text>
                            <text class="{{item.courseStar>=1 ? 'icon-selete-star' : 'icon-not-star'}}"></text>
                            <text class="{{item.courseStar>=1 ? 'icon-selete-star' : 'icon-not-star'}}"></text>
                            <text class="{{item.courseStar>=1 ? 'icon-selete-star' : 'icon-not-star'}}"></text>
                        </view>
                    </view>
                </button>
            </repeat>
        </view>

        <view class="ui-rules-box" wx:if="{{courseDetail.isLimitedTimeGiftCourse && courseDetail.coursePayStatus!='hidden' && ((courseDetail.hasGiftState && courseDetail.roleType=='gifter' && courseDetail.price>0) || (courseDetail.hasGiftState && courseDetail.roleType=='receiver' && courseDetail.giftButtonMsg=='赠一得一') || (courseDetail.roleType=='normal' && courseDetail.price>0))}}">
            <view class="ui-title">赠一得一规则</view>
            <view class="ui-text dir-left"><text>1.</text>点击分享免费领，赠出课程被领取后，你将免费获得此课程；</view>
            <view class="ui-text dir-left"><text>2.</text>好友最多可通过此途径获得1个课程。</view>
        </view>

        <view class="ui-rules-box">
            <view class="ui-title">分享规则</view>
            <view class="ui-text dir-left"><text>1.</text>分享出去，你的好友成为我们的新用户后，你将获得即能币；</view>
            <view class="ui-text dir-left"><text>2.</text>每成功邀请一个好友将获得5个即能币；</view>
            <view class="ui-text dir-left"><text>3.</text>分享越多，获得越多的即能币。</view>
        </view>

        <button class="ui-pay-button"
                hover-stay-time="100"
                @tap.stop="getAllPay"
                wx:if="{{courseDetail.price>0}}">{{courseDetail.price}} 即能币购买 <text class="icon-details"></text></button>

        <view class="ui-clear"></view>

        <view class="ui-button-box" :class="{'is-phonex': isIphonex}" wx:if="{{hasGift && !courseDetail.isLimitedTimeGiftCourse && courseDetail.price>0}}">
            <view class="ui-container" :class="{'is-fixed': isFixed}">
                <view class="ui-text main-justify">
                    <text>获取整个课程</text>
                    <text>{{courseDetail.price}} <text class="cell-currency">即能币</text></text>
                </view>
                <view class="ui-button-list ui-column">
                    <button hover-stay-time="100" @tap.stop="getAllPay">{{price ? '已获取' : '一键获取'}}</button>
                </view>
            </view>
        </view>

        <view wx:if="{{courseDetail.isLimitedTimeGiftCourse}}">
            <view class="ui-button-box" :class="{'is-phonex': isIphonex}" wx:if="{{courseDetail.coursePayStatus!='hidden' && ((courseDetail.hasGiftState && courseDetail.roleType=='gifter' && courseDetail.price>0) || (courseDetail.hasGiftState && courseDetail.roleType=='receiver' && courseDetail.giftButtonMsg=='赠一得一') || (courseDetail.roleType=='normal' && courseDetail.price>0))}}">
                <view class="ui-container is-fixed">
                    <view class="ui-text main-center"></view>
                    <view class="ui-button-list ui-column">
                        <button open-type="share"
                                data-role="1"
                                hover-stay-time="100">分享免费领</button>
                    </view>
                </view>
            </view>

            <view class="ui-button-box" :class="{'is-phonex': isIphonex}" wx:if="{{(courseDetail.hasGiftState && courseDetail.roleType == 'receiver' && courseDetail.giftButtonMsg != '赠一得一') || isGifter}}">
                <view class="ui-container is-fixed">
                    <view class="ui-text main-center">
                        <text>{{countDown ? '3天内学完所有微课，你将获得此课程。' : '领取后，你的好友将获得此课程。你只能通过此途径领取1个课程。'}}</text>
                    </view>
                    <view class="ui-button-list ui-column">
                        <button data-role="2"
                                hover-stay-time="100"
                                open-type="{{!systemInfo.phone ? 'getPhoneNumber' : ''}}"
                                @getphonenumber.stop="getReceiveCourse"
                                @tap.stop="getReceiveCourse">{{courseDetail.giftButtonMsg}}{{countDown}}</button>
                    </view>
                </view>
            </view>
        </view>

        <view class="ui-button-box" :class="{'is-phonex': isIphonex}" wx:elif="{{!hasGift}}">
            <view class="ui-container is-fixed">
                <view class="ui-text main-center"></view>
                <view class="ui-button-list ui-column">
                    <button hover-stay-time="100"
                            form-type="submit"
                            open-type="{{!systemInfo.phone ? 'getPhoneNumber' : ''}}"
                            @getphonenumber.stop="getFirstReceive"
                            @tap.stop="getFirstReceive">首课免费领取</button>
                </view>
            </view>
        </view>
    </form>
    <jn-actionSheet :isShow.sync="isShowActionSheet"
            :title.sync="actionSheetTitle"
            :content.sync="actionSheetContent"
            buttonConfirm='我知道了'></jn-actionSheet>
</template>

<script>
    import wepy from 'wepy'
    import {getStore, connect} from 'wepy-redux'
    import header from '../../components/common/header'
    import Loading from '../../components/common/loading'
    import actionSheet from '../../components/common/actionSheet'
    import {course as courseApi, fetch} from '../../api'
    import PushMixin from "../../mixins/push"
    import {initializationDeligate, navigateToLesson, shareDictionary, getStorageAsync} from '../../utils'
    import {CustomError} from '../../errors'
    import {getUserPhone, refreshUserInformations} from '../../redux/models/user'
    import _ from 'underscore'

    /*
       * 赠一得一，字段
       * isLimitedTimeGiftCourse: 是否是限时赠一得一
       * coursePayStatus: 是否显示底部购买按钮（2个按钮的条件之一）
       * hasGiftState: 是否有赠送状态
       * giftButtonMsg: 底部按钮文案
       * roleType: {gifter: 赠送者, receiver: 受赠者, normal: 普通者}
       *
       * 赠送者
       * 1、访客身份：点击按钮需要授权，之后重新调取课程详情
       * 2、用户身份: 1) isLimitedTimeGiftCourse && roleType!='receiver' 需要获取giftID，弹窗分享接口，如果请求接口回来再弹窗好友列表是不可以的
       *             2) 如果giftButtonMsg=='赠一得一' && roleType!='gifter'
       *
       * 受赠者
       * 1、访客身份：点击按钮需要授权，之后重新调取课程详情
       * 2、用户身份: 1) 如果没有领取过，进来自动领取
       *             2) 如果giftButtonMsg=='赠一得一' && roleType!='gifter'
       * */
    const store = getStore()
    @connect({
        systemInfo(state) {
            return state.user
        },
        hasGift(state) {
            return state.user.hasGift
        },
        entrance(state) {//全局场景值
            return state.entrance
        }
    })
    export default class courseDetails extends wepy.page {
        mixins = [PushMixin]

        components = {
            'jn-header': header,
            'jn-loading': Loading,
            'jn-actionSheet': actionSheet
        }

        data = {
            headerHeigth: 68,
            headerBackground: 'background-transparent',
            isIphonex: /iphone10|iphone x/i.test(wx.getSystemInfoSync().model),
            isFixed: false,
            timestamp: new Date().getTime(),
            backgroundHeight: 0,
            targetScroll: 0,
            isLoaded: false,
            shareSenceID: null, // 分享进来的微课id
            paramsInfo: {}, // 接受地址栏传进来的值
            roleType: 'gifter', // {赠送者: gifter, 受赠者: receiver}
            giftID: '', // 赠一得一id
            shareID: '', // 分享获取即能币奖励的id
            isGifter: false,
            courseTitle: '',
            courseCopyTitle: '',
            courseDetail: {}, // 课程详情
            isTips: true,
            countDown: '', // 倒计时事件
            timer: null, // 定时器
            isShowActionSheet: false,
            actionSheetTitle: '',
            actionSheetContent: ''
        }

        onLoad(params) {
            let self = this
            console.log('课程详情', params)
            self.paramsInfo = params
            self.paramsInfo.source = self.paramsInfo.source
            // 是否是通过识别小程序号且有scenceID，说明是微课分享进来的，要重定向到微课
            let codeType = getStore().getState().entrance.scenceID
            let isCode = _.indexOf([1047, 1048, 1049, 1089], codeType)
            if (-1 !== isCode && params.senceID) {
                self.shareSenceID = params.senceID
            }
            initializationDeligate({initializeFunc: self.initialize.bind(self)})
        }
        onShow() {
            let self = this
            self.courseDetail && self.courseDetail.senceList && self.courseDetail.senceList.length && self.initialize()
        }

        onUnload() {
            let self = this
            clearInterval(self.timer)
            self.__reportStayTimestamp()
        }
        onHide() {
            let self = this
            self.__reportStayTimestamp()
        }
        /**
         * 监听滚动条的位置
         * @param
         */
        onPageScroll(res) {
            let self = this
            let query = wx.createSelectorQuery()
            !self.targetScroll && query.select('.ui-course-list').boundingClientRect((rect) => {
                self.targetScroll = rect.top - 200
            }).exec()

            !self.backgroundHeight && query.select('.ui-header-thumb').boundingClientRect((rect) => {
                self.backgroundHeight = rect.height - 50
            }).exec()
            self.isFixed = res.scrollTop > self.targetScroll ? true : false

            if (res.scrollTop > self.backgroundHeight) {
                self.headerBackground ='background-white'
                self.courseTitle = _.clone(self.courseCopyTitle)
            } else {
                self.headerBackground ='background-transparent'
                self.courseTitle = ''
            }
            self.$apply()
        }
        /**
         * 初始化
         */
        initialize(params) {
            let self = this
            let postData = {
                token: params && params.token || self.systemInfo.token,
                courseID: self.paramsInfo.id,
                source: self.paramsInfo.wxPushType || self.paramsInfo.source
            }

            if (self.paramsInfo.giftID) {
                postData.giftID = self.paramsInfo.giftID
                self.isGifter = true
            }
            if (self.paramsInfo.shareID) {
                postData.shareID = self.paramsInfo.shareID
            }

            fetch.courseDetail(postData).then((respone) => {
                if (!respone.courseLink) {
                    respone.courseLink = []
                }
                self.courseDetail = respone
                self.courseCopyTitle = respone.name

                if (self.courseDetail.expiredCode >= 0) {
                    self.courseCopyTitle = (self.courseDetail.expiredCode ? `仅剩${self.courseDetail.expiredCode}天` : '今天到期') + '，学完课程可永久获得'
                }

                _.each(self.courseDetail.senceList, (item) => {
                    if ('needPay' === item.buttonStatus) {
                        item.buttonStatusMsg = item.sencePrice
                    }
                })
                self.courseDetail.price = parseFloat(self.courseDetail.price)

                // 微课分享进来重定向
                if (self.shareSenceID && 'defaultToken' !== postData.token) {
                    let senceItem = _.find(self.courseDetail.senceList, {id: self.shareSenceID})
                    if ('finish' === senceItem.buttonStatus) {
                        senceItem.buttonStatus = ''
                        self.__goToCourseLearning(senceItem)
                        return
                    }
                    if ('needPay' !== senceItem.buttonStatus) {
                        self.__goToCourseLearning(senceItem)
                        return
                    }
                }
                self.isLoaded = true
                setTimeout(() => {
                    self.isTips = false
                    self.$apply()
                }, 2000)
                // 接受者，并且有倒计时时间，则显示倒计时
                if ('receiver' === self.courseDetail.roleType && self.courseDetail.giftCountdown) {
                    self.__countDown()
                }
                // 是受赠者且未登录，显示马上领取
                if (self.paramsInfo.giftID && 'defaultToken' === postData.token) {
                    self.courseDetail.giftButtonMsg = '马上领取'
                } else {
                    self.courseDetail.giftButtonMsg = self.courseDetail.giftButtonMsg || '赠一得一'
                    if ('赠一得一' === self.courseDetail.giftButtonMsg) {
                        self.isGifter = false
                    }
                }

                // 赠送者→获取赠送的giftID
                if ('defaultToken' !== postData.token
                    && self.courseDetail.isLimitedTimeGiftCourse
                    && 'receiver' != self.courseDetail.roleType) {
                    self.__createGiftID()
                }

                // 赠送者→获取普通分享的shareID
                if ('defaultToken' !== postData.token) {
                    self.__createShareID()
                }

                self.$apply()
                wepy.$instance.globalData.getLoadHuilder({pageTheme: self.courseDetail.name}) // ga统计
                wx.reportAnalytics('coursedetail_pageload', {
                    role: self.systemInfo.role,
                    nickname: self.systemInfo.nickName,
                    channel: self.entrance.mappers[self.entrance.scenceID],
                    courseid: self.paramsInfo.id,
                    source: self.paramsInfo.source
                })

                self.__positionScroll()
            }).catch(error => {
                self.isLoaded = true
            })
        }
        /**
         * 用户进入已获得的课程的详情页时，直接滚动到微课列表位置
         */
        __positionScroll() {
            let self = this
            if (self.courseDetail.price || !self.hasGift) {
                return
            }

            setTimeout(() => {
                let query = wx.createSelectorQuery()
                query.select('#senceList').boundingClientRect((rect) => {
                    wx.pageScrollTo({
                        scrollTop: rect.top - rect.height,
                        duration: 300
                    })
                }).exec()
            }, 2000)
        }

        /**
         * 去微课学习页面
         * @param item 当前微课的信息
         * @param isGoLesson 首页免费领取或限时赠一得一，自动去学第一课
         * @returns {*}
         * @private
         */
        __goToCourseLearning(item, isGoLesson=false) {
            let self = this
            let courseID = self.paramsInfo.id
            let senceID = item.id
            let name = item.senceName
            let buttonStatus = item.buttonStatus
            let resumeLastRead = item.resume ? item.resume : 'NO'

            let isRedirectTo = false
            // 是否要去微课的
            if (self.shareSenceID) {
                self.shareSenceID = null
                isRedirectTo = true
                navigateToLesson({courseID, senceID,resumeLastRead: resumeLastRead, isRedirectTo})
                return
            }

            if (isGoLesson) {
                navigateToLesson({courseID, senceID, resumeLastRead: resumeLastRead, isRedirectTo})
                return
            }

            switch (buttonStatus) {
                case 'finish': // 回顾
                    self.$navigate(`/pages/course-module/course-review`, {courseID, senceID})
                    break
                case 'needPay': // 付费
                    self.$navigate(`/pages/course-module/course-pay`, {
                        courseID,
                        isLimitedTimeGiftCourse: self.courseDetail.isLimitedTimeGiftCourse,
                        giftID: self.giftID || self.paramsInfo.giftID})
                    break
                default:
                    navigateToLesson({courseID, senceID, resumeLastRead: resumeLastRead, isRedirectTo})
            }
        }
        /**
         * 获取赠一得一ID
         */
        __createGiftID() {
            let self = this
            let postData = {
                token: self.systemInfo.token,
                courseID: self.paramsInfo.id
            }

            fetch.createGiftID(postData).then((respone) => {
                self.giftID = respone
            })
        }
        /**
         * 获取普通分享ID
         */
        __createShareID() {
            let self = this
            let postData = {
                token: self.systemInfo.token,
                courseID: self.paramsInfo.id
            }

            fetch.createShareID(postData).then((respone) => {
                self.shareID = respone.shareID
            })
        }
        /**
         * 受赠者→发起送即能币
         */
        __receiveCourseShare() {
            let self = this
            if (!self.paramsInfo.shareID) {
                return
            }
            let postData = {
                token: self.systemInfo.token,
                courseID: self.paramsInfo.id,
                shareID: self.paramsInfo.shareID
            }
            fetch.receiveCourseShare(postData).then((respone) => {
                console.log('受赠者→发起送即能币', respone)
            })
        }

        /**
         * 受赠者确定领取课程
         */
        __receiveCourse() {
            let self = this
            let postData = {
                token: self.systemInfo.token,
                courseID: self.paramsInfo.id,
                giftID: self.paramsInfo.giftID
            }

            fetch.receiveCourseGift(postData).then((respone) => {
                if (1 === respone.success) {
                    self.isShowActionSheet = true
                    self.isGifter = false
                    self.actionSheetTitle = '恭喜你！领取成功',
                    self.actionSheetContent = '3天内学完所有微课，你将获得此课程。'
                    self.$apply()
                    wepy.$instance.globalData.getHuilder('课程详情页/领取点击事件', 'click', `${self.courseDetail.name}`)
                    setTimeout(()=>{
                        let item = self.courseDetail.senceList[0]
                        self.__goToCourseLearning(item, true)
                    }, 300)
                } else {
                    wx.showToast({title: respone.message})
                }
            }).catch((error) => {

            })
        }
        /**
         * 倒计时
         */
        __countDown() {
            let self = this
            clearInterval(self.timer)
            let giftCountdown = self.courseDetail.giftCountdown / 1000
            self.timer = setInterval(() => {
                if (!giftCountdown) {
                    clearInterval(self.timer)
                    self.initialize()
                }

                let dd = Math.floor(giftCountdown / 60 / 60 / 24)
                let hh = Math.floor(giftCountdown / 60 / 60 % 24)
                let mm = Math.floor(giftCountdown / 60 % 60)
                let ss = Math.floor(giftCountdown % 60)

                if (hh < 10) {
                    hh = '0' + hh
                }
                if (mm < 10) {
                    mm = '0' + mm
                }
                if (ss < 10) {
                    ss = '0' + ss
                }
                giftCountdown--
                self.countDown = `（${dd}天 ${hh}:${mm}:${ss}）`
                self.$apply()
            }, 1000)
        }
        /**
         * 微信点击统计
         * @param senceID
         * @param buttonStatus
         */
        reportButtonTap(senceID, buttonStatus) {
            let self = this
            wx.reportAnalytics('tap_to_lesson', {
                role: self.systemInfo.role,
                nickname: self.systemInfo.nickName,
                channel: self.entrance.mappers[self.entrance.scenceID],
                courseid: self.paramsInfo.id,
                senceid: senceID,
                buttonstatus: buttonStatus,
                source: self.paramsInfo.source
            })
        }
        /**
         * 中台上报埋点
         * @param
         */
        __reportStayTimestamp() {
            let self = this
            let time = new Date().getTime() - self.timestamp
            let postData = {
                token: self.systemInfo.token,
                courseID: self.paramsInfo.id,
                pageTime: time
            }

            if ('defaultToken' === self.systemInfo.token) {
                return
            }
            fetch.sendCoursePageTime(postData).then(response => {})
        }
        /** 领取课程结果
         * @param phone 手机号码
         * @param item 当前点击的哪个推荐课程
         */
        __receiveResult(phone) {
            let self = this
            let postData = {
                token: self.systemInfo.token,
                mobile: phone,
                verCode: null,
                courseID: self.paramsInfo.id
            }

            fetch.savePhone(postData).then((respone) => {
                wx.showToast({
                    title: '领取成功'
                })
                store.dispatch(refreshUserInformations({hasGift: true}))
                setTimeout(()=>{
                    let item = self.courseDetail.senceList[0]
                    self.__goToCourseLearning(item, true)
                }, 300)
            }).catch(error => {
                wx.showToast({
                    icon: 'none',
                    title: '网络错误'
                })
            })
        }
        methods = {
            /**
             * 首页免费课程
             * @param event
             */
            getFirstReceive(event) {
                let self = this
                let {detail: {encryptedData, errMsg, iv}} = event

                store.dispatch(getUserPhone(encryptedData, errMsg, iv)).then(respone => {
                    self.__receiveResult(respone)
                }).catch((error) => {

                })
            },
            /**
             * 你将获得
             * @param event
             */
            getTemplate(event) {
                let self = this
                let {currentTarget: {dataset:{type, item}}} = event
                let url = ''

                wepy.$instance.globalData.newCourseDetailTempele = item
                wepy.$instance.globalData.getHuilder('课程详情页/你将获得', 'click', `${self.courseDetail.name}/${item.title}`)

                switch (parseInt(type)){
                    case 0:
                        url = '/pages/other-module/job-skills'
                        break
                    case 1:
                        url = '/pages/other-module/work-template'
                        break
                    case 2:
                        url = '/pages/other-module/community'
                        break
                }
                if(parseInt(type) == 2) {
                    return wx.navigateTo({url: `${url}?courseName=${self.courseDetail.name}&groupImage=${self.courseDetail.receive[2].group_image}`})
                }
                wx.navigateTo({url: url})
            },
            /**
             * 推荐课程跳转到对应的新旧详情页面
             * @param event
             */
            getCourse(event) {
                let self = this
                let {currentTarget: {dataset:{item}}} = event

                wepy.$instance.globalData.getHuilder('课程详情页/为你推荐','click',`${self.courseDetail.name}/${item.courseName}`) // ga点击统计
                wx.redirectTo({url: `/pages/course-module/course-details?id=${item.courseID}&source=recommend`})
            },
            /**
             * 前往微课学习
             * @param event
             */
            getCourseLearning(event) {
                let self = this
                let {currentTarget: {dataset:{item}}} = event
                wepy.$instance.globalData.getHuilder('课程详情页/微课列表','click',`${self.courseDetail.name}/${item.senceName}`) // ga点击统计
                self.reportButtonTap(item.senceID, item.buttonStatus)
                self.__goToCourseLearning(item)
            },
            /**
             * 前往微课学习
             * @param event
             */
            getEditor(event) {
                let self = this
                let {currentTarget: {dataset:{item}}} = event
                let courseID = item.id;
                let name = item.name
                wepy.$instance.globalData.getHuilder('课程详情页/专题列表','click', `${name}`)
                return self.$navigate('/pages/SpecialCourse/index', {courseID, source: 'CourseDetailPage'})
            },
            /**
             * 一键购买
             * @returns {*}
             */
            getAllPay() {
                let self = this
                wepy.$instance.globalData.getHuilder('课程详情页/一键获取', 'click', `${self.courseDetail.name}`)
                self.$navigate(`/pages/course-module/course-pay`, {
                    courseID: self.paramsInfo.id,
                    isLimitedTimeGiftCourse: self.courseDetail.isLimitedTimeGiftCourse,
                    giftID: self.giftID || self.paramsInfo.giftID})
            },
            /**
             * 接受赠一得一，马上学习
             * @param event
             * @returns {Promise<any>}
             */
            getReceiveCourse(event) {
                let self = this
                let {detail: {encryptedData, errMsg, iv}} = event

                if (self.courseDetail.giftCountdown) {
                    let item = self.courseDetail.senceList[0]
                    self.__goToCourseLearning(item, true)
                    return
                }

                store.dispatch(getUserPhone(encryptedData, errMsg, iv)).then(respone => {
                    self.__receiveCourse(respone)
                    wepy.$instance.globalData.getHuilder('课程详情页/马上学习', 'click', `${data.senceName}`)
                }).catch((error) => {
                })
            }
        }
        events = {
            'header-info': (data) => {
                let self = this
                self.headerHeigth = data.headerHeigth
                self.$apply()
            }
        }

        onShareAppMessage(event) {
            let self = this
            let dataset = event.target && event.target.dataset
            console.log('role:', self.giftID, self.shareID)
            let title = ''
            let path = ''
            let reportType = ''

            if (dataset && dataset.role) {
                title = `${self.systemInfo.nickName} 赠送你一个好课，点击免费领`
                path = `/pages/course-module/course-details?id=${self.paramsInfo.id}&giftID=${self.giftID}&source=GiftShare`
                if (self.giftID) {
                    let postData = {
                        token: self.systemInfo.token,
                        courseID: self.paramsInfo.id,
                        giftID: self.giftID
                    }
                    // 保存giftID的信息
                    fetch.saveGiftID(postData).then((respone) => {}).catch((error) => {})
                }
                reportType = shareDictionary.RECEIVE_COURSE.type
                wepy.$instance.globalData.getHuilder('课程详情页/赠一得一', 'click', `${self.courseDetail.name}`)
            } else {
                title = `帮我助攻，跟我一起学《${self.courseDetail.name}》`
                path = `/pages/course-module/course-details?id=${self.paramsInfo.id}&shareID=${self.shareID}`
                reportType = shareDictionary.SHARE_COURSE.type
                wepy.$instance.globalData.getHuilder('课程详情页/分享', 'click', `${self.courseDetail.name}`)
                wx.reportAnalytics('share_event', {
                    role: self.systemInfo.role,
                    nickname: self.systemInfo.nickName,
                    coursename: self.courseDetail.name,
                    sencename: '/',
                    channel: self.entrance.mappers[self.entrance.scenceID],
                    type: shareDictionary.SHARE_COURSE.type
                })
                if (self.shareID) {
                    let postData = {
                        token: self.systemInfo.token,
                        courseID: self.paramsInfo.id,
                        shareID: self.shareID
                    }
                    // 保存shareID的信息
                    fetch.saveShareID(postData).then((respone) => {}).catch((error) => {})
                }
            }
            wepy.$instance.globalData.getReportFlow('share')
            fetch.reportSharing({
                token: self.systemInfo.token,
                type: reportType,
                courseID: self.paramsInfo.id
            })

            return {
                title: title,
                path: path,
                imageUrl: self.courseDetail.shareCoverImageUrl || self.courseDetail.image || ''
            }
        }
    }
</script>
