<style lang="less" scoped>
    @import "../../assets/style/theme";
    .ui-course-details-box{
        width:100%;height:100%;
        view{box-sizing:border-box;}
        .ui-board-box{
            width:100%;height:612rpx;padding:172rpx 32rpx 0;position:relative;
            .ui-header-thumb{
                width:100%;background-size:cover;background-position:top center;background-repeat:no-repeat;position:absolute;left:0;top:0;
                .cell-mask{width:100%;height:100%;background-color:@background-mask-normal;}
            }
            .ui-content{position:relative;z-index:@z-index-normal;}
            .cell-subtitle{padding-bottom:8rpx;font-size:30rpx;color:@color-white-opacity;line-height:40rpx;}
            .cell-title{
                height:136rpx;overflow:hidden;
                >text{display:block;width:500rpx;font-size:56rpx;font-weight:700;color:@color-white;line-height:68rpx;}
                button{
                    width:60rpx;height:60rpx;background:none;
                    text{font-size:60rpx;color:@color-white;}
                }
            }
        }
        .ui-introduction-board{
            width:100%;height:216rpx;padding:20rpx 24rpx 0;margin-top:20rpx;background-color:rgba(0,0,0,.27);border-radius:@border-radius-20;
            .cell-text{height:36rpx;font-size:26rpx;color:@color-white;line-height:36rpx;}
            .ui-progress{
                height:16rpx;margin:20rpx 0;border-radius:@border-radius-20;overflow:hidden;
                progress{height:100%;}
            }
            .ui-list{
                view{text-align:center;}
                view:nth-of-type(1){text-align:left}
                view:nth-of-type(4){text-align:right}
                text{display:block;padding:4rpx 0;line-height:32rpx;}
                text:nth-of-type(1){font-size:26rpx;color:@color-white-opacity;}
                text:nth-of-type(2){font-size:28rpx;color:@color-white;}
            }
        }
        .ui-title{padding:36rpx 0 20rpx;margin:0 32rpx;font-size:44rpx;font-weight:700;color:@color-black;line-height:56rpx;border-top:1rpx solid @border-gray;}
        .ui-introduction-content{
            margin:0 32rpx;font-size:30rpx;color:@color-black;text-align:left;line-height:48rpx;overflow:hidden;position:relative;
            image{width:100%;height:2250rpx;}
        }
        .cell-border{height:22rpx;}

        .ui-get-list{
            .ui-item{
                height:184rpx;padding-top:40rpx;
                .ui-icon{
                    width:80rpx;height:80rpx;margin:0 24rpx 0 32rpx;position:relative;
                    text:nth-of-type(1){font-size:40rpx;color:@color-black;position:relative;z-index:@z-index-normal;}
                    text:nth-of-type(2){font-size:88rpx;color:rgba(0,0,0,.1);position:absolute;left:-4rpx;top:-6rpx;}
                }
                .ui-content{
                    width:100%;border-bottom:1rpx solid @border-gray;position:relative;
                    text{padding:0 28rpx;margin-top:-26rpx;font-size:26rpx;color:@color-gray;position:absolute;right:0;top:50%;}
                    .cell-title{width:500rpx;padding-bottom:8rpx;font-size:34rpx;font-weight:700;color:@color-black;line-height:44rpx;}
                    .cell-subtitle{width:500rpx;height:80rpx;font-size:26rpx;color:@color-gray;line-height:40rpx;overflow:hidden;}
                }
                &:last-of-type {
                    .ui-content {border-bottom: 0;}
                }
            }
        }

        .ui-course-list{
            padding:0 32rpx 40rpx;
            .ui-item{
                width:100%;height:346rpx;padding:40rpx 32rpx;margin-top:24rpx;background-size:cover;background-repeat:no-repeat;background-position:center center;text-align:left;line-height:1;border-radius:@border-radius-20;position:relative;
                .cell-title{width:460rpx;padding-bottom:12rpx;font-size:40rpx;font-weight:700;color:@color-white;line-height:50rpx;overflow:hidden;}
                .ui-skills{
                    font-size: 26rpx;color: rgba(255,255,255,.70);
                    text{margin:8rpx;}
                }
                .cell-subtitle{font-size:26rpx;color:@color-white-opacity;line-height:36rpx;position:absolute;bottom: 40rpx;;}
                .ui-status{
                    position:absolute;right:32rpx;top:32rpx;
                    .ui-circular-progress{
                        &::before{border:6rpx solid @background-mask-white;}
                        .ui-wrapper{
                            >view{
                                &.cell-circle-right{border-top:6rpx solid @background-white;border-right:6rpx solid @background-white;}
                                &.cell-circle-left{border-bottom:6rpx solid @background-white;border-left:6rpx solid @background-white;}
                            }
                        }
                        .cell-progress-number{color:@color-white;}
                    }
                    .cell-text{font-size:46rpx;color:@color-white;line-height:68rpx;}
                    .cell-status{width:140rpx;height:60rpx;background-color:@background-mask-white;font-size:34rpx;color:@color-white;text-align:center;line-height:60rpx;border-radius:@border-radius-32;}
                }
                .cell-button{width:148rpx;height:60rpx;font-size:30rpx;font-weight:700;background-color:@background-white;color:@color-blue;border-radius:60rpx;position:absolute;right:30rpx;bottom:40rpx;}
            }
        }

        .ui-comments-box{
            background-color:#fff;padding-bottom:20rpx;
            .ui-comments-list{height:400rpx}
            .ui-swiper{
                background-color:#fff;padding-right:12rpx;box-sizing:border-box;
                .ui-item{background-color:rgba(142,143,148,.1);border-radius:@border-radius-20;height:400rpx;padding:24rpx 32rpx 46rpx;}
                .ui-top{
                    display:flex;justify-content: space-between;height: 80rpx;line-height: 80rpx;
                    .ui-user{
                        font-size:30rpx;color:@color-gray;display: flex;align-items: center;
                        .cell-name{width: 294rpx;text-overflow:ellipsis;white-space:nowrap;overflow:hidden;}
                        image{width:80rpx;height:80rpx;border-radius:50%;margin-right:12rpx;}
                    }
                    .ui-star text{margin-left:10rpx;font-size:34rpx;color:@color-blue;line-height:80rpx;}
                }
                .ui-title-box{
                    display: flex;justify-content: space-between;margin:38rpx 0 26rpx;height:44rpx;width: 100%;box-sizing:border-box;
                    .cell-title{font-size:30rpx;color:@color-black;text-overflow:ellipsis;white-space:nowrap;overflow:hidden;width: 472rpx;}
                    .cell-date{font-size:28rpx;color:@color-gray;width: 190rpx;line-height:44rpx;}
                }
                .ui-message{height:140rpx;font-size:30rpx;color:@color-black;line-height:48rpx;white-space:pre-wrap;word-break:break-all;overflow:hidden;text-overflow:ellipsis;display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:3;}
            }
        }

        .ui-recommend-list{
            margin-left:42rpx;padding-bottom:40rpx;
            .ui-item{
                height:220rpx;padding:20rpx 0;border-bottom:1rpx solid @border-gray;transform:translate(-12rpx, 0px) translateZ(0px);
                .ui-thumb{
                    width:180rpx;height:180rpx;border-radius:@border-radius-44;overflow:hidden;
                    image{width:180rpx;height:180rpx;}
                }
                .ui-content{padding:10rpx 0;margin-left:24rpx;}
                .cell-title{font-size:32rpx;font-weight:700;color:@color-black;line-height:44rpx;white-space:pre-wrap;word-break:break-all;overflow:hidden;}
                .cell-subtitle{font-size:26rpx;color:@color-gray;line-height:40rpx;overflow:hidden;}
                .ui-star{
                    padding-top:30rpx;
                    text{margin-right:12rpx;color:@color-blue;}
                }
            }
        }

        .ui-button-box{
            width:100%;height:186rpx;
            &.is-phonex{
                height:254rpx;
                .ui-container{height:254rpx;}
            }
            .ui-container{
                width:100%;height:186rpx;padding:0 32rpx;background-color:rgba(255,255,255,.9);position:fixed;left:0;bottom:0;z-index:@z-index-slightly;transform:translateY(400rpx);transition:all .5s ease-in-out;
                &.is-fixed{transform:translateY(0);}
            }
            .ui-text{
                height:62rpx;line-height:62rpx;
                text:nth-of-type(1){font-size:30rpx;color:@color-black;}
                text:nth-of-type(2){font-size:44rpx;font-weight:700;color:@color-black;}
                .cell-currency{font-size:30rpx;}
            }
            .ui-button-list{
                &.ui-column button:nth-of-type(1){
                    width:100%;background-color:@background-blue;color:@color-white;
                }
                button{width:326rpx;height:100rpx;font-size:35rpx;font-weight:700;border-radius:@border-radius-20;line-height: 100rpx;}
                button:nth-of-type(1){background-color:@background-gray-F4;color:@color-blue;}
                button:nth-of-type(2){background-color:@background-blue;color:@color-white;}
            }
        }
    }
</style>

<template>
    <jn-loading wx:if="{{!isLoaded}}"></jn-loading>
    <view class="ui-course-details-box">
        <jn-header :className.sync="headerBackground"></jn-header>

        <view class="ui-board-box">
            <view class="ui-header-thumb" style="height: calc(100% + {{headerHeigth}}px);top:-{{headerHeigth}}px;background-image:url({{courseDetail.image}})">
                <view class="cell-mask"></view>
            </view>
            <view class="ui-content">
                <view class="cell-subtitle">{{courseDetail.courseSkill}}</view>
                <view class="cell-title main-justify">
                    <text>{{courseDetail.name}}</text>
                    <button class="main-center cross-center" open-type="share">
                        <text class="icon-share"></text>
                    </button>
                </view>
                <view class="ui-introduction-board">
                    <view class="cell-text main-justify">
                        <view><text>概况</text></view>
                        <view><text class="icon-complete"></text><text> {{courseDetail.progress}}%</text></view>
                    </view>
                    <view class="ui-progress">
                        <progress percent="{{courseDetail.progress}}" color="#fff" backgroundColor="rgba(255,255,255,.6)" />
                    </view>
                    <view class="ui-list box-mean">
                        <view class="dir-top main-justify"><text>微课</text><text>{{courseDetail.senceCount}}节</text></view>
                        <view class="dir-top main-justify"><text>学习时长</text><text>{{courseDetail.courseMinute}}分钟</text></view>
                        <view class="dir-top main-justify"><text>测练</text><text>{{courseDetail.practiceCount}}道</text></view>
                        <view class="dir-top main-justify"><text>正在学</text><text>{{courseDetail.userCount}}人</text></view>
                    </view>
                </view>
            </view>
        </view>

        <view class="ui-title">课程概述</view>
        <view class="ui-introduction-content">
            <text>{{courseDetail.textDescription}}</text>
            <image mode="aspectFit" src="{{courseDetail.imageList}}" wx:if="{{courseDetail.imageList}}"></image>
        </view>
        <view class="cell-border"></view>

        <view class="ui-title" wx:if="{{courseDetail.receive.length}}">你将获得</view>
        <view class="ui-get-list">
            <repeat for="{{courseDetail.receive}}" key="index" index="index" item="item">
                <view class="ui-item flex"
                      hover-stay-time="100"
                      data-type="{{index}}"
                      data-item="{{item}}"
                      @tap.stop="getTemplate">
                    <view class="ui-icon flex-box-0 main-center cross-center">
                        <text class="{{index==0 ? 'icon-job-skills' : index==1 ? 'icon-work-template' : 'icon-community'}}"></text>
                        <text class="icon-app-icon"></text>
                    </view>
                    <view class="ui-content">
                        <view class="cell-title">{{item.title}}</view>
                        <view class="cell-subtitle">{{item.remark}}</view>
                        <text class="icon-details"></text>
                    </view>
                </view>
            </repeat>
        </view>

        <view class="ui-title">微课列表</view>
        <view class="ui-course-list">
            <form bindsubmit="handleSavePushCode" report-submit>
                <repeat for="{{courseDetail.senceList}}" key="index" index="index" item="item">
                    <button class="ui-item"
                            style="background-image:url({{item.coverImageURL}})"
                            hover-stay-time="100"
                            form-type="{{isTokenSet ? 'submit': ''}}"
                            open-type="{{!isTokenSet ? 'getUserInfo': ''}}"
                            bindgetuserinfo="getAuthorize"
                            data-item="{{item}}"
                            @tap.stop="getCourseLearning">
                        <view class="cell-title">{{item.senceName}}</view>
                        <view class="ui-skills">
                            <text class="icon-study-bar"></text>{{item.labelName}}
                        </view>
                        <view class="cell-subtitle">{{item.senceTarget}}</view>

                        <view class="ui-status">
                            <text class="icon-lock cell-text" wx:if="{{item.buttonStatus=='needPay'}}"></text>
                            <view class="cell-status" wx:elif="{{item.buttonStatus=='notBeginOrTry'}}">即学</view>
                            <view class="ui-circular-progress" wx:else>
                                <view class="cell-progress-number main-center cross-center">{{item.progress || 0}}%</view>
                                <view class="ui-wrapper ui-right">
                                    <view class="cell-circle-right" style="transform:rotate({{item.progress <= 50 ? (-135 + 3.6 * item.progress) : 45}}deg);"></view>
                                </view>
                                <view class="ui-wrapper ui-left">
                                    <view class="cell-circle-left" style="transform:rotate({{item.progress > 50 ? (-135 + 3.6 * (item.progress - 50)) : -135}}deg);"></view></view>
                            </view>
                        </view>

                        <!--<view class="cell-button main-center cross-center">{{item.buttonStatusMsg}}</view>-->
                    </button>
                </repeat>
            </form>
        </view>

        <view class="ui-title" wx:if="{{courseDetail.feedbackList.length}}">精选评价</view>
        <view class="ui-comments-box" wx:if="{{courseDetail.feedbackList.length}}">
            <swiper class="ui-comments-list"
                next-margin="28rpx" previous-margin="38rpx">
                <block wx:for="{{courseDetail.feedbackList}}"
                    wx:index="{{ index }}" wx:key="{{ index }}" wx:for-item="item">
                    <swiper-item class="ui-swiper">
                        <view class="ui-item">
                            <view class="ui-top">
                                <view class="ui-user">
                                    <image mode="scaleToFill" src="{{item.avatarUrl}}"/>
                                    <view class="cell-name">{{item.nickName}}</view>
                                </view>
                                <view class="ui-star">
                                    <text class="{{item.star>=1 ? 'icon-selete-star' : 'icon-not-star'}}"></text>
                                    <text class="{{item.star>=2 ? 'icon-selete-star' : 'icon-not-star'}}"></text>
                                    <text class="{{item.star>=3 ? 'icon-selete-star' : 'icon-not-star'}}"></text>
                                    <text class="{{item.star>=4 ? 'icon-selete-star' : 'icon-not-star'}}"></text>
                                    <text class="{{item.star>=5 ? 'icon-selete-star' : 'icon-not-star'}}"></text>
                                </view>
                            </view>
                            <view class="ui-title-box">
                                <view class="cell-title">[{{item.name}}]</view>
                                <view class="cell-date">{{item.feedbackTime}}</view>
                            </view>
                            <view class="ui-message wrap-nowrap">{{item.showMessage}}</view>
                        </view>
                    </swiper-item>
                </block>
            </swiper>
        </view>

        <view class="ui-title" wx:if="{{courseDetail.courseLink.length}}">为你推荐</view>
        <view class="ui-recommend-list">
            <repeat for="{{courseDetail.courseLink}}" key="index" index="index" item="item">
                <view class="ui-item dir-left" hover-stay-time="100" data-item="{{item}}" @tap.stop="getCourse">
                    <view class="ui-thumb"><image mode="scaleToFill" src="{{item.courseImage}}"></image></view>
                    <view class="ui-content">
                        <view class="cell-title">{{item.courseName}}</view>
                        <view class="cell-subtitle">{{item.courseSkill}}</view>
                        <view class="ui-star">
                            <text class="{{item.courseStar>=1 ? 'icon-selete-star' : 'icon-not-star'}}"></text>
                            <text class="{{item.courseStar>=1 ? 'icon-selete-star' : 'icon-not-star'}}"></text>
                            <text class="{{item.courseStar>=1 ? 'icon-selete-star' : 'icon-not-star'}}"></text>
                            <text class="{{item.courseStar>=1 ? 'icon-selete-star' : 'icon-not-star'}}"></text>
                            <text class="{{item.courseStar>=1 ? 'icon-selete-star' : 'icon-not-star'}}"></text>
                        </view>
                    </view>
                </view>
            </repeat>
        </view>

        <view class="ui-button-box" :class="{'is-phonex': isIphonex}" wx:if="{{!courseDetail.isLimitedTimeGiftCourse && courseDetail.price>0}}">
            <view class="ui-container" :class="{'is-fixed': isFixed}">
                <view class="ui-text main-justify">
                    <text>获取整个课程</text>
                    <text>{{courseDetail.price}} <text class="cell-currency">即能币</text></text>
                </view>
                <view class="ui-button-list ui-column">
                    <button open-type="{{!isTokenSet ? 'getUserInfo': ''}}"
                        bindgetuserinfo="getAuthorize"
                        hover-stay-time="100"
                        @tap.stop="getAllPay">{{price ? '已获取' : '一键获取'}}</button>
                </view>
            </view>
        </view>

        <view wx:if="{{courseDetail.isLimitedTimeGiftCourse}}">
            <view class="ui-button-box" :class="{'is-phonex': isIphonex}" wx:if="{{(courseDetail.hasGiftState && courseDetail.roleType == 'gifter' && courseDetail.price>0) ||  (courseDetail.hasGiftState && courseDetail.roleType == 'receiver' && courseDetail.giftButtonMsg == '赠一得一')}}">
                <view class="ui-container" :class="{'is-fixed': isFixed}">
                    <view class="ui-text main-center">
                        <text>好友成功领取后，你将获得此课程</text>
                    </view>
                    <view class="ui-button-list main-justify">
                        <button open-type="{{!isTokenSet ? 'getUserInfo': ''}}"
                                bindgetuserinfo="getAuthorize"
                                hover-stay-time="100"
                                @tap.stop="getAllPay">{{courseDetail.price}} 即能币</button>
                        <button open-type="{{!isTokenSet ? 'getUserInfo': 'share'}}"
                                data-role="1"
                                bindgetuserinfo="getAuthorize"
                                hover-stay-time="100">{{courseDetail.giftButtonMsg}}</button>
                    </view>
                </view>
            </view>

            <view class="ui-button-box" :class="{'is-phonex': isIphonex}" wx:if="{{(courseDetail.hasGiftState && courseDetail.roleType == 'receiver' && courseDetail.giftButtonMsg != '赠一得一') || (courseDetail.roleType=='receiver' && courseDetail.giftButtonMsg=='马上领取') || isGifter}}">
                <view class="ui-container is-fixed">
                    <view class="ui-text main-center">
                        <text>3天内学完所有微课，你将获得此课程。</text>
                    </view>
                    <view class="ui-button-list ui-column">
                        <button open-type="{{!isTokenSet ? 'getUserInfo': ''}}"
                                data-role="2"
                                bindgetuserinfo="getAuthorize"
                                hover-stay-time="100"
                                @tap.stop="getReceiveCourse">{{courseDetail.giftButtonMsg}}{{countDown}}</button>
                    </view>
                </view>
            </view>
        </view>
    </view>
    <jn-actionSheet :isShow.sync="isShowActionSheet"
            :title.sync="actionSheetTitle"
            :content.sync="actionSheetContent"
            buttonConfirm='我知道了'></jn-actionSheet>
</template>

<script>
    import wepy from 'wepy'
    import {getStore, connect} from 'wepy-redux'
    import header from '../../components/common/header'
    import Loading from '../../components/common/loading'
    import actionSheet from '../../components/common/actionSheet'
    import {course as courseApi, share as shareApi, registered as fetch} from '../../api'
    import PushMixin from "../../mixins/push"
    import {initializationDeligate, navigateToLesson, shareDictionary, getStorageAsync} from '../../utils'
    import {CustomError} from '../../errors'
    import {login} from '../../redux/models/user'
    import _ from 'underscore'

    const store = getStore()
    @connect({
        systemInfo(state) {
            return state.user
        },
        isTokenSet(state) {
            return state.user.token.startsWith('userID')
        },
        entrance(state) {//全局场景值
            return state.entrance
        }
    })
    export default class courseDetails extends wepy.page {
        mixins = [PushMixin]

        components = {
            'jn-header': header,
            'jn-loading': Loading,
            'jn-actionSheet': actionSheet
        }

        data = {
            headerHeigth: 68,
            headerBackground: 'background-transparent',
            isIphonex: /iphone10|iphone x/i.test(wx.getSystemInfoSync().model),
            isFixed: false,
            timestamp: new Date().getTime(),
            backgroundHeight: 0,
            targetScroll: 0,
            isLoaded: false,
            shareSenceID: null, // 分享进来的微课id
            paramsInfo: {}, // 接受地址栏传进来的值
            roleType: 'gifter', // {赠送者: gifter, 受赠者: receiver}
            giftID: '',
            isGifter: false,
            courseDetail: {}, // 课程详情
            countDown: '', // 倒计时事件
            timer: null, // 定时器
            isReceived: false, // 已经领取过了
            isReceive: false,
            isShowActionSheet: false,
            actionSheetTitle: '',
            actionSheetContent: ''
        }

        onLoad(parameter) {
            let self = this
            console.log('课程详情', parameter)
            self.paramsInfo = parameter
            self.paramsInfo.source = self.paramsInfo.source
            // 是否是通过识别小程序号且有scenceID，说明是微课分享进来的，要重定向到微课
            let codeType = getStore().getState().entrance.scenceID
            let isCode = _.indexOf([1047, 1048, 1049, 1089], codeType)
            if (-1 !== isCode && parameter.senceID) {
                self.shareSenceID = parameter.senceID
            }

            if ('defaultToken' === self.systemInfo.token) {
                console.log(11, self.systemInfo.token)
                let storageToken = wx.getStorageSync("token") || 'defaultToken'
                self.initialize({token: storageToken})
            } else {
                console.log(22, self.systemInfo.token)
                initializationDeligate({initializeFunc: self.initialize.bind(self, true)})
            }
        }
        onShow() {
            let self = this
            self.courseDetail && self.courseDetail.senceList && self.courseDetail.senceList.length && self.initialize()
        }
        onReady() {
            let self = this
            wx.createSelectorQuery().select('.ui-course-list').boundingClientRect((rect) => {
                self.targetScroll = rect.top - 200
            }).exec()

            wx.createSelectorQuery().select('.ui-header-thumb').boundingClientRect((rect) => {
                self.backgroundHeight = rect.height - 50
            }).exec()
        }
        onUnload() {
            let self = this
            clearInterval(self.timer)
            self.__reportStayTimestamp()
        }
        onHide() {
            let self = this
            self.__reportStayTimestamp()
        }
        /**
         * 监听滚动条的位置
         * @param
         */
        onPageScroll(res) {
            let self = this

            self.isFixed = res.scrollTop > self.targetScroll ? true : false
            self.headerBackground = res.scrollTop > self.backgroundHeight ? 'background-transparent-opacity' : 'background-transparent'
            self.$apply()
        }
        /**
         * 初始化
         */
        initialize(params) {
            let self = this
            let postData = {
                token: params && params.token || self.systemInfo.token,
                courseID: self.paramsInfo.id,
                source: self.paramsInfo.source
            }
            if (self.paramsInfo.wxPushType) {
                postData.wxPushType = self.paramsInfo.wxPushType
            }
            if (self.paramsInfo.giftID) {
                postData.giftID = self.paramsInfo.giftID
                self.isGifter = true
            }

            fetch.courseDetail(postData).then((respone) => {
                if (!respone.courseLink) {
                    respone.courseLink = []
                }
                self.courseDetail = respone
                _.each(self.courseDetail.senceList, (item) => {
                    if (!self.isTokenSet) {
                        item.buttonStatusMsg = '即学'
                    } else if ('needPay' === item.buttonStatus) {
                        item.buttonStatusMsg = item.sencePrice
                    }
                })
                self.courseDetail.price = parseFloat(self.courseDetail.price)

                // 微课分享进来重定向
                if (self.shareSenceID && 'defaultToken' !== postData.token) {
                    let senceItem = _.find(self.courseDetail.senceList, {id: self.shareSenceID})
                    if ('finish' === senceItem.buttonStatus) {
                        senceItem.buttonStatus = ''
                        self.__goToCourseLearning(senceItem)
                        return
                    }
                    if ('needPay' !== senceItem.buttonStatus) {
                        self.__goToCourseLearning(senceItem)
                        return
                    }
                }
                self.isLoaded = true

                if ('receiver' === self.courseDetail.roleType && self.courseDetail.giftCountdown) {
                    self.isReceive = true
                    self.$apply()
                    self.__countDown()
                }
                // 是受赠者且未登录，显示马上领取
                if (self.paramsInfo.giftID && 'defaultToken' === postData.token) {
                    self.courseDetail.giftButtonMsg = '马上领取'
                } else {
                    self.courseDetail.giftButtonMsg = self.courseDetail.giftButtonMsg || '赠一得一'
                    if ('赠一得一' === self.courseDetail.giftButtonMsg) {
                        self.isGifter = false
                    }
                }

                if (self.courseDetail.hasGiftState
                    && 'receiver' === self.courseDetail.roleType
                    && '马上领取' === self.courseDetail.giftButtonMsg
                    && !self.isReceived) {
                    self.__receiveCourse()
                    return
                }

                self.$apply()
                wepy.$instance.globalData.getLoadHuilder({pageTheme: self.courseDetail.name}) // ga统计
                wx.reportAnalytics('coursedetail_pageload', {
                    role: self.systemInfo.role,
                    nickname: self.systemInfo.name,
                    channel: self.entrance.mappers[self.entrance.scenceID],
                    courseid: self.paramsInfo.id,
                    source: self.paramsInfo.source
                })
            }).catch(error => {
                self.isLoaded = true
            })

            if (self.isTokenSet && !self.paramsInfo.giftID) {
                self.__getGiftID()
            }
        }
        /**
         * 去微课学习页面
         * @param item 当前微课的信息
         * @returns {*}
         * @private
         */
        __goToCourseLearning(item) {
            let self = this
            let courseID = self.paramsInfo.id
            let senceID = item.id
            let name = item.senceName
            let buttonStatus = item.buttonStatus
            let resumeLastRead = item.resume ? item.resume : 'NO'

            let isNewSence = self.courseDetail.isNewSenceMap[senceID]
            let isRedirectTo = false
            if (self.shareSenceID) {
                self.shareSenceID = null
                isRedirectTo = true
                navigateToLesson({courseID, senceID,resumeLastRead: resumeLastRead, isNewSence, isRedirectTo})
                return
            }

            switch (buttonStatus) {
                case 'finish': // 回顾
                    self.$navigate(`/pages/Review/index`, {courseID, senceID})
                    break
                case 'needPay': // 付费
                    self.$navigate(`/pages/course-module/course-pay`, {courseID})
                    break
                default:
                    navigateToLesson({courseID, senceID,resumeLastRead: resumeLastRead,  isNewSence, isRedirectTo})
            }
        }
        /**
         * 获取赠一得一ID
         */
        __getGiftID() {
            let self = this
            let postData = {
                token: self.systemInfo.token,
                courseID: self.paramsInfo.id
            }

            fetch.createGiftID(postData).then((respone) => {
                self.giftID = respone
            })
        }
        /**
         * 受赠者确定领取课程
         */
        __receiveCourse() {
            let self = this
            let postData = {
                token: self.systemInfo.token,
                courseID: self.paramsInfo.id,
                giftID: self.paramsInfo.giftID
            }
            if (self.isReceived) {
                return
            }
            fetch.receiveCourseGift(postData).then((respone) => {
                self.isReceive = true
                self.isReceived = true
                self.$apply()
                self.initialize()
                if (1 === respone.success) {
                    self.isShowActionSheet = true
                    self.isGifter = false
                    self.actionSheetTitle = '恭喜你！领取成功',
                    self.actionSheetContent = '3天内学完所有微课，你将获得此课程。'
                    self.$apply()
                    wepy.$instance.globalData.getHuilder('课程详情页/领取点击事件', 'click', `${self.courseDetail.name}`)
                } else {
                    !self.isReceive && wx.showToast({title: respone.message})
                }
            }).catch((error) => {

            })
        }
        /**
         * 倒计时
         */
        __countDown() {
            let self = this
            clearInterval(self.timer)
            let giftCountdown = self.courseDetail.giftCountdown / 1000
            self.timer = setInterval(() => {
                if (!giftCountdown) {
                    clearInterval(self.timer)
                    self.initialize()
                }

                let dd = Math.floor(giftCountdown / 60 / 60 / 24)
                let hh = Math.floor(giftCountdown / 60 / 60 % 24)
                let mm = Math.floor(giftCountdown / 60 % 60)
                let ss = Math.floor(giftCountdown % 60)

                if (hh < 10) {
                    hh = '0' + hh
                }
                if (mm < 10) {
                    mm = '0' + mm
                }
                if (ss < 10) {
                    ss = '0' + ss
                }
                giftCountdown--
                self.countDown = `（${dd}天 ${hh}:${mm}:${ss}）`
                self.$apply()
            }, 1000)
        }
        /**
         * 微信点击统计
         * @param senceID
         * @param buttonStatus
         */
        reportButtonTap(senceID, buttonStatus) {
            let self = this
            wx.reportAnalytics('tap_to_lesson', {
                role: self.systemInfo.role,
                nickname: self.systemInfo.name,
                channel: self.entrance.mappers[self.entrance.scenceID],
                courseid: self.paramsInfo.id,
                senceid: senceID,
                buttonstatus: buttonStatus,
                source: self.paramsInfo.source
            })
        }
        /**
         * 中台上报埋点
         * @param
         */
        __reportStayTimestamp() {
            let self = this
            let time = new Date().getTime() - self.timestamp
            let postData = {
                token: self.systemInfo.token,
                courseID: self.paramsInfo.id,
                pageTime: time
            }
            courseApi.sendCoursePageTime(postData).then(response => {})
        }
        methods = {
            /**
             * 你将获得
             * @param event
             */
            getTemplate(event) {
                let self = this
                let {currentTarget: {dataset:{type, item}}} = event
                let url = ''

                wepy.$instance.globalData.newCourseDetailTempele = item
                wepy.$instance.globalData.getHuilder('新课程详情页/你将获得', 'click', `${self.courseDetail.name}/${item.title}`)
                switch (parseInt(type)){
                    case 0:
                        url = '/pages/other-module/job-skills'
                        break
                    case 1:
                        url = '/pages/other-module/work-template'
                        break
                    case 2:
                        url = '/pages/other-module/community'
                        break
                }
                wx.navigateTo({url: url})
            },
            /**
             * 推荐课程跳转到对应的新旧详情页面
             * @param event
             */
            getCourse(event) {
                let self = this
                let {currentTarget: {dataset:{item}}} = event

                wepy.$instance.globalData.getHuilder('新版课程详情页/为你推荐','click',`${self.courseDetail.name}/${item.courseName}`) // ga点击统计
                wx.redirectTo({url: `/pages/course-module/course-details?id=${item.courseID}&source=recommend`})
            },
            /**
             * 前往微课学习
             * @param event
             */
            getCourseLearning(event) {
                let self = this
                if (!self.isTokenSet) {
                    return
                }

                let {currentTarget: {dataset:{item}}} = event
                wepy.$instance.globalData.getHuilder('新版课程详情页/微课列表','click',`${self.courseDetail.name}/${item.senceName}`) // ga点击统计
                self.reportButtonTap(item.senceID, item.buttonStatus)
                self.__goToCourseLearning(item)
            },
            /**
             * 一键购买
             * @returns {*}
             */
            getAllPay() {
                let self = this
                if (!self.isTokenSet) {
                    return
                }

                wepy.$instance.globalData.getHuilder('新课程详情页/一键获取', 'click', `${self.courseDetail.name}`)
                return self.$navigate('/pages/course-module/course-pay', {courseID: self.paramsInfo.id})
            },
            /**
             * 授权登录信息
             * @param event
             * @returns {Promise<any>}
             */
            getAuthorize(event) {
                let self = this
                let {detail: {errMsg}, currentTarget: {dataset:{item, role}}} = event

                if (self.isTokenSet) {
                    return
                }
                return new Promise((resolve, reject) => {
                    if (errMsg === 'getUserInfo:fail auth deny') throw new CustomError('用户拒绝授权')
                    if (errMsg && errMsg.includes('fail')) throw new CustomError('用户授权失败')

                    resolve(errMsg)
                }).then(userInfo => { // 确定授权
                    return store.dispatch(login())
                }).then((respone) => { // 授权成功
                    if (1 == role) { // 赠送者：赠一得一
                        self.initialize()
                        return
                    }
                    if (2 == role) {// 受赠者：领取课程
                        self.initialize()
                        return
                    }
                    item ? self.__goToCourseLearning(item) : self.$navigate('/pages/course-module/course-pay', {courseID: self.paramsInfo.id})
                }).catch(error => { // 拒接授权

                })
            },
            /**
             * 接受赠一得一，马上学习
             * @param event
             * @returns {Promise<any>}
             */
            getReceiveCourse() {
                let self = this
                if (!self.isTokenSet || !self.isReceive) {
                    return
                }
                self.__receiveCourse()

                // 如果已经领取了，则依次跑去未学习的微课
                let data = _.find(self.courseDetail.senceList, (item) => {
                    if ('finish' !== item.buttonStatus || 'needPay' !== item.buttonStatus) {
                        return item
                    }
                })

                if (data) {
                    self.__goToCourseLearning(data)
                    wepy.$instance.globalData.getHuilder('课程详情页/马上学习', 'click', `${data.senceName}`)
                }
            }
        }
        events = {
            'header-info': (data) => {
                let self = this
                self.headerHeigth = data.headerHeigth
                self.$apply()
            }
        }

        onShareAppMessage(event) {
            let self = this
            let dataset = event.target.dataset

            let path = ''
            let reportType = ''
            if (dataset && dataset.role) {
                path = `/pages/course-module/course-details?id=${self.paramsInfo.id}&giftID=${self.giftID}`
                reportType = shareDictionary.RECEIVE_COURSE.type
                wepy.$instance.globalData.getHuilder('课程详情页/赠一得一', 'click', `${self.courseDetail.name}`)
            } else {
                path = `/pages/course-module/course-details?id=${self.paramsInfo.id}`
                reportType = shareDictionary.SHARE_COURSE.type
                wepy.$instance.globalData.getHuilder('课程详情页/分享', 'click', `${self.courseDetail.name}`)
                wx.reportAnalytics('share_event', {
                    role: self.systemInfo.role,
                    nickname: self.systemInfo.name,
                    coursename: self.courseDetail.name,
                    sencename: '/',
                    channel: self.entrance.mappers[self.entrance.scenceID],
                    type: shareDictionary.SHARE_COURSE.type
                })
            }

            shareApi.reportSharing({
                token: self.systemInfo.token,
                type: reportType,
                courseID: self.paramsInfo.id
            })

            return {
                title: `${self.systemInfo.name} 赠送你一个好课，立即领取`,
                path: path
            }
        }
    }
</script>
