<style lang="less" scoped>
    @import "../../assets/style/theme";
    .ui-clear-button{width:160rpx;background-color:rgba(0,0,0,.3);font-size:24rpx;color:#fff;position:fixed;right:10rpx;top:20%;z-index:50;}
    .ui-container{width:100%;height:100%;background-color:#fff;position:relative;text-align:center;}
    .ui-clear{width:100%;height:120rpx;}
    /* 头部 */
    .ui-course-header{
        height:72rpx;padding:0 32rpx;box-sizing:border-box;
        .cell-title{font-size:68rpx;font-weight:700;}
    }
    /* 课程系列入口 */
    .ui-course-series{
        margin-bottom:20rpx;
        .ui-tip{
            padding: 0 30rpx;margin:28rpx 0 20rpx;display: flex;justify-content: space-between;
            .cell-all{color:@color-blue;font-size: 34rpx}
            .cell-title{font-size:44rpx;color:@color-black;font-weight: bold;}
        }
        .ui-content{
            .ui-item{
                display: flex;height: 100rpx;align-items: center;padding:0 40rpx;box-sizing:border-box;background:none;
                .ui-img{
                    margin-right: 32rpx;display: flex;align-items: center;height: 100rpx;
                    image{width: 60rpx;height: 60rpx;border-radius: @border-radius-8;}
                }
                .cell-name{
                    font-size: 40rpx;color: @color-black;display: flex;flex: 1;height: 100rpx;align-items: center;

                }
            }
            .ui-item-hover{background: @background-mask-normal-2;}
        }
        .cell-border{height: 20rpx;width: 674rpx;border-bottom:2rpx solid @border-gray;margin: 0 30rpx;}
    }
    /* 最新上线入口 */
    .ui-new-course{
        padding-top: 26rpx;
        .cell-tip{
            font-size:44rpx;color:@color-black;text-align:left;font-weight: bold;padding-left: 30rpx;margin-bottom: 22rpx;
            text{color:@color-red;}
        }
        .ui-swiper-list{
            height: 476rpx;
            .ui-item{
                &::before{width:460rpx;}
            }
            .cell-border{position:absolute;bottom:0;left: 0;height: 14rpx;width: 674rpx;border-bottom:2rpx solid @border-gray;}
        }
    }
    .ui-hot-course{
        padding-top:36rpx;
        .cell-tip{font-size:44rpx;color:@color-black;text-align:left;font-weight: bold;padding-left: 30rpx;}
        .ui-swiper-list{
            height:496rpx;
            .ui-item{
                padding:32rpx 10rpx 32rpx 0;
            }
            .cell-border{position:absolute;bottom:0;left: 0;height: 14rpx;width: 674rpx;border-bottom:2rpx solid @border-gray;}
        }
    }
    /* 最新推荐 */
    .ui-recommend{
        padding-top:20rpx;text-align: left;
        .ui-swiper-list{
            height: 476rpx;
            .ui-item{
                box-sizing:border-box;
                .ui-content-box{
                    margin-bottom:40rpx;width: 674rpx;overflow:hidden;height: 430rpx;border-radius: @border-radius-12;position: relative;background-position:center center;background-size:100% auto;
                    .ui-shadow{
                        position: absolute;left: 0;top: 0;right: 0;bottom: 0;background: rgba(0, 0, 0, .4);padding:26rpx 0 48rpx 32rpx;box-sizing:border-box;text-align:left;
                        .cell-tip{font-size: 30rpx;color:rgba(255,255,255,0.6);}
                        .cell-name{font-size: 48rpx;color:@color-white;font-weight:bold;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;margin:178rpx 0 12rpx;line-height: 1}
                        .cell-dec{font-size: 32rpx;color:rgba(255,255,255,0.6);white-space:nowrap;text-overflow:ellipsis;overflow:hidden;}
                    }
                }
                .cell-margin{height:40rpx;border-top:1rpx solid @border-gray;width: 674rpx;}
            }
        }
        .ui-border{width:674rpx;height:2rpx;}
    }
    /* 新人礼包 */
    .ui-gift{
        width:160rpx;height:160rpx;position:fixed;right:28rpx;bottom:140rpx;z-index:35;
        .cell-icon{
            width:44rpx;height:44rpx;text-align:center;line-height:44rpx;position:absolute;right:-12rpx;top:-40rpx;
            &::before{content:' ';width:24rpx;height:24rpx;background-color:#fff;position:absolute;left:22rpx;top:22rpx;}
            text{font-size:44rpx;color:rgba(0,0,0,.8);position:relative;}
        }
        button{background:none;}
        image{width:160rpx;height:160rpx;}
    }
    .ui-registed-toast{
        position: absolute;bottom:110rpx;left:24rpx;
        image{height: 84rpx;width: 452rpx;}
    }
</style>

<template>
    <jn-loading wx:if="{{ !isLoaded }}"></jn-loading>
    <jn-course-series wx:if="{{ true }}"
        :isShowCourseSeries.sync="isShowCourseSeries" :CourseSeriesList.sync="courseSeriesModalList"
        @onClickBack.user="OnClickBack" @on-all-series.user="getCategory">
    </jn-course-series>
    <evaluate-modal wx:if="{{ isLoaded }}" :isShowEvaluate.sync="isShowEvaluate"></evaluate-modal>
    <scroll-view
        wx:if="{{ isLoaded }}"
        class="ui-container"
        scroll-with-animation
        enable-back-to-top
        scroll-y="{{isScroll}}"
        bindscroll="getScroll">
        <jn-header hiddenButton className="background-transparent" statusBackground="#fff"></jn-header>

        <form bindsubmit="handleSavePushCode" report-submit>
            <view class="ui-course-header main-justify cross-center">
                <view class="cell-title">课程</view>
                <button class="module-avatar flex-box-0"
                        open-type="getUserInfo"
                        bindgetuserinfo="getAuthorize"><image src="{{avatar}}"></image></button>
            </view>
            <view wx:if="{{recommendCourseList.length}}" class="ui-recommend">
                <swiper class="ui-swiper-list"
                        interval="7000"
                        duration="300"
                        previous-margin="34rpx"
                        next-margin="24rpx">
                    <block wx:for="{{recommendCourseList}}" wx:index="{{ index }}" wx:key="{{ index }}">
                        <swiper-item class="ui-item">
                            <button class="ui-content-box"
                                    form-type="submit" hover-stay-time="100"
                                    @tap.stop="getCourseDetail" data-item="{{item}}" data-type="1"
                                    style="background-image:url('{{item.image}}')">
                                <view class="ui-shadow">
                                    <view class="cell-tip">{{item.sceneType}}</view>
                                    <view class="cell-name">{{item.name}}</view>
                                    <view class="cell-dec">{{item.showPoint}}</view>
                                </view>
                            </button>
                            <view class="cell-margin"></view>
                        </swiper-item>
                    </block>
                </swiper>
            </view>

            <view class="ui-new-course">
                <view class="cell-tip"><text>限时</text>赠一得一</view>

                <swiper class="ui-swiper-list"
                        previous-margin="30rpx"
                        next-margin="20rpx">
                    <repeat for="{{limitedTimeGiftCourseList}}" key="index" index="index" item="data">
                        <swiper-item class="module-course-box size-small">
                            <repeat for="{{data}}" key="number" index="number" item="item">
                                <button class="ui-item flex"
                                        hover-stay-time="100"
                                        data-item="{{item}}"
                                        form-type="submit"
                                        data-type="4"
                                        @tap.stop="getCourseDetail">
                                    <view class="cell-thumb flex-box-0">
                                        <image mode="aspectFit" src="{{item.image}}"></image>
                                    </view>
                                    <view class="ui-content flex cross-center">
                                        <view class="ui-info">
                                            <view class="cell-title">{{item.name}}</view>
                                            <view class="cell-description">{{item.showPoint}}…</view>
                                        </view>
                                        <view class="cell-button flex-box-0">
                                            <button>免费领</button>
                                        </view>
                                    </view>
                                </button>
                            </repeat>
                            <view class="cell-border"></view>
                        </swiper-item>
                    </repeat>
                </swiper>
            </view>

            <view class="ui-hot-course">
                <view class="cell-tip">热门课程</view>
                <swiper class="ui-swiper-list"
                        previous-margin="30rpx"
                        next-margin="20rpx">
                    <repeat for="{{hotCourseList}}" key="index" index="index" item="data">
                        <swiper-item class="module-course-box">
                            <repeat for="{{data}}" key="number" index="number" item="item">
                                <button class="ui-item flex"
                                        hover-stay-time="100"
                                        form-type="submit"
                                        data-item="{{item}}"
                                        data-type="3"
                                        @tap.stop="getCourseDetail">
                                    <view class="cell-thumb flex-box-0">
                                        <image mode="aspectFit" src="{{item.image}}"></image>
                                    </view>
                                    <view class="ui-content dir-top main-justify">
                                        <view class="cell-title">{{item.name}}</view>
                                        <view class="cell-description">{{item.showPoint}}…</view>
                                        <view class="cell-button flex">
                                            <button>获取</button><text>{{item.userCount}}人已学</text>
                                        </view>
                                    </view>
                                </button>
                            </repeat>
                            <view class="cell-border"></view>
                        </swiper-item>
                    </repeat>
                </swiper>
            </view>

            <view class="ui-course-series">
                <view class="ui-tip">
                    <view class="cell-title">热门系列</view>
                    <view class="cell-all" @tap.stop="getAllSeries" data-item="{{courseSeriesList}}">查看全部</view>
                </view>
                <view class="ui-content">
                    <repeat for="{{courseSeriesList}}" key="index" index="index" item="item">
                        <button class="ui-item"
                                hover-class="ui-item-hover"
                                hover-stay-time="100"
                                data-index="{{index}}"
                                data-item="{{item}}"
                                form-type="submit"
                                @tap.stop="getCategory"
                                wx:if="{{index <= 4}}">
                            <view class="ui-img">
                                <image src="{{item.icon}}" mode="scaleToFill"></image>
                            </view>
                            <view class="cell-name">{{item.seriesName}}</view>
                        </button>
                    </repeat>
                </view>
                <view class="cell-border"></view>
            </view>

            <view class="ui-new-course">
                <view class="cell-tip">最新上线</view>
                <swiper class="ui-swiper-list"
                        previous-margin="40rpx"
                        next-margin="20rpx">
                    <repeat for="{{newCourseList}}" key="index" index="index" item="data">
                        <swiper-item class="module-course-box size-small">
                            <repeat for="{{data}}" key="number" index="number" item="item">
                                <button class="ui-item flex"
                                      hover-stay-time="100"
                                      data-item="{{item}}"
                                      data-type="2"
                                      form-type="submit"
                                      @tap.stop="getCourseDetail">
                                    <view class="cell-thumb flex-box-0">
                                        <image mode="aspectFit" src="{{item.image}}"></image>
                                    </view>
                                    <view class="ui-content flex cross-center">
                                        <view class="ui-info">
                                            <view class="cell-title">{{item.name}}</view>
                                            <view class="cell-description">{{item.showPoint}}…</view>
                                        </view>
                                        <view class="cell-button flex-box-0">
                                            <button>获取</button>
                                        </view>
                                    </view>
                                </button>
                            </repeat>
                        </swiper-item>
                    </repeat>
                </swiper>
            </view>
        </form>
        <view class="ui-clear"></view>

        <studying-bar :scrollTop.sync="scrollTop"></studying-bar>
    </scroll-view>
    <view class="ui-registed-toast courseFadeOut" wx:if="{{isShowToast}}" @tap.stop="getCloseToast">
        <image src="http://wx-small.runwise.cn/image/imageID7618264dab0493be413342508fae.png" />
    </view>
</template>

<script>
    import wepy from 'wepy'
    import {getStore, connect} from 'wepy-redux'
    import PushMixin from '../../mixins/push'
    import header from '../../components/common/header'
    import Loading from '../../components/common/loading'
    import EvaluateModal from '../../components/EvaluateModal/index'
    import CourseSeries from '../../components/course-module/course-series'
    import FavouriteCourseCopy from '../../components/FavouriteCourseCopy/index'
    import studyingBar from '../../components/common/studying-bar'
    import {auth as authApi, fetch} from '../../api'
    import {shareDictionary, getStorageAsync, initializationDeligate} from '../../utils'
    import {getLoginInfo, renewUserGiftBox, refreshUserInformations} from '../../redux/models/user'
    import _ from 'underscore'

    const store = getStore()
    @connect({
        avatar(state) {
            return state.user.avatarUrl
        },
        userName(state) {
            return state.user.nickName
        },
        token(state) {
            return state.user.token
        },
        role(state) {
            return state.user.role
        },
        entrance(state) { // 全局场景值
            return state.entrance
        }
    })
    export default class CourseHome extends wepy.page {
        mixins = [PushMixin]

        components = {
            'jn-header': header,
            'jn-loading': Loading,
            'favourite-course': FavouriteCourseCopy,
            'evaluate-modal': EvaluateModal,
            'studying-bar': studyingBar,
            'jn-course-series': CourseSeries
        }

        data = {
            isLoaded: false,
            courseType:['recommend','newcourse','hotcourse'],
            courseName:['为你推荐','最新上线','热门课程'],
            isScroll: true, // 是否能滚动
            scrollTop: 0,
            paramsInfo: {},
            swiperList: [],
            swiperCurrent: 0,
            courseSeriesList: [],
            limitedTimeGiftCourseList: [],
            newCourseList: [],
            hotCourseList: [],
            personalInfo: {}, // 头部用户信息
            recommendCourseList:[],
            isShowEvaluate:false,
            isShowCourseSeries:false,
            courseSeriesModalList:[],
            isShowToast:false
        }

        onLoad(params) {
            let self = this
            let pageNum = wx.getStorageSync('pageLoadNum')
            self.paramsInfo = params
            self.isShowEvaluate = pageNum !== 2 ? false : true
            self.isShowToast = self.paramsInfo.isShowToast ? true : false

            initializationDeligate({initializeFunc: self.initialize.bind(self)})
        }

        onShow() {
            let self = this
            self.recommendCourseList.length && self.$broadcast('studying-bar')

            wepy.$instance.globalData.getLoadHuilder() // ga统计
            wx.reportAnalytics('discovery', {
                role: self.role,
                nickname: self.userName,
                channel: self.entrance.mappers[this.entrance.scenceID]
            })
        }

        initialize() {
            let self = this
            // 通知组件
            self.$broadcast('studying-bar')
            self.__fetchCourses()
        }

        __fetchCourses() {
            let self = this
            let postData = {
                token: self.token,
            }

            if (self.paramsInfo.wxPushType) {
                postData.wxPushType = self.paramsInfo.wxPushType
            }

            fetch.coursePageList(postData).then((respone) => {
                self.isLoaded = true
                let number = 0
                _.each(respone.limitedTimeGiftCourseList, (item, index) => {
                    if(0 !== (index+1)% 4) {
                        if (!self.limitedTimeGiftCourseList[number]) {
                            self.limitedTimeGiftCourseList[number] = []
                        }
                        self.limitedTimeGiftCourseList[number].push(item)
                    } else {
                        number++
                    }
                })

                self.hotCourseList = respone.hotCourseList
                self.courseSeriesList = respone.courseSeriesList
                self.newCourseList = respone.newCourseList
                self.recommendCourseList = respone.recommendCourseList
                self.$apply()
            }) .catch(error => {
                console.log('home fetch courses error', error)
                throw error
            })
        }

        methods = {
            /**
             * 微信授权登录
             */
            getAuthorize(event) {
                let self = this
                let {detail: {errMsg, userInfo, rawData}} = event

                if ('getUserInfo:ok' !== errMsg) {
                    return
                }

                if (self.userName) {
                    return wepy.navigateTo({url: `/pages/user-module/mine?type=1`})
                }

                store.dispatch(getLoginInfo({userInfo, errMsg})).then(repsone => {
                    wepy.navigateTo({url: `/pages/user-module/mine?type=1`})
                })
            },
            // 隐藏 toast
            getCloseToast(){
                let self = this;
                self.isShowToast = false;
            },
            // 系列 组件 的返回按钮
            OnClickBack(){
                let self = this
                self.isShowCourseSeries = false
                self.$apply()
            },
            // 点击全部系列 触发组件
            getAllSeries({currentTarget: {dataset: {item}}}){
                let self = this
                self.isShowCourseSeries = true
                self.courseSeriesModalList = item
                self.$apply()
            },
            /**
             * 监听滚动条的位置
             * @param
             */
            getScroll({ detail: { scrollTop } }) {
                let self = this
                self.scrollTop = scrollTop
            },
            // 跳去 课程详情页
            getCourseDetail({currentTarget: {dataset: {item, type}}}) {
                let self = this
                let courseID = item.courseID;
                let courseType = item.courseType;
                let name = item.name;
                let resume = item.resume ? item.resume : ''
                let courseName = item.courseName ? item.courseName : item.name

                let typeSrc = ''
                switch (type) {
                    case '1':
                        typeSrc = '轮播图'
                        break
                    case '2':
                        typeSrc = '最新上线'
                        break
                    case '3':
                        typeSrc = '热门课程'
                        break
                    case '4':
                        typeSrc = '限时赠一得一'
                        courseType = 'limitedTimeGift'
                        break
                }

                wepy.$instance.globalData.getHuilder(`课程页/${typeSrc}`,'click',`${courseName}`)
                wepy.navigateTo({url: `/pages/course-module/course-details?id=${courseID}&source=${courseType}`})
            },
            /**
             * 课程系列入口
             * @param event
             */
            getCategory(event) {
                let self = this
                let dataset = event.currentTarget.dataset
                let data = {
                    courseSeriesID: dataset.item.courseSeriesID,
                    seriesName: dataset.item.seriesName
                }

                wepy.$instance.globalData.getHuilder('课程页/热门系列', 'click', `${dataset.item.seriesName}`)
                wx.reportAnalytics('tap_discover_series', {
                    role: self.role,
                    nickname: self.userName,
                    channel: self.entrance.mappers[self.entrance.scenceID],
                    seriesname: dataset.item.seriesName,
                })
                self.$navigate('/pages/course-module/course-series', data)
            }
        }

        events = {
            attendClass(courseID, resume, courseType, name, courseName,$event) {
                let self = this
                wx.reportAnalytics('tap_descover_course', {
                    role: self.role,
                    nickname: self.userName,
                    channel: self.entrance.mappers[self.entrance.scenceID],
                    courseid: courseID
                })

                wepy.$instance.globalData.getHuilder(`课程页/${courseName}`,'click',`${name}`)
                try {
                    wepy.navigateTo({url: `/pages/course-module/course-details?id=${courseID}&source=${courseType}`})
                } catch (err) {
                    console.log('handle attend classes err', err)
                }
            },
            review(courseID, $event) {
                let self = this
                wx.reportAnalytics('tap_descover_course', {
                    role: self.role,
                    nickname: self.userName,
                    channel: self.entrance.mappers[this.entrance.scenceID],
                    courseid: courseID
                })
                try {
                    wepy.navigateTo({
                        url: `/pages/course-module/course-review?senceID=${senceID}`
                    })
                } catch (err) {
                    console.log('err', err)
                }
            },
            /**
             * 监听是否要禁止滚动
             * @param options
             */
            'on-studying-bar': (data) => {
                let self = this
                self.isScroll = data.isShow
            }
        }
        /**
         * 分享
         * @param options
         * @returns {{title: string, path: string, success: success, fail: fail}}
         */
        onShareAppMessage(options) {
            let self = this
            return {
                title: '即能，互联网微学习',
                path: '/pages/course-module/course?source=TopAppShare',
                success(res) {
                    console.log('转发成功')
                    wx.reportAnalytics('share_event', {
                        nickname: self.userName,
                        type: shareDictionary.SHARE_WE_APP.type,
                    })

                    fetch.reportSharing({token: self.token, type: shareDictionary.SHARE_WE_APP.type}) // 向后台上报分享行为
                },
                fail(res) {
                    console.log('转发失败')
                }
            }
        }
    }
</script>
