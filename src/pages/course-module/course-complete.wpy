<style lang="less" scoped>
@import "../../assets/style/theme";
.module-course-complete-box{
    box-sizing:border-box;width:100%;height:100%;padding:0 80rpx;background-color:@background-deep-blue;
    view{box-sizing:border-box;}
    .ui-content{height:100%;}
    .ui-title{
        height:64rpx;margin:40rpx 0;font-size:48rpx;color:@color-white;
        text{margin-right:24rpx;font-size:64rpx;}
    }
    .ui-skills-box{
        .cell-info{font-size:32rpx;color:@color-white;line-height:36rpx;}
        .cell-level{
            font-size:28rpx;color:@color-white;line-height:36rpx;
            text{margin-left:10rpx;font-size:30rpx;}
        }
        .ui-progress{
            width:100%;height:24rpx;margin-top:22rpx;background-color:rgba(255,255,255,.3);border-radius:24rpx;position:relative;overflow:hidden;
            >view{position:absolute;left:0;top:0;}
            .cell-line{
                width:100%;height:100%;z-index:3;
                view{width:20%;height:100%;border-left:1px solid @background-deep-blue;}
                view:first-child{border-left:0;}
            }
            .cell-beforPercent{width:0;height:100%;background-color:@color-blue;z-index:2;transition:width .2s;}
            .cell-upPercent{width:0;height:100%;background-color:@color-tint-blue;z-index:1;transition:width .4s;}
        }
    }
    .ui-evaluation-box{
        width:540rpx;height:200rpx;padding:32rpx 0 52rpx;margin:160rpx auto 40rpx;background-color:rgba(255,255,255,.1);border-radius:20rpx;
        .cell-title{height:auto;font-size:32rpx;color:@color-white;line-height:44rpx;letter-spacing:4rpx;}
        .ui-star{
            width:100%;text-align:center;
            text{display:inline-block;margin:0 10rpx;font-size:48rpx;color:@color-white;}
        }
    }
    .ui-giving{
        text-align:center;
        .cell-title{font-size:26rpx;color:rgba(255,255,255,.7);line-height:36rpx;}
        .cell-navigator{
            display:inline-block;padding-top:26rpx;font-size:28rpx;color:@color-white;line-height:32rpx;
            text{margin-left:4rpx;font-size:32rpx;position:relative;top:2rpx;}
        }
    }
    .ui-button-box{
        padding-bottom:80rpx;
        &.is-iphonex{padding-bottom:114rpx}
        .cell-subtitle{padding-bottom:10rpx;font-size:26rpx;color:@color-gray;line-height:36rpx;text-align:center;}
        .cell-title{padding-bottom:36rpx;font-size:36rpx;color:@color-white;line-height:50rpx;text-align:center;}
        button{width:266rpx;height:76rpx;margin:0 auto;background-color:@color-blue;font-size:36rpx;color:@color-white;line-height:76rpx;letter-spacing:4rpx;border-radius:@border-radius-20;}
        .cell-hover{background-color:@background-blue-hover}
    }
}
</style>

<template>
    <jn-loading wx:if="{{!isLoaded}}"></jn-loading>
    <view class="module-course-complete-box" wx:if="{{isLoaded}}">
        <jn-header :title.sync="finishResultInfo.name"
                   buttonIcon="back-close" buttonColor="#fff"
                   className="background-transparent"
                   :delta.sync="routerDelta"></jn-header>

        <view class="ui-container dir-top" style="height: calc(100% - {{headerHeigth}}px)">
            <view class="ui-content">
                <view class="ui-title main-center">
                    <text class="icon-correctly"></text>微课完成
                </view>
                <view class="ui-skills-box">
                    <view class="main-justify">
                        <view class="cell-info">{{finishResultInfo.skillName}}：{{finishResultInfo.skillTitle}}</view>
                        <navigator class="cell-level"
                                   hover-class="none"
                                   url="/pages/course-module/course-level-instructions">{{finishResultInfo.skillGrand}}<text class="icon-question"></text></navigator>
                    </view>
                    <view class="ui-progress">
                        <view class="cell-line box-mean">
                            <view></view><view></view><view></view><view></view><view></view>
                        </view>
                        <view class="cell-beforPercent" style="width: {{finishResultInfo.beforPercent}}%"></view>
                        <view class="cell-upPercent" style="width: {{finishResultInfo.upPercent}}%"></view>
                    </view>
                </view>

                <view class="ui-evaluation-box dir-top main-justify">
                    <view class="cell-title main-center">{{finishResultInfo.senceStarIsCanTick ? '点评微课，领3个即能币' : '你已评价'}}</view>
                    <view class="ui-star">
                        <repeat for="{{starList}}" key="index" index="index" item="item">
                            <text class="{{ finishResultInfo.senceStar>=item ? 'icon-selete-star' : 'icon-not-star' }}"
                                  data-star="{{item}}"
                                  @tap.stop="getEvaluation"></text>
                        </repeat>
                    </view>
                </view>

                <view class="ui-giving">
                    <view class="cell-title">你可以将这节课免费赠送给好友，获得即能币</view>
                    <navigator class="cell-navigator"
                               hover-class="none"
                               url="/pages/Largess/index?senceID={{paramsInfo.senceID}}">赠送好友<text class="icon-details"></text></navigator>
                </view>
            </view>

            <view class="ui-button-box" :class="{'is-iphonex': isIphonex}">
                <view class="cell-subtitle" wx:if="{{finishResultInfo.isShowNext}}">{{finishResultInfo.nextTipx}}</view>
                <view class="cell-title" wx:if="{{finishResultInfo.isShowNext}}">{{finishResultInfo.nextSenceName}}</view>
                <button hover-class="cell-hover" @tap.stop="getSumbit">{{finishResultInfo.isShowNext ? '继续' : '完成'}}</button>
            </view>
        </view>
    </view>
    <jn-score-modal></jn-score-modal>
</template>

<script>
    import wepy from 'wepy'
    import {getStore, connect} from 'wepy-redux'
    import header from '../../components/common/header'
    import Loading from '../../components/common/loading'
    import ScoreModal from '../../components/ScoreModal/index'
    import {registered as fetchRegistered} from '../../api'
    import {navigateToLesson, redirectToLesson} from '../../utils'
    import _ from 'underscore'

    const store = getStore()
    @connect({
        systemInfo(state) {
            return state.user
        },
       
        entrance(state) { //全局场景值
            return state.entrance
        },
        currentCourseName(state) {
            return state.courses.currentName
        },
        currentSencesName(state) {
            return state.sences.currentName
        },
        requestFlag(state) {
            return state.cards.requestFlag
        }
    })
    export default class courseComplete extends wepy.page {
        components = {
            'jn-header': header,
            'jn-loading': Loading,
            'jn-score-modal': ScoreModal
        }

        data = {
            headerHeigth: 68,
            isIphonex: /iphone10|iphone x/i.test(wx.getSystemInfoSync().model),
            isLoaded: false,
            isEvaluation: false,
            routerDelta: 1,
            paramsInfo: {},
            finishResultInfo: {},
            starList: [1, 2, 3, 4, 5],
            skipRoutes: [
                'pages/course-module/course-learning',
                'pages/course-module/course-exercises',
                'pages/Lesson/index',
                'pages/LessonForAndroid/index',
                'pages/Sorting/index',
                'pages/SingleSelection/index']
        }

        onLoad(parmas) {
            let self = this
            self.isLoaded = false
            // 分享进来的
            if (1 === getCurrentPages().length) {
                wx.reLaunch({url: '/pages/course-module/course'})
                return
            }

            let {courseID, senceID, teamID} = parmas
            let {user: {token, platform}, cards: {requestFlag}} = getStore().getState()
            self.paramsInfo = {courseID, senceID, teamID, platform, requestFlag}

            self.__originalRouter()
            self.__sendFinish()
            self.__sendFinishResults()
        }

        onShow() {
            let self = this
            if(self.isEvaluation) {
                self.__EvaluationFinish()
            }
        }

        /**
         * 如果是第一次完成微课的，奖励即能币
         * @private
         */
        __sendFinish() {
            let self = this
            let postData = {
                token: self.systemInfo.token,
                courseID: self.paramsInfo.courseID,
                senceID: self.paramsInfo.senceID,
                requestFlag: self.paramsInfo.requestFlag,
                teamID: self.paramsInfo.teamID
            }

            fetchRegistered.sendFinish(postData).then((respone) => {
                if(respone.isPlayBonusToast){
                    self.$invoke('ScoreModal', { flag: true, title: respone.title, score: respone.addBonus })
                }
            }).catch(error => {

            })
        }
        /**
         * 获取当前完成微课的信息
         * @private
         */
        __sendFinishResults() {
            let self = this
            let postData = {
                token: self.systemInfo.token,
                courseID: self.paramsInfo.courseID,
                senceID: self.paramsInfo.senceID,
                requestFlag: self.paramsInfo.requestFlag,
                teamID: self.paramsInfo.teamID
            }
            self.isLoaded = false
            fetchRegistered.sendFinishResults(postData).then((respone) => {
                self.isLoaded = true
                // 本次分值比上一次高
                if (respone.skillUpScore > respone.skillBaseScore) {
                    respone.skillTitle = `${respone.skillBaseScore} → ${respone.skillUpScore}`
                    respone.beforPercent = respone.skillBaseScore * 10 // 上次的技能比
                } else {
                    respone.skillTitle = `${respone.skillBaseScore}`
                    respone.beforPercent = respone.skillPercent
                }
                respone.upPercent = respone.skillUpScore * 10 // 创新高的技能比
                self.finishResultInfo = respone
                self.$apply()

                wepy.$instance.globalData.getLoadHuilder({pageTheme: self.finishResultInfo.skillName}) // ga统计
                wx.reportAnalytics('finishsence', {
                    role: self.systemInfo.role,
                    nickname: self.systemInfo.name,
                    coursename: self.currentCourseName,
                    sencename: self.currentSencesName,
                    channel: self.entrance.mappers[self.entrance.scenceID]
                })
            }).catch(error => {
                self.isLoaded = true
            })
        }
        /**
         * 是否已经评价过了
         * @private
         */
        __EvaluationFinish() {
            let self = this
            let postData = {
                token: self.systemInfo.token,
                courseID: self.paramsInfo.courseID,
                senceID: self.paramsInfo.senceID,
                requestFlag: self.paramsInfo.requestFlag,
                teamID: self.paramsInfo.teamID
            }

            fetchRegistered.sendFinishResults(postData).then((respone) => {
                self.finishResultInfo.senceStarIsCanTick = respone.senceStarIsCanTick
                self.$apply()
            }).catch(error => {
                self.isLoaded = true
            })
        }
        /**
         * 计算返回到微课入口页面
         * @private
         */
        __originalRouter() {
            let self = this
            let routers = getCurrentPages()
            let lenght = routers.length - 2
            self.routerDelta = 1

            _.find(routers, (data, index) => {
                let item = routers[lenght - index]
                if (-1 === _.indexOf(self.skipRoutes, item.route)) {
                    return data
                } else {
                    self.routerDelta++
                }
            })
        }

        methods = {
            /**
             *
             * @param event
             */
            getEvaluation(event) {
                let self = this
                let {currentTarget: {dataset: {star}}} = event

                wx.reportAnalytics('lessonfinish_evaluate_click', {
                    username: self.systemInfo.userName,
                    channel: self.entrance.mappers[self.entrance.scenceID],
                    role: self.systemInfo.role
                })

                if (self.finishResultInfo.senceStarIsCanTick) {
                    self.isEvaluation = true
                    self.finishResultInfo.senceStar = star
                    self.$apply()
                }

                self.$navigate('/pages/Evaluation/index', {
                    courseID: self.paramsInfo.courseID,
                    senceID: self.paramsInfo.senceID,
                    teamID: self.paramsInfo.teamID,
                    score: self.finishResultInfo.senceStarIsCanTick ? star : 0,
                    skillName: self.finishResultInfo.skillName
                })
            },
            /**
             * 继续下一课或完成
             */
            getSumbit() {
                let self = this
                let finishResultInfo = self.finishResultInfo
                if (finishResultInfo.isShowNext) {
                    let isNewSence = finishResultInfo.isNewSenceMap && finishResultInfo.isNewSenceMap[finishResultInfo.nextSenceID]
                    let parmas = {
                        courseID: finishResultInfo.nextCourseID,
                        senceID: finishResultInfo.nextSenceID,
                        teamID: self.paramsInfo.teamID,
                        isNewSence
                    }
                    redirectToLesson(parmas)
                    return
                }

                wx.navigateBack({delta: self.routerDelta})
            }
        }

        events = {
            'header-info': (data) => {
                let self = this
                self.headerHeigth = data.headerHeigth
                self.$apply()
            }
        }
    }
</script>
