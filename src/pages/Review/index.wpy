<style lang="less" scoped>
@import "../../assets/style/theme";
.ui-review{
    .ui-lesson{
        padding:32rpx 0;display: flex;align-items: center;margin:0 40rpx;border-bottom:2rpx solid @border-gray;
        .ui-item{
            display: flex;width:100%;align-items: center;
            .ui-img{
                display: flex;align-items: center;
                image{width: 112rpx;height: 112rpx;border-radius:28rpx;}
            } 
            .ui-content{
                margin-left: 24rpx;height: 96rpx;
                .cell-name{width: 368rpx;font-size: 34rpx;color:@color-black;font-weight: 700;overflow: hidden;white-space: nowrap;text-overflow:ellipsis}
                .cell-dec{width: 368rpx;margin-top:12rpx;font-size: 30rpx;color:@color-gray;overflow: hidden;white-space: nowrap;text-overflow:ellipsis}
            }
        }
        .cell-btn{width: 220rpx;height: 60rpx;border-radius: 200rpx;background: @background-gray-F4;color:@color-blue;font-size: 30rpx;text-align: center;line-height: 60rpx;font-weight: 700}
    }
    .ui-title{font-size: 44rpx;color:@color-black;margin: 36rpx 30rpx;font-weight: 700;}
    .ui-swiper-box{
        .ui-swiper-list{
            height: 1004rpx;
            .ui-item{
                width: 670rpx;
                .ui-content{
                    border:2rpx solid @border-gray;border-radius: 20rpx;display: flex;justify-content: center;align-items: center;width:670rpx;min-height:894rpx;
                    image{width: 100%;border-radius: 20rpx;}
                    .ui-share{
                        color:@color-blue;position:absolute;top:28rpx;right:36rpx;
                        text{font-size: 50rpx;}
                    }
                    .ui-share.ui-dack {color:@color-white;}

                }
                
            }
        }
    }
    .ui-empty-list{
        width: 670rpx;height: 894rpx;border-radius: @border-radius-32;border:2rpx solid @border-gray;margin: 0 auto 172rpx;color:@color-gray;display: flex;flex-direction: column;align-items: center;justify-content: center;font-size:34rpx;
        text{color: @color-gray-c7;font-size: 110rpx;margin-bottom: 50rpx;}
    }
}

</style>
<template>
    <mloading wx:if="{{ !isLoaded }}"/>
    <view wx:if="{{ isLoaded }}">
        <jn-header title="课程回顾"></jn-header>
        <view class="ui-review">
            <view class="ui-lesson">
                <view class="ui-item">
                    <view class="ui-img">
                        <image src="{{imageUrl}}" />
                    </view>
                    <view class="ui-content">
                        <view class="cell-name">{{senceName}}</view>
                        <view class="cell-dec">{{description}}</view>
                    </view>
                </view>
                <view class="cell-btn" @tap.stop="handleStudyAgain">再学一次</view>
            </view>
            <view class="ui-title">重点卡</view>
            <view class="ui-empty-list" wx:if="{{hasPointCard && hashBigImage}}">
                <text class="icon-empty-list"></text>
                <view>你还没有标为重点的卡片哦</view>
            </view>
            <view class="ui-swiper-box" wx:else>
                <swiper class="ui-swiper-list" 
                        previous-margin="40rpx"
                        next-margin="20rpx"  indicator-dots>
                    <repeat for="{{pointCardList}}" key="index" index="index" item="item">
                        <swiper-item class="ui-item" @tap.stop="getStudyLesson" data-item="{{item}}">
                            <view class="ui-content" style="background:{{item.fullImageBgColor ? item.fullImageBgColor : ''}}">
                                <image mode="widthFix" src="{{item.url}}"/>
                                <view class="ui-share" :class="{'ui-dack' : item.fullImageColorIsDark}" data-item="{{item}}" @tap.stop="getShare">
                                    <text class="icon-share"></text>
                                </view>
                            </view>
                        </swiper-item>
                    </repeat>
                </swiper>
            </view>
        </view>
    </view>
    <jn-share-card></jn-share-card>
</template>

<script>
    import wepy from "wepy";
    import {course as courseApi, share as shareApi, registered as fetch} from "../../api";
    import {getStore, connect} from "wepy-redux";
    import Loading from "../../components/common/loading";
    import header from '../../components/common/header'
    import shareCard from '../../components/shareImages/share-card'
    import {navigateToLesson} from "../../utils";
    import _ from 'underscore'

    @connect({
        token(state) {
            // return 'userID4456e4e22b584ce5907d5c96e0ef247a-1543389834116-48b370fe62417e2fae437c0e5453b45c'
            return state.user.token
        },
        userName(state) {
            return state.user.name
        },
        role(state) {
            return state.user.role
        },
        entrance(state) {
            return state.entrance
        },
       
    })
    export default class Review extends wepy.page {
        components = {
            mloading: Loading,
            'jn-header': header,
            'jn-share-card': shareCard
        }

        data = {
            courseID: "",
            senceID: "",
            isLoaded: false,
            isSubmit: false, // 是否提交了收藏或生成分享图
            senceName: "",
            description: "",
            imageUrl: null,
            currentCardID: null,
            hasPointCard: false,
            hashBigImage: false,
            pointCardList: [],
            isNewSenceMap: {} // 进入微课的新老界面判断
        }

        onLoad(data) {
            let self = this
            self.courseID = data.courseID
            self.senceID = data.senceID
        }

        onShow() {
            let self = this;
            self.initialize()
        }

        initialize() {
            let self = this;
            courseApi.getReview({
                token: self.token, 
                courseID:self.courseID, 
                senceID:self.senceID})
            .then(res => {
                self.isLoaded = true
                self.isNewSenceMap = res.isNewSenceMap
                self.senceName = res.senceName

                let tempList = res.pointCardList
                tempList = _.each(tempList, (item)=>{
                    if(item.content){
                        item.content = JSON.parse(item.content);
                        item.url = item.content.bigimage;
                        item.name = item.content.title;

                        if(item.content.fullImageColorIsDark){
                            item.fullImageColorIsDark = item.content.fullImageColorIsDark
                            item.fullImageBgColor = item.content.fullImageBgColor
                        }
                    }
                });
                self.pointCardList = tempList

                self.imageUrl = res.imageUrl
                self.description = res.description
                self.$apply()

                wepy.$instance.globalData.getLoadHuilder({pageTheme: self.senceName}) // ga统计
                wx.reportAnalytics('review', {
                    role: self.role,
                    nickname: self.userName,
                    coursename: self.senceName,
                    sencename: self.title,
                    channel: self.entrance.mappers[self.entrance.scenceID]
                })
            })
            .catch(error => {
                console.log('get review error', error)
            })
        }

        methods = {
            // 再学一次
            handleStudyAgain(event) {
                let self = this;
                let isNewSence = self.isNewSenceMap && self.isNewSenceMap[self.senceID]
                navigateToLesson({ courseID:self.courseID, senceID:self.senceID, resumeLastRead: 'NO', isNewSence,isRedirectTo:true})
            },
            getStudyLesson(event) {
                let self = this;
                let {currentTarget: {dataset: {item}}} = event

                let senceName = item.name
                let resumeLastRead = item.xuhao ? item.xuhao : 'NO'
                let isNewSence = self.isNewSenceMap[self.senceID]

                navigateToLesson({courseID:self.courseID, senceID:self.senceID, resumeLastRead: resumeLastRead,isNewSence})
            },
            /**
             * 全图卡热点卡生成分享图片
             * @returns {boolean}
             */
            getShare(event) {
                let self = this
                let {currentTarget: {dataset: {item}}} = event
                if (self.isSubmit) {
                    return
                }

                self.isSubmit = true
                self.currentCardID = item.id
                let postData = {
                    token: self.token,
                    courseID: self.courseID,
                    senceID: self.senceID
                }

                shareApi.getCourseQrCode(postData).then(({imageUrl: shareImage}) => {
                    self.isSubmit = false
                    let shareImages = {
                        senceThumb: self.imageUrl,
                        cardImage: item.url,
                        shareImage
                    }
                    // 通知组件，生成图片预览
                    self.$broadcast('card-share-images-list', shareImages)
                }).catch(error => {
                    self.isSubmit = false
                })
            }
        }

        events = {
            /**
             * 分享卡片统计
             * @param data
             */
            'on-share-card': (data) => {
                let self = this
                if (!self.currentCardID) {
                    return
                }
                let postData = {
                    token: self.token,
                    courseID: self.courseID,
                    senceID: self.senceID,
                    cardID: self.currentCardID
                }
                fetch.courseShareCount(postData).then((respone) => {
                    self.currentCardID = null
                }).catch(error => {

                })
            }
        }

    }
</script>


