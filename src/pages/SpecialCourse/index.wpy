<template>
    <mloading wx:if="{{ !isLoaded }}"/>
    <view class="ui-special-course">
        <jn-header :className.sync="headerBackground" buttonAfter :isHeadHeight="isHeadHeight"></jn-header>
        <from class="ui-course-content" bindsubmit="handleSavePushCode" report-submit>
            <view class="ui-cover-thumb flex">
                <image mode="widthFix" id="imageCodeUrl" src="{{imageCodeUrl}}" />
                <!--<view class="ui-skill-box dir-bottom" wx:if="{{isTodaySkill}}">
                    <view class="ui-box">
                        <view class="ui-skill main-justify">
                            <view># {{skillInfo.senceTarget}}</view>
                            <view class="cell-num">{{skillInfo.skillScore}}</view>
                        </view>
                        <view class="ui-progress">
                            <view class="cell-line box-mean">
                                <view></view><view></view><view></view><view></view><view></view>
                            </view>
                            <view class="cell-percent" style="{{'width: '+ skillInfo.progress +'%;'}}"></view>
                        </view>
                    </view>
                </view>-->
                <view class="ui-headline">
                    <view class="cell-sence">{{skillInfo.sceneTypeText}}</view>
                    <view class="cell-name">{{skillInfo.specialCourseName}}</view>
                    <view class="cell-subtitle" wx:if="{{'todaySkill' != skillInfo.sceneType}}">{{skillInfo.subtitle}}</view>
                </view>
            </view>
            <repeat for="{{moduleList}}" key="index" index="index" item="data">
                <button class="ui-img-type flex"
                        form-type="submit"
                        wx:if="{{data.type == 'image'}}" >
                    <image mode="widthFix" src="{{data.img}}" />
                </button>
                <button class="ui-doc"
                        form-type="submit"

                        wx:if="{{data.type == 'text'}}">
                    <view class="cell-title" wx:if="{{data.title}}">{{data.title}}</view>
                    <text class="cell-content" wx:if="{{data.content}}">{{data.content}}</text>
                </button>
                <view class="ui-lesson" wx:if="{{data.type == 'sence'}}">
                    <repeat wx:for="{{data.senceList}}" wx:key="{{lessonIndex}}" wx:index="{{lessonIndex}}" wx:for-item="lessonItem">
                        <button class="ui-item"
                                form-type="submit"
                                data-item="{{lessonItem}}"
                                open-type="{{!phone ? 'getPhoneNumber' : ''}}"
                                @getphonenumber.stop="handleStartLesson"
                                @tap.stop="handleStartLesson">
                            <view class="ui-img">
                                <image src="{{lessonItem.imageUrl}}" />
                            </view>
                            <view class="ui-content">
                                <view class="ui-font">
                                    <view class="cell-title">{{lessonItem.name}}</view>
                                    <view class="cell-dec">{{lessonItem.description}}</view>
                                </view>
                                <view class="cell-btn">{{phone ? lessonItem.buttonStatusMsg : '免费领取'}}</view>
                            </view>
                        </button>
                    </repeat>
                </view>
                <view class="ui-course" wx:if="{{data.type == 'course'}}">
                    <repeat wx:for="{{data.courseList}}" wx:key="{{courseIndex}}" wx:index="{{courseIndex}}" wx:for-item="courseItem">
                        <button class="ui-item"
                                form-type="submit"
                                data-item="{{courseItem}}"
                                data-type="4"
                                open-type="{{!phone ? 'getPhoneNumber' : ''}}"
                                @getphonenumber.stop="getCourseDetail"
                                @tap.stop="getCourseDetail">
                            <view class="ui-img">
                                <image src="{{courseItem.image}}"/>
                            </view>
                            <view class="ui-content">
                                <view class="cell-title">{{courseItem.name}}</view>
                                <view class="cell-dec">{{courseItem.description}}</view>
                                <view class="ui-btn-bottom">
                                    <view class="cell-btn">{{phone ? courseItem.buttonMsg : '免费领取'}}</view>
                                    <view class="cell-tip">{{courseItem.userCount}}人已学</view>
                                </view>
                            </view>
                        </button>
                    </repeat>

                </view>
                <view class="ui-poll" wx:if="{{data.type === 'poll'}}">
                    <jn-poll :cardIndex.sync="index" :cardsList.sync="moduleList" isLearning></jn-poll>

                    <button class="cell-poll-btn"
                            :class="{'cell-seleted' : data.isDone}"
                            data-index="{{index}}"
                            data-item="{{data}}"
                            form-type="submit"
                            open-type="{{!phone ? 'getPhoneNumber' : ''}}"
                            @getphonenumber.stop="getPoll"
                            @tap.stop="getPoll">{{data.isDone ? data.pollCount+'人已投票' : '投票'}}</button>
                </view>


                <view wx:if="{{data.type === 'practice'}}">
                    <repeat for="{{data.practiceList}}" key="practiceIndex" index="practiceIndex" item="item">
                        <jn-single-choice :parentIndex.sync="index" parentKey="practiceList" :parentList.sync="moduleList"
                                          :cardIndex.sync="practiceIndex" :cardsList.sync="data.practiceList" isExercises></jn-single-choice>
                    </repeat>
                </view>
                <view class="cell-border" wx:if="{{data.type === 'border'}}"></view>
            </repeat>
            <view class="ui-bottom">
                <view class="cell-margin" wx:if="{{floatBox.type === 'share'}}"></view>
                <view class="module-floax-box" wx:if="{{floatBox.type === 'share'}}">
                    <view class="ui-share">
                        <text class="icon-share"></text>
                        <text>分享给好友</text>
                        <button class="cell-btn"
                                form-type="submit"
                                open-type="share"></button>
                    </view>
                </view>
                <button class="module-floax-box"
                        wx:if="{{floatBox.type === 'sence'}}"
                        data-item="{{floatBox.sence}}"
                        open-type="{{!phone ? 'getPhoneNumber' : ''}}"
                        @getphonenumber.stop="handleStartLesson"
                        @tap.stop="handleStartLesson">
                    <button class="ui-share-course" form-type="submit" :class="{'is-phonex': isIphonex}">
                        <view class="ui-left">
                            <view class="ui-img">
                                <image src="{{floatBox.sence.imageUrl}}" />
                            </view>
                            <view class="ui-content">
                                <view class="cell-title">{{floatBox.sence.name}}</view>
                                <view class="cell-dec">{{floatBox.sence.description}}</view>
                            </view>
                        </view>
                        <view class="cell-btn">{{phone ? floatBox.sence.buttonStatusMsg : '免费领取'}}</view>
                    </button>
                </button>
                <button class="module-floax-box"
                        :class="{'is-phonex': isIphonex}"
                        wx:if="{{floatBox.type === 'course'}}"
                        data-item="{{floatBox.course}}"
                        data-type="4"
                        open-type="{{!phone ? 'getPhoneNumber' : ''}}"
                        @getphonenumber.stop="getCourseDetail"
                        @tap.stop="getCourseDetail">
                    <view class="ui-share-course" :class="{'is-phonex': isIphonex}">
                        <view class="ui-left">
                            <view class="ui-img">
                                <image src="{{floatBox.course.image}}" />
                            </view>
                            <view class="ui-content">
                                <view class="cell-title">{{floatBox.course.name}}</view>
                                <view class="cell-dec">{{floatBox.course.description}}</view>
                            </view>
                        </view>
                        <view class="cell-btn">{{phone ? floatBox.course.buttonMsg : '免费领取'}}</view>
                    </view>
                </button>
                <view class="ui-share-font"  wx:if="{{floatBox.type !== 'share'}}">
                    <button class="cell-btn"
                        open-type="share" form-type="submit">
                        <text class="icon-share cell-icon"></text>分享
                    </button>
                    <view class="cell-btn-margin"></view>
                </view>
            </view>
        </from>
    </view>
    <view></view>
</template>

<script>
    import wepy from "wepy";
    import Loading from '../../components/common/loading'
    import header from '../../components/common/header'
    import poll from '../../components/cards-type/poll'
    import singleChoice from '../../components/special-course/single-choice'
    import PushMixin from '../../mixins/push'
    import {initializationDeligate, showErrorPage, shareDictionary, navigateToLesson} from "../../utils"
    import {auth as authApi, fetch} from "../../api"
    import {CustomError} from "../../errors"
    import {getStore, connect} from "wepy-redux"
    import {getUserPhone, refreshUserInformations} from "../../redux/models/user"
    import _ from 'underscore'

    const store = getStore();
    @connect({
        userName(state) {
            return state.user.nickName;
        },
        token(state) {
            return state.user.token;
        },
        code(state) {
            return state.user.code;
        },
        phone(state) {
            return state.user.phone
        },
        hasGift(state) {
            return state.user.hasGift
        },
        role(state) {
            return state.user.role
        },
        entrance(state) {
            return state.entrance
        }
    })
    export default class Alllessen extends wepy.page {
        mixins = [PushMixin]
        data = {
            isIphonex: /iphone10|iphone x/i.test(wx.getSystemInfoSync().model),
            headerHeigth: 68,
            isHeadHeight: false,
            headerBackground: 'background-transparent',
            backgroundHeight: 0,
            timestamp: new Date().getTime(),
            isLoaded: false,
            screenName: '课程专题页', // 来源，是今日还是发现页面过来的
            courseID: '',
            wxPushType:'',
            senceID:'',
            moduleList:[],
            floatBox:{},
            shareCoverTitle:'',
            shareCoverImageUrl:'', // 分享图
            imageCodeUrl: '', // 封面图
            courseName:'',
            isTodaySkill: false,
            skillInfo: {}
        }
        components = {
            'jn-header': header,
            'mloading': Loading,
            'jn-poll': poll,
            'jn-single-choice': singleChoice
        };
        onLoad({courseID='', gift='', source='', wxPushType='newCoursePush'}) {
            let self = this
            self.courseID = courseID
            self.wxPushType = wxPushType

            if ('show' === gift) {
                wx.showToast({title: '领取成功'})
            }
        }
        /**
         * 监听滚动条的位置
         * @param
         */
        onPageScroll(res) {
            let self = this
            let scrollTop = res.scrollTop
            if (self.backgroundHeight) {
                self.headerBackground = scrollTop > self.backgroundHeight ? 'background-transparent-opacity' : 'background-transparent'
            } else {
                let query = wx.createSelectorQuery()
                query.select('#imageCodeUrl').boundingClientRect((response) => {
                    self.backgroundHeight = response.height + 68
                    self.headerBackground = scrollTop > self.backgroundHeight ? 'background-transparent-opacity' : 'background-transparent'
                }).exec()
            }
            self.$apply()
        }

        onShow() {
            let self = this
            initializationDeligate({initializeFunc: self.initialize.bind(self)})
        }

        onUnload() {
            let self = this
            self.__reportStayTimestamp()
        }

        onHide() {
            let self = this
            self.__reportStayTimestamp()
        }

        __reportStayTimestamp() {
            let self = this
            let time = new Date().getTime() - this.timestamp
            let postData = {
                token: self.token,
                pageTime: time,
                courseID: self.courseID
            }
            fetch.sendCoursePageTime(postData).then(response => {
                console.log('sendCoursePageTime report success! ' + time)
            })
        }

        initialize() {
            let self = this
            let postData = {
                token: self.token,
                id: self.courseID,
                wxPushType: self.wxPushType
            }

            fetch.getNewSpecialCourse(postData).then((res) => {
                self.floatBox = res.floatBox
                self.shareCoverTitle = res.shareCoverTitle
                self.shareCoverImageUrl = res.shareCoverImageUrl
                self.imageCodeUrl = res.carousel
                self.courseName = res.name
                if ('todaySkill' === res.sceneType) {
                    self.screenName = '今日技能'
                    self.isTodaySkill = true
                }
                self.skillInfo = {
                    skillScore: res.skillScore,
                    senceTarget: res.senceTarget,
                    progress: res.progress,
                    specialCourseName:res.specialCourseName,
                    subtitle:res.subtitle,
                    sceneType:res.sceneType,
                    sceneTypeText:res.sceneTypeText
                }
                self.isLoaded = true
                self.moduleList = self.__dataRegroup(res.moduleList)

                wepy.$instance.globalData.getLoadHuilder({screenName: self.screenName, pageTheme: self.courseName}) // ga统计
                self.$apply()
            })
        }

        /**
         * 数组重组
         * @paramsrespone 接口返回的数据
         */
        __dataRegroup(response) {
            let self = this
            _.each(response, (data) => {
                switch (data.type) {
                    case 'practice':
                        _.each(data.practiceList, (item) => {
                            item.isDone = _.clone(item.isSelected)
                            _.each(item.select, (option) => {
                                option.sId = _.clone(option.id)
                                option.id = item.id + option.id
                                if (option.isSelected) {
                                    item.answerDescription = option.feedback && option.feedback.description
                                    item.answerStatus = option.isanswer ? 1 : 2
                                }
                            })
                        })
                        break
                    case 'poll':
                        data.cardStatus = data.pollType
                        if (data.isDone) {
                            _.each(data.optionList, (item) => {
                                item.prop = Math.floor(item.ballot / data.pollCount * 1000) / 10
                            })
                        }
                        break
                }
            })

            return response
        }

        /** 领取课程结果
         * @param phone 手机号码
         * @param courseID 哪个推荐课程
         * @param callBack 回调函数
         */
        __receiveResult({phone, courseID, callBack}) {
            let self = this
            if (self.hasGift) {
                _.isFunction(callBack) && callBack()
                return
            }

            let postData = {
                token: self.token,
                mobile: phone,
                verCode: null,
                courseID: courseID
            }
            fetch.savePhone(postData).then((respone) => {
                if (1 === respone.success) {
                    wx.showToast({
                        title: '领取成功'
                    })
                    store.dispatch(refreshUserInformations({hasGift: true}))
                }
                if ( _.isFunction(callBack)) {
                    callBack()
                }
            }).catch(error => {
                wx.showToast({
                    icon: 'none',
                    title: '网络错误'
                })
            })
        }

        methods = {
            // 跳去微课
            handleStartLesson(event) {
                let self = this
                let {currentTarget: {dataset: {item}}, detail: {encryptedData, errMsg, iv}} = event
                let source = 'discoverPage'
                self.senceID = item.id

                store.dispatch(getUserPhone(encryptedData, errMsg, iv)).then(phone => {
                    phone && self.__receiveResult({
                        phone,
                        courseID: item.courseID,
                        callBack: () => {
                            self.reportButtonTap()

                            wepy.$instance.globalData.getHuilder(`${self.screenName}/${self.courseName}`,'click',`${item.name}`)
                            if ('needPay' === item.buttonStatus) {
                                self.$navigate(`/pages/course-module/course-pay`, {senceID: self.senceID})
                                return
                            }
                            if ('finish' === item.buttonStatus) {
                                self.$navigate(`/pages/course-module/course-review`, {courseID: self.courseID, senceID: self.senceID})
                                return
                            }

                            navigateToLesson({
                                courseID: item.courseID,
                                senceID: self.senceID,
                                resumeLastRead: item.resume,
                                source
                            })
                        }
                    })
                }).catch((error) => {

                })
            },
            // 跳去 课程详情页
            getCourseDetail(event) {
                let self = this
                let {currentTarget: {dataset: {item, type}}, detail: {encryptedData, errMsg, iv}} = event

                store.dispatch(getUserPhone(encryptedData, errMsg, iv)).then(phone => {
                    phone && self.__receiveResult({
                        phone,
                        courseID: item.id,
                        callBack: () => {
                            let typeSrc = ''
                            switch (type) {
                                case '1':typeSrc = '轮播图';   break
                                case '2':typeSrc = '最新上线';  break
                                case '3':typeSrc = '热门课程';  break
                                case '4':typeSrc = '专题';  break
                            }

                            wepy.$instance.globalData.getHuilder(`${self.screenName}/${typeSrc}`,'click',`${item.name}`)
                            wepy.navigateTo({url: `/pages/course-module/course-details?id=${item.id}&source=${item.buttonMsg || '专题'}`})
                        }
                    })
                }).catch((error) => {
                    console.log(77, error)
                })
            },
            /**
             * 投票
             * @param event
             */
            getPoll(event) {
                let self = this
                let {currentTarget: {dataset: {item, index}}, detail: {encryptedData, errMsg, iv}} = event

                if (item.isDone) {
                    return
                }
                store.dispatch(getUserPhone(encryptedData, errMsg, iv)).then(respone => {
                    wepy.$instance.globalData.getHuilder(`${self.screenName} 投票`, 'click', `${item.title}`)
                    let postData = {
                        token: self.token,
                        pollID: item.pollID,
                        courseID: self.courseID,
                        optionList:item.selectedItem.id
                    }

                    fetch.sendUserPoll(postData).then((respone) => {
                        item.isDone = true
                        item.pollCount += 1
                        self.$broadcast('broadcast-poll', item)
                    }).catch(error => {

                    })
                }).catch((error) => {

                })
            }
        }

        reportButtonTap(courseID, senceID, buttonStatus) {
            let self = this
            wx.reportAnalytics('tap_to_lesson', {
                role: self.role,
                nickname: self.userName,
                channel: self.entrance.mappers[self.entrance.scenceID],
                courseid: self.courseID,
                senceid: self.senceID,
                source: '专题详情'
            })
        }

        events = {
            'header-info': (data) => {
                let self = this
                self.headerHeigth = data.headerHeigth
                self.$apply()
            },
            'on-interaction': (data) => {
                let self = this
                let item = null

                if (data.parentkey) {
                    item = self.moduleList[data.parentindex][data.parentkey][data.cardindex]
                    item && self.moduleList[data.parentindex][data.parentkey].splice(data.cardindex, 1, item)
                    _.extend(item, data)

                    if (item.isSumbit && !item.isShowDescription) {
                        let postData = {
                            token: self.token,
                            courseID: self.courseID,
                            teamID: 'defaultTeamID',
                            senceID: item.senceID,
                            cardID: item.id,
                            score: item.score || 0,
                            message: item.selectedItem.option, // 选中选项的name
                            weight: item.selectedItem.weight, // 选中选项的权重
                            questionIndex: 0,
                            skillID: item.skillID,
                            json: item.json // 选中选项的id或顺序
                        }
                        wepy.$instance.globalData.getHuilder(`${self.screenName}测练`, 'click', `${item.title}`)
                        fetch.sendTeamPractice(postData).then(respone => {
                            item.isAnswerOver = true // 已经答案，不能再次作答
                            item.isDone = true
                            self.$apply()
                        })
                    }
                } else {
                    let number = null
                    item = _.find(self.moduleList, (option, index) => {
                        if (option.pollID && option.pollID === data.pollID) {
                            number = index
                            return option
                        }
                    })
                    _.extend(item, data)
                    if (-1 !== number) {
                        self.moduleList.splice(number, 1, item)
                    }
                }

                self.$apply()
            }
        }

        onShareAppMessage(res) {
            let self = this
            wepy.$instance.globalData.getHuilder(`${self.screenName}分享`, 'click', `${self.courseName}`)
            wepy.$instance.globalData.getReportFlow('share')
            fetch.reportSharing({
                token:self.token,
                type: shareDictionary.SHARE_SPECIAL_COURSE.type,
                courseID:self.courseID,
                senceID:self.senceID
            })
            wx.reportAnalytics('share_event', {
                role: self.role,
                nickname: self.userName,
                coursename: self.courseName,
                sencename: '/',
                channel: self.entrance.mappers[self.entrance.scenceID],
                type: shareDictionary.SHARE_SPECIAL_COURSE.type,
            })
            return {
                title: self.shareCoverTitle,
                path: `/pages/SpecialCourse/index?courseID=${self.courseID}&pageName=${self.courseName}`,
                imageUrl:self.shareCoverImageUrl
            };
        }
    }
</script>

<style lang="less" scoped>
    @import "../../assets/style/theme";
    .ui-special-course{
        width:100%;height:100%;background-color: @background-white;display: flex;flex-direction: column;align-items: center;
        view{box-sizing: border-box}
        .ui-course-content{
            width:100%;
            .ui-cover-thumb{
                position:relative;
                image{width:100%;}
                .ui-skill-box{
                    width:100%;height:100%;position:absolute;left:0;top:0;
                    .ui-box{padding:0 80rpx 70rpx;}
                    .ui-skill{
                        font-size: 32rpx;color:@color-white;height:46rpx;
                        .cell-num{font-size: 36rpx;font-weight: bold;}
                    }
                    .ui-progress{
                        width:590rpx;height:16rpx;margin-top:8rpx;border-radius:16rpx;position:relative;overflow: hidden;
                        >view{position:absolute;left:0;top:0;}
                        .cell-line{
                            width:100%;height:100%;z-index:3;border-radius:16rpx;overflow:hidden;
                            view{width:20%;height:100%;margin-left:6rpx;background-color:rgba(255,255,255,0.2);}
                            view:first-child{margin-left:0}
                        }
                        .cell-percent{
                            width:50%;height:100%;background: linear-gradient(to right,#fff 95%,transparent 5%);z-index:2;transition:width .2s;background-size:118rpx  100%;
                        }
                    }
                }
                .ui-headline{
                    width:100%;height:100%;position:absolute;left:0;top:0;color:@color-white;padding:164rpx 68rpx 0;font-size: 34rpx;
                    .cell-sence{color:rgba(255,255,255,0.70);margin-bottom: 18rpx}
                    .cell-name{font-weight: bold;height: 236rpx;font-size: 64rpx;}
                    .cell-subtitle{margin-top: 300rpx}
                }   
            }
            .ui-img-type, .ui-first {
                border-radius:0;
                image{width:100%;}
            }
            .ui-doc{
                padding:4rpx 0 24rpx;background:none;text-align:left;box-sizing:border-box;line-height:1;
                .cell-title{font-size: 40rpx;color: @color-black;line-height:54rpx;padding-top:20rpx;margin-bottom: 24rpx;font-weight: 700;margin:0 32rpx;box-sizing:border-box;}
                .cell-content{font-size: 34rpx;color:@color-gray;line-height:54rpx;display:flex;flex-wrap:wrap;margin:8rpx 24rpx 0 32rpx;box-sizing:border-box;}
            }
            .ui-lesson{
                padding: 0 32rpx;
                .ui-item{
                    display: flex;height: 176rpx;align-items: center;background:none;
                    .ui-img{
                        display:flex;align-items: center;
                        image{width: 112rpx;height: 112rpx;border-radius:28rpx;}
                    }
                    &:first-child .ui-content{border-top: none}
                    .ui-content{
                        height: 100%;display: flex;flex:1;justify-content: space-between;border-top:2rpx solid @border-gray;align-items:center;
                        .ui-font{
                            margin-left: 24rpx;text-align:left;line-height:1.5;
                            .cell-title{font-size: 32rpx;color: @color-black;width: 396rpx;overflow: hidden;white-space: nowrap;text-overflow:ellipsis;font-weight: 700}
                            .cell-dec{font-size: 26rpx;color:@color-gray;margin-top:12rpx;width: 396rpx;overflow: hidden;white-space: nowrap;text-overflow:ellipsis;}
                        }
                        .cell-btn{width: 148rpx;height: 60rpx;text-align: center;line-height: 60rpx;background: @background-gray-F4;color:@color-blue;border-radius: 200rpx;font-size: 30rpx;font-weight: 700}
                    }
                }
            }
            .ui-poll{
                padding:24rpx 32rpx;display: flex;flex-direction: column;align-items: center;
                .cell-name{font-size: 34rpx;color:@color-black;margin-top:24rpx}
                .cell-poll-btn{width: 200rpx;height: 60rpx;line-height: 60rpx;text-align: center;background: @background-gray-F4;color:@color-blue;font-size: 30rpx;border-radius: @border-radius-32;margin-top: 40rpx}
                .cell-poll-btn.cell-seleted{color:@color-gray;background: none;}
            }
            .ui-course{
                padding: 0 32rpx;
                .ui-item{
                    display: flex;height: 240rpx;align-items: center;background:none;line-height:1;
                    .ui-img image{width: 176rpx;height: 176rpx;border-radius: @border-radius-44;}
                    &:first-child .ui-content{border-top: none}
                    .ui-content{
                        margin-left:36rpx;display: flex;flex:1;border-top:2rpx solid @border-gray;flex-direction: column;height:100%;justify-content:center;text-align:left;box-sizing:border-box;
                        .cell-title{padding-bottom:4rpx;width:474rpx;font-size:32rpx;font-weight:700;color:@color-black;text-align:left;line-height:44rpx;overflow:hidden;white-space:nowrap;text-overflow:ellipsis;}
                        .cell-dec{width:474rpx;font-size:26rpx;color:@color-gray;text-align:left;line-height:40rpx;overflow:hidden;white-space:nowrap;text-overflow:ellipsis;}
                        .ui-btn-bottom{
                            height:84rpx;display:flex;align-items:flex-end;
                            .cell-btn{width: 150rpx;height: 60rpx;border-radius: 200rpx;color: @color-blue;background: @background-gray-F4;font-size: 30rpx;text-align: center;line-height: 60rpx;margin-right: 20rpx;}
                            .cell-tip{font-size: 26rpx;color:@color-gray;height:84rpx;line-height:108rpx;}
                        }
                    }
                }
            }
            .cell-border{height: 2rpx;border-bottom:2rpx solid @border-gray;margin:20rpx 32rpx 24rpx;}
        }
        .ui-bottom{
            .cell-margin{width: 100%;height: 200rpx;}
            .ui-share{
                width: 702rpx;height: 100rpx;line-height: 100rpx;color: @color-white;font-size: 30rpx;text-align: center;margin: 28rpx auto;background-color: @background-blue;border-radius: @border-radius-20;display: flex;justify-content: center;position: relative;font-weight: 700;
                .icon-share{font-size:44rpx;margin-right:10rpx;font-weight: normal}
                .cell-btn {
                    position: absolute;top: 0;left: 0;width: 100%;height: 100%;background-color: rgba(255, 255, 255, 0);border: 0;
                }

            }
            .ui-share-font{
                z-index:@z-index-slightly;
                .cell-btn{
                    border-radius: @border-radius-20;border:0;font-size: 34rpx;color:@color-blue;width: 322rpx;height: 100rpx;background: @background-gray-F4;text-align: center;line-height: 100rpx;margin:44rpx auto 0;font-weight: 700;
                    .cell-icon{margin-right: 8rpx;font-size: 40rpx;font-weight: normal;}
                }
                .cell-btn-margin{width: 100%;height: 230rpx;}
            }
        }
    }
</style>
