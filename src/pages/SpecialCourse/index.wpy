<template>
    <mloading wx:if="{{ !isLoaded }}"/>
    <scroll-view scroll-y bindscroll="getScroll" enable-back-to-top class="ui-special-course">
        <jn-header :className.sync="headerBackground"></jn-header>
        <view class="ui-course-content">
            <repeat for="{{moduleList}}" key="index" index="index" item="item">
                <view class="ui-first"  wx:if="{{item.type === 'image' && index === 0}}">
                    <view class="ui-bg-img" id="ui-id" style="position: relative;height: calc(100% + {{headerHeigth}}px);top:-{{headerHeigth}}px;">
                        <image mode="widthFix" src="{{item.img}}" />
                    </view>
                </view>
                    <view class="ui-img-type" wx:if="{{item.type === 'image' && index !== 0}}" >
                    <image mode="widthFix" src="{{item.img}}" />
                </view>
                <view class="ui-doc" wx:if="{{item.type === 'text'}}">
                    <view class="cell-title" wx:if="{{item.title}}">{{item.title}}</view>
                    <text class="cell-content" wx:if="{{item.content}}">{{item.content}}</text>
                </view>
                <view class="ui-lesson" wx:if="{{item.type === 'sence'}}">
                    <view class="ui-item" wx:for="{{item.senceList}}" wx:key="{{lessonIndex}}" wx:index="{{lessonIndex}}" wx:for-item="lessonItem" @tap.stop="handleStartLesson" data-item="{{lessonItem}}" >
                        <view class="ui-img">
                            <image src="{{lessonItem.imageUrl}}" />
                        </view>
                        <view class="ui-content">
                            <view class="ui-font">
                                <view class="cell-title">{{lessonItem.name}}</view>
                                <view class="cell-dec">{{lessonItem.description}}</view>
                            </view>
                            <view class="cell-btn">{{lessonItem.buttonStatusMsg}}</view>
                        </view>
                    </view>
                </view>
                <view class="ui-course" wx:if="{{item.type === 'course'}}">
                    <view class="ui-item" wx:for="{{item.courseList}}" wx:key="{{courseIndex}}" wx:index="{{courseIndex}}" wx:for-item="courseItem" @tap.stop="getCourseDetail"  data-item="{{courseItem}}" data-type="4">
                        <view class="ui-img">
                            <image src="{{courseItem.image}}"/>
                        </view>
                        <view class="ui-content">
                            <view class="cell-title">{{courseItem.name}}</view>
                            <view class="cell-dec">{{courseItem.description}}</view>
                            <view class="ui-btn-bottom">
                                <view class="cell-btn">{{courseItem.buttonMsg}}</view>
                                <view class="cell-tip">{{courseItem.userCount}}人在学</view>
                            </view>
                        </view>
                    </view>
                </view>
                <view class="ui-poll" wx:if="{{item.type === 'poll'}}">
                    <jn-poll :cardIndex.sync="index" :cardsList.sync="moduleList" isLearning></jn-poll>

                    <view class="cell-poll-btn" :class="{'cell-seleted' : item.isDone}" data-index="{{index}}" data-item="{{item}}" @tap.stop="getPoll">{{item.isDone ? '已投票' : '投票'}}</view>
                </view>
                <view class="cell-border" wx:if="{{item.type === 'border'}}"></view>
            </repeat>
            <view class="ui-bottom">
                <view class="cell-margin" wx:if="{{floatBox.type === 'share'}}"></view>
                <view class="ui-share-box" wx:if="{{floatBox.type === 'share'}}">
                    <view class="ui-share">
                        <text class="icon-share"></text>
                        <text>分享给好友</text>
                        <button class="cell-btn"
                            open-type="{{ isTokenSet? 'share': 'getUserInfo' }}"
                            bindgetuserinfo="getAuthorize"></button>
                    </view>
                </view>
                <view class="ui-share-box" wx:if="{{floatBox.type === 'sence'}}" @tap.stop="handleStartLesson"  data-item="{{floatBox.sence}}">
                    <view class="ui-share-course" :class="{'is-phonex': isIphonex}">
                        <view class="ui-left">
                            <view class="ui-img">
                                <image src="{{floatBox.sence.imageUrl}}" />
                            </view>
                            <view class="ui-content">
                                <view class="cell-title">{{floatBox.sence.name}}</view>
                                <view class="cell-dec">{{floatBox.sence.description}}</view>
                            </view>
                        </view>
                        <view class="cell-btn">{{floatBox.sence.buttonStatusMsg}}</view>
                    </view>
                </view>
                <view class="ui-share-box" :class="{'is-phonex': isIphonex}" wx:if="{{floatBox.type === 'course'}}" @tap.stop="getCourseDetail"  data-item="{{floatBox.course}}" data-type="4">
                    <view class="ui-share-course" :class="{'is-phonex': isIphonex}">
                        <view class="ui-left">
                            <view class="ui-img">
                                <image src="{{floatBox.course.image}}" />
                            </view>
                            <view class="ui-content">
                                <view class="cell-title">{{floatBox.course.name}}</view>
                                <view class="cell-dec">{{floatBox.course.description}}</view>
                            </view>
                        </view>
                        <view class="cell-btn">{{floatBox.course.buttonMsg}}</view>
                    </view>
                </view>
                <view class="ui-share-font"  wx:if="{{floatBox.type !== 'share'}}">
                    <button class="cell-btn"
                        open-type="{{ isTokenSet? 'share': 'getUserInfo' }}"
                        bindgetuserinfo="getAuthorize">
                        <text class="icon-share cell-icon"></text>分享
                    </button>
                    <view class="cell-btn-margin"></view>
                </view>
            </view>
        </view>
    </scroll-view>
    <view></view>
</template>

<script>
    import wepy from "wepy";
    import Loading from '../../components/common/loading'
    import header from '../../components/common/header'
    import poll from '../../components/cards-type/poll'
    import NavigatorMixin from '../../mixins/navigator'
    import {showErrorPage,shareDictionary,navigateToLesson} from "../../utils";
    import {course as courseApi,auth as authApi,payment as paymentApi,share as shareApi,registered as fetch} from "../../api";
    import {CustomError} from "../../errors";
    import {getStore,connect} from "wepy-redux";
    import {renewWechatCode,login} from "../../redux/models/user";
    import _ from 'underscore'

    const store = getStore();
    @connect({
        userName(state) {
            return state.user.name;
        },
        isTokenSet(state) {
            return state.user.token.startsWith('userID')
        },
        token(state) {
            return state.user.token;
        },
        code(state) {
            return state.user.code;
        },
        phone(state) {
            return state.user.phone
        },
        role(state) {
            return state.user.role
        },
        entrance(state) {
            return state.entrance
        },
        platform(state) {
            return state.user.platform === 'android'
        },
    })
    export default class Alllessen extends wepy.page {
        data = {
            headerHeigth: 68,
            headerBackground: 'background-transparent',
            backgroundHeight: 0,
            isLoaded: false,
            shareTitle: '分享标题',
            specialCourseName: '',
            dataSet: {},
            sences: [],
            courseID: '',
            operateLabel: '',
            isNewSenceMap: {},
            wxPushType:'',
            shareImg:'',
            isIphonex: /iphone10|iphone x/i.test(wx.getSystemInfoSync().model),
            isNewCourseMap:[],
            senceID:'',
            moduleList:[],
            floatBox:{},
            shareCoverTitle:'',
            shareCoverImageUrl:'',
            courseName:''

        };
        components = {
            'jn-header': header,
            'mloading': Loading,
            'jn-poll': poll
        };
        onLoad({courseID = '', gift = '', wxPushType= 'newCoursePush'}) {
            let self = this
            self.courseID = courseID
            self.wxPushType = wxPushType
            if ('show' === gift) {
                wx.showToast({title: '领取成功'})
            }
        }
        onShow() {
            let self = this;
            self.initialize()
            
        }
        initialize() {
            let self = this
            let postData = {
                token: self.token,
                id:self.courseID,
            }
            return fetch.getNewSpecialCourse(postData).then((res) => {
                wx.createSelectorQuery().select('#ui-id').boundingClientRect((rect) => {
                    if (rect) {
                        self.backgroundHeight = rect.height - 50
                    } else {
                        self.backgroundHeight = 430
                    }
                }).exec()
                self.isNewSenceMap = res.isNewSenceMap;
                self.isNewCourseMap = res.isNewCourseMap;
                self.floatBox = res.floatBox
                self.shareCoverTitle = res.shareCoverTitle;
                self.shareCoverImageUrl = res.shareCoverImageUrl
                self.courseName = res.name
                self.isLoaded = true
                self.moduleList = res.moduleList
                _.each(self.moduleList, (data, index) => {
                    if ('poll' === data.type) {
                        data.index = index
                        data.cardStatus = data.pollType
                        if (data.isDone) {
                            let ballotTotal = _.reduce(data.optionList, (memo, item) => {return memo + item.ballot}, 0) // 统计全部投票人数
                            _.each(data.optionList, (item) => {
                                item.prop = Math.floor(item.ballot / ballotTotal * 1000) / 10
                            })
                        }
                    }
                })

                wepy.$instance.globalData.getLoadHuilder({pageTheme: self.courseName.name}) // ga统计
                self.$apply()
            })
        }
       
        methods = {
            // 跳去微课
            handleStartLesson(event) {
                let self = this
                if (!self.isTokenSet) {
                    return
                }
                let {currentTarget: {dataset: {item}}} = event
                let buttonStatus = item.buttonStatus
                let source = 'discoverPage'
                let senceName = item.name
                let resume = item.resume
                self.senceID = item.id

                let isNewSence = self.isNewSenceMap[self.senceID]
                self.reportButtonTap()

                wepy.$instance.globalData.getHuilder(`课程专题页/${self.courseName}`,'click',`${senceName}`)
                navigateToLesson({
                    courseID:self.courseID, 
                    senceID:self.senceID, 
                    resumeLastRead: resume,
                    source, 
                    isNewSence
                })
            },
            // 跳去 课程详情页
            getCourseDetail({currentTarget: {dataset: {item, type}}}) {
                let self = this
                let courseID = item.id;
                let courseType = item.buttonMsg ? item.buttonMsg : '专题';
                let name = item.name;
                let resume = item.resume ? item.resume : ''

                let typeSrc = ''
                switch (type) {
                    case '1':typeSrc = '轮播图';   break
                    case '2':typeSrc = '最新上线';  break
                    case '3':typeSrc = '热门课程';  break
                    case '4':typeSrc = '专题';  break
                }
                wepy.$instance.globalData.getHuilder(`课程专题页/${typeSrc}`,'click',`${name}`)
                wepy.navigateTo({url: `/pages/course-module/course-details?id=${courseID}&source=${courseType}`})
            },
             /**
             * 监听滚动条事件
             * @param event
             */
            getScroll(event) {
                let self = this
                let {detail: {scrollTop}} = event
                self.headerBackground = scrollTop > self.backgroundHeight ? 'background-transparent-opacity' : 'background-transparent'
            },
            /**
             * 授权登录信息
             */
            getAuthorize(event) {
                let self = this
                let {detail: {errMsg}, currentTarget: {dataset}} = event

                if (self.token) {
                    return
                }
                return new Promise((resolve, reject) => {
                    if (errMsg === 'getUserInfo:fail auth deny') throw new CustomError('用户拒绝授权')
                    if (errMsg && errMsg.includes('fail')) throw new CustomError('用户授权失败')

                    resolve(errMsg)
                }).then(userInfo => { // 确定授权
                    return store.dispatch(login())
                }).catch(error => { // 拒接授权

                })
            },
            /**
             * 投票
             * @param event
             */
            getPoll(event) {
                let self = this
                let {currentTarget: {dataset: {item, index}}} = event

                if (item.isDone) {
                    return
                }

                let postData = {
                    token: self.token,
                    pollID: item.pollID,
                    courseID: self.courseID,
                    optionList:item.selectedItem.id
                }
                
                fetch.sendUserPoll(postData).then((respone) => {
                    item.isDone = true
                    self.$broadcast('broadcast-poll', item)
                }).catch(error => {

                })
            }
        }
        reportButtonTap(courseID, senceID, buttonStatus) {
            let self = this
            wx.reportAnalytics('tap_to_lesson', {
                role: self.role,
                nickname: self.userName,
                channel: self.entrance.mappers[self.entrance.scenceID],
                courseid: self.courseID,
                senceid: self.senceID,
                source: '专题详情'
            })
        }

        events = {
            'header-info': (data) => {
                let self = this
                self.headerHeigth = data.headerHeigth
                self.$apply()
            },
            'on-interaction': (data) => {
                let self = this
                let item = _.find(self.moduleList, {pollID: data.id})
                _.extend(item, data)

                self.$apply()
            }
        }

        onShareAppMessage(res) {
            let self = this
            return {
                title: self.shareCoverTitle,
                path: `/pages/SpecialCourse/index?courseID=${self.courseID}`,
                imageUrl:self.shareCoverImageUrl,
                success: function (res) {
                    wepy.$instance.globalData.getHuilder('课程专题页/分享', 'click', `${self.courseName}`)
                    shareApi.reportSharing({
                        token:self.token,
                        type: shareDictionary.SHARE_SPECIAL_COURSE.type,
                        courseID:self.courseID,
                        senceID:self.senceID
                    })
                    wx.reportAnalytics('share_event', {
                        role: self.role,
                        nickname: self.userName,
                        coursename: self.courseName,
                        sencename: '/',
                        channel: self.entrance.mappers[self.entrance.scenceID],
                        type: shareDictionary.SHARE_SPECIAL_COURSE.type,
                    });
                },
                fail(res) {
                }
            };
        }
    }
</script>

<style lang="less" scoped>
    @import "../../assets/style/theme";
    .ui-special-course{
        width:100%;height:100%;background-color: @background-white;display: flex;flex-direction: column;align-items: center;
        view{box-sizing: border-box}
        .ui-course-content{
            .ui-first{
                height: 824rpx;
                image{width: 100%;max-height: 960rpx}
            }
            .ui-img-type{
                padding:0 32rpx 24rpx;
                image{width: 100%;}
            } 
            .ui-doc{
                padding:4rpx 32rpx 24rpx;
                .cell-title{font-size: 40rpx;color: @color-black;padding-top:20rpx;}
                .cell-content{margin-top:8rpx;font-size: 34rpx;color:@color-gray;padding-top:20rpx}
            }
            .ui-lesson{
                padding: 0 32rpx;
                .ui-item{
                    display: flex;height: 176rpx;align-items: center;
                    .ui-img image{width: 112rpx;height: 112rpx;border-radius: @border-radius-20;}
                    &:first-child .ui-content{border-top: none}
                    .ui-content{
                        height: 100%;display: flex;flex:1;justify-content: space-between;border-top:2rpx solid @border-gray;align-items:center;
                        .ui-font{
                            margin-left: 24rpx;
                            .cell-title{font-size: 32rpx;color: @color-black;width: 396rpx;overflow: hidden;white-space: nowrap;text-overflow:ellipsis;}
                            .cell-dec{font-size: 26rpx;color:@color-gray;margin-top:12rpx;width: 396rpx;overflow: hidden;white-space: nowrap;text-overflow:ellipsis;}
                        }
                        .cell-btn{width: 148rpx;height: 60rpx;text-align: center;line-height: 60rpx;background: @background-gray-F4;color:@color-blue;border-radius: 200rpx;font-size: 30rpx;}
                    }
                }
            }
            .ui-poll{
                padding:24rpx 32rpx;display: flex;flex-direction: column;align-items: center;
                .cell-name{font-size: 34rpx;color:@color-black;margin-top:24rpx}
                .cell-poll-btn{width: 200rpx;height: 60rpx;line-height: 60rpx;text-align: center;background: @background-gray-F4;color:@color-blue;font-size: 30rpx;border-radius: @border-radius-32;margin-top: 40rpx}
                .cell-poll-btn.cell-seleted{color:@color-gray;}
            }
            .ui-course{
                padding: 0 32rpx;
                .ui-item{
                    display: flex;height: 240rpx;align-items: center;
                    .ui-img image{width: 176rpx;height: 176rpx;border-radius: @border-radius-44;}
                    &:first-child .ui-content{border-top: none}
                    .ui-content{
                        margin-left: 36rpx;display: flex;flex:1;border-top:2rpx solid @border-gray;flex-direction: column;height:100%;justify-content:center;
                        .cell-title{font-size: 32rpx;color: @color-black;}
                        .cell-dec{font-size: 26rpx;color:@color-gray;margin-top:4rpx;}
                        .ui-btn-bottom{
                            height:84rpx;display:flex;align-items:flex-end;
                            .cell-btn{width: 128rpx;height: 60rpx;border-radius: 200rpx;color: @color-blue;background: @background-gray-F4;font-size: 30rpx;text-align: center;line-height: 60rpx;margin-right: 20rpx;}
                            .cell-tip{font-size: 26rpx;color:@color-gray;height:84rpx;line-height:108rpx;}
                        }
                    }
                }
            }
            .cell-border{height: 2rpx;border-bottom:2rpx solid @border-gray;margin:20rpx 16rpx 24rpx;}
        }
        .ui-bottom{
            .cell-margin{width: 100%;height: 200rpx;}
            .ui-share-box{
                position:fixed;width:100%;bottom:0;left:0;right:0;background-image:linear-gradient(180deg,rgba(255,255,255,0),rgba(255,255,255,1));z-index:@z-index-lower;
                .ui-share{
                    width: 702rpx;height: 100rpx;line-height: 100rpx;color: @color-white;font-size: 30rpx;text-align: center;margin: 28rpx auto;background-color: @background-blue;border-radius: @border-radius-20;display: flex;justify-content: center;position: relative;
                    .icon-share{font-size:36rpx;margin-right:4rpx;}
                    .cell-btn {
                        position: absolute;top: 0;left: 0;width: 100%;height: 100%;background-color: rgba(255, 255, 255, 0);border: 0;
                    }
                    
                }
                .ui-share-course{
                    width: 702rpx;height: 136rpx;background: rgba(239,239,244,0.90);border-radius: @border-radius-20;display: flex;justify-content: space-between;margin: 28rpx auto;align-items: center;padding:0 20rpx 0 12rpx;
                    .ui-left{
                        display: flex;
                        .ui-img {
                            display: flex;align-items: center;
                            image{width: 112rpx;height: 112rpx;border-radius: @border-radius-20;}
                        }
                        .ui-content{
                            margin-left: 20rpx;display: flex;flex-direction: column;justify-content: center;
                            .cell-title{font-size: 32rpx;color: @color-black;width: 396rpx;overflow: hidden;white-space: nowrap;text-overflow:ellipsis;}
                            .cell-dec{font-size: 26rpx;color:@color-gray;margin-top:12rpx;width: 396rpx;overflow: hidden;white-space: nowrap;text-overflow:ellipsis;}
                        }
                    }
                    .cell-btn{width: 144rpx;height: 60rpx;border-radius: @border-radius-32;background: @background-blue;color:@color-white;font-size: 30rpx;text-align: center;line-height: 60rpx;}
                }
                .ui-share-course.is-phonex{margin: 68rpx auto;}
            }
            .ui-share-font{
                z-index:@z-index-slightly;
                .cell-btn{
                    border-radius: @border-radius-20;border:0;font-size: 34rpx;color:@color-blue;width: 322rpx;height: 100rpx;background: @background-gray-F4;text-align: center;line-height: 100rpx;margin:44rpx auto 0;
                    .cell-icon{margin-right: 8rpx;font-size: 40rpx}
                }
                .cell-btn-margin{width: 100%;height: 230rpx;}
            }
        }
    }
</style>
