<style lang="less" scoped>
    @import "../../assets/style/theme";
    .ui-clear-button{width:160rpx;background-color:rgba(0,0,0,.3);font-size:24rpx;color:#fff;position:fixed;right:10rpx;top:20%;z-index:50;}
    .ui-container{width:100%;height:100%;background-color:@background-white;}
    .ui-clear{width:100%;height:70rpx;}
    /* 头部 */
    .ui-course-header{
        height:72rpx;padding:0 32rpx;box-sizing:border-box;
        .cell-title{font-size:68rpx;font-weight:700;}
    }
    .ui-empty{width:100%;margin:22rpx auto 120rpx;color:#14292c;font-family:PingFangSC-Regular;font-size:24rpx;opacity:.7;}
    /* 新人礼包  */
    .ui-gift{
        width:160rpx;height:160rpx;position:fixed;right:28rpx;bottom:140rpx;z-index:35;
        .cell-icon{
            width:44rpx;height:44rpx;text-align:center;line-height:44rpx;position:absolute;right:-12rpx;top:-40rpx;
            &::before{content:' ';width:24rpx;height:24rpx;background-color:@background-white;position:absolute;left:22rpx;top:22rpx;}
            text{font-size:44rpx;color:rgba(0,0,0,.8);position:relative;}
        }
        button{background:none;}
        image{width:160rpx;height:160rpx;}
    }
    .cell-find-dec{margin:4rpx 0 26rpx 40rpx;color:@color-black;text-align:left;font-size:34rpx;}
    /* 内容 */
    .ui-content{
        .ui-item{
            padding: 0 40rpx;margin-bottom:56rpx;
            .ui-special-subject{
                width: 100%;height: 824rpx;background:none;box-shadow:@box-shadow-hight;border-radius: @border-radius-32;overflow: hidden;
                image{width: 100%;height: 824rpx;}
            }
            .ui-evaluation{
                height: 824rpx;width: 100%;border-radius: @border-radius-32;background-size:100% 606rpx;background-position:top left;background-repeat:no-repeat;display:flex;position: relative;display: flex;align-items:flex-end;box-sizing:border-box;box-shadow:@box-shadow-hight;
                .ui-num{
                    position: absolute;top:0;right: 30rpx;background-image: url('http://wx-small.runwise.cn/image/imageIDfc1c51b87e74b7abcc7e8c5d1ffd.png');background-size:100% 100%;
                    .ui-cri{
                        width: 180rpx;height: 120rpx;position: relative;font-size:30rpx;color:@color-white;text-align: center;
                        .cell-item{font-weight: bold;font-size: 56rpx;height: 56rpx;line-height: 64rpx}
                    }
                }
                .ui-main{
                    background: @background-white;font-size: 32rpx;text-align:left;padding:18rpx 40rpx 40rpx 40rpx;width: 100%;border-bottom-right-radius: @border-radius-20;border-bottom-left-radius: @border-radius-20;
                    .cell-sence{color:@color-blue;}
                    .cell-title{color:@color-black;font-weight: bold;font-size: 52rpx;overflow:hidden;text-overflow:ellipsis;display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:2;}
                    .cell-dec{color:@color-gray}
                }
            }
            .ui-tody-subject{
                width: 100%;border-radius: @border-radius-32;padding:28rpx 40rpx;box-sizing: border-box;background: @background-white;box-shadow:@box-shadow-hight;text-align: left;
                .cell-tip{font-size: 32rpx;color:@color-gray;}
                .cell-title{font-size: 52rpx;color: @color-black;margin: 16rpx 0;font-weight: bold;}
                .ui-subject{
                    .ui-subject-item{
                        height: 176rpx;display: flex;align-items: center;background:none;line-height:1;text-align:left;
                        .ui-img{
                            margin-right: 26rpx;width: 112rpx;
                            image{
                                width: 112rpx;height: 112rpx;border-radius: 28rpx;
                            }
                        }
                        &:last-of-type .ui-content{border-bottom: none;}
                        .ui-content{
                            box-sizing:border-box;display: flex;align-items: center;justify-content: space-between;flex:1;height: 164rpx;border-bottom:2rpx solid @border-gray;
                            .ui-detail{
                                width:300rpx;
                                .cell-name{padding-bottom:6rpx;font-size: 32rpx;color:@color-black;font-weight: bold;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;}
                                .cell-dec{
                                    font-size: 26rpx;color:@color-gray;margin-top:12rpx;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;
                                    text{color:@color-black;font-size: 28rpx}
                                }
                            }
                            .ui-btn{
                                display: flex;align-items:center;height: 100%;flex-direction: column;justify-content:center;
                                .cell-btn{height: 60rpx;width: 148rpx;border-radius: @border-radius-32;background-color: @background-gray-F4;color:@color-blue;text-align: center;line-height: 60rpx;font-size: 30rpx;font-weight: 700;}
                                .cell-btn-tip{color:@color-gray;font-size: 24rpx;margin-top: 8rpx;}
                            }
                        }

                    }
                }
            }
        }
    }
    .ui-more{
        width:100%;height:80rpx;font-size:32rpx;color:@color-gray;
        &.is-bar{margin-bottom:110rpx;}
    }
</style>

<template>
    <view catchtouchmove="{{!isScroll}}">
        <jn-loading wx:if="{{ !isLoaded }}"></jn-loading>
        <jn-evaluate wx:if="{{ isLoaded }}" :isShowEvaluate.sync="isShowEvaluate"></jn-evaluate>

        <scroll-view
                scroll-with-animation
                scroll-y="{{isScroll}}"
                bindscrolltoupper="getScrollRefresh"
                bindscrolltolower="getScrollMore">
            <jn-header hiddenButton className="background-transparent" statusBackground="#fff"></jn-header>

            <form bindsubmit="handleSavePushCode" report-submit>
                <view class="ui-course-header main-justify cross-center">
                    <view class="cell-title">发现</view>
                    <button class="module-avatar flex-box-0"
                            open-type="getUserInfo"
                            bindgetuserinfo="getAuthorize"><image src="{{avatar}}"></image></button>
                </view>
                <view class="cell-find-dec">{{discoverPageTitle}}</view>
                <view class="ui-content">
                    <view class="ui-item" wx:for="{{informationList}}" wx:key="{{index}}" wx:index="{{index}}" >
                        <button wx:if="{{item.type == 'editor'}}"
                                class="ui-special-subject"
                                form-type="submit"
                                hover-stay-time="100"
                                @tap.stop="getEditorItem"
                                data-item="{{item}}">
                            <image mode="aspectFit" src="{{item.coverImageURL}}" />
                        </button>
                        <view wx:if="{{item.type == 'noSkill' || item.type == 'skill'}}"
                              class="ui-evaluation" style="background-image:url({{item.coverImageURL}})"
                              @tap.stop="getSkillItem" data-item="{{item}}">
                            <view class="ui-num">
                                <view class="ui-cri">
                                    <view class="cell-item">{{item.userCount}}</view>
                                    <view>人已参加</view>
                                </view>
                            </view>
                            <view class="ui-main">
                                <view class="cell-sence">{{item.sceneType}}</view>
                                <view class="cell-title">{{item.name}}</view>
                                <view class="cell-dec">{{item.subtitle}}</view>
                            </view>
                        </view>
                        <view wx:if="{{item.type == 'subject'}}" class="ui-tody-subject">
                            <view class="cell-tip">{{item.sceneType}}</view>
                            <view class="cell-title">{{item.name}}</view>
                            <view class="ui-subject">
                                <repeat for="{{item.senceList}}" key="index" index="index" item="courseItem">
                                    <button hover-stay-time="100"
                                            class="ui-subject-item"
                                            data-item="{{item}}"
                                            form-type="submit"
                                            data-course-item="{{courseItem}}"
                                            @tap.stop="handleStartLesson">
                                        <view class="ui-img">
                                            <image mode="aspectFill" src="{{courseItem.imageUrl}}" />
                                        </view>
                                        <view class="ui-content">
                                            <view class="ui-detail">
                                                <view class="cell-name">{{courseItem.senceName}}</view>
                                                <view class="cell-dec">{{courseItem.senceTarget}}</view>
                                            </view>
                                            <view class="ui-btn">
                                                <view class="cell-btn">{{courseItem.buttonStatusMsg}}</view>
                                                <view class="cell-btn-tip" wx:if="{{item.type == 'todayTask'}}" >
                                                    {{courseItem.giftStatus}}
                                                </view>
                                            </view>
                                        </view>
                                    </button>
                                </repeat>
                            </view>
                        </view>

                    </view>
                </view>
            </form>
            <view class="ui-clear"></view>
            <view class="ui-more main-center cross-center"
                  :class="{'is-bar': hasStudyingBar}">{{!isNotMore &&  informationList.length >= pageSize ?'正在努力加载...' : '没有更多了'}}</view>

            <studying-bar :scrollTop.sync="scrollTop"></studying-bar>
        </scroll-view>
    </view>
</template>

<script>
    import wepy from 'wepy'
    import {getStore, connect} from 'wepy-redux'
    import ga from 'wxapp-ga/ga'
    import PushMixin from '../../mixins/push'
    import loadingMixin from '../../mixins/loading'
    import header from '../../components/common/header'
    import Loading from '../../components/common/loading'
    import EvaluateModal from '../../components/EvaluateModal/index'
    import studyingBar from '../../components/common/studying-bar'
    import {fetch} from '../../api'
    import {showErrorPage, shareDictionary, getStorageAsync, initializationDeligate ,navigateToLesson} from '../../utils'
    import {getLoginInfo, renewUserGiftBox, refreshUserInformations} from '../../redux/models/user'
    import _ from 'underscore'

    const GoogleAnalytics = ga.GoogleAnalytics
    const HitBuilders = ga.HitBuilders
    const store = getStore()
    @connect({
        avatar(state) {
            return state.user.avatarUrl
        },
        userName(state) {
            return state.user.nickName
        },
        token(state) {
            return state.user.token
        },
        role(state) {
            return state.user.role
        },
        entrance(state) { // 全局场景值
            return state.entrance
        }
    })
    export default class FindList extends wepy.page  {
        config = {
            navigationBarTitleText: "下拉刷新",
            enablePullDownRefresh: true,
            backgroundTextStyle: "dark"
        }

        mixins = [PushMixin, loadingMixin]

        components = {
            'jn-header': header,
            'jn-loading': Loading,
            'jn-evaluate': EvaluateModal,
            'studying-bar': studyingBar
        }

        data = {
            isLoaded: false,
            isMoreLoaded: true,
            isNotMore: false, // 全部加载完了
            hasStudyingBar: false, // 是否有学习bar
            page: 1,
            pageSize: 10,
            isScroll: true, // 是否能滚动
            scrollTop: 0,
            isShowEvaluate: false,
            informationList: [],
            discoverPageTitle: '',
            courseID: null,
            senceID: null,
            sencePage: null
        }

        onLoad() {
            let self = this
            let pageNum = wx.getStorageSync('pageLoadNum')
            self.isShowEvaluate = pageNum !== 2 ? false : true
            initializationDeligate({initializeFunc: self.initialize.bind(self)})
        }

        onShow() {
            let self = this
            self.informationList.length && self.$broadcast('studying-bar')

            if (self.senceID) {
                self.initialize()
            }
            wepy.$instance.globalData.getLoadHuilder() // ga统计
        }
        /**
         * 监听滚动条的位置
         * @param
         */
        onPageScroll(res) {
            let self = this
            self.scrollTop = res.scrollTop
            self.$apply()
        }
        initialize(token) {
            let self = this
            // 通知组件
            self.$broadcast('studying-bar')
            self.__fetchCourses({token: token})
        }
        /**
         * 列表数据
         * @private
         */
        __fetchCourses(params) {
            let self = this
            let postData = {
                token: params && params.token || self.token,
                page: self.sencePage || self.page,
                pageSize: self.pageSize
            }

            if (params && !params.callBack) {
                self.isMoreLoaded = false
            }

            return fetch.discoverPage(postData).then((respone) => {
                self.isLoaded = true
                self.discoverPageTitle = respone.discoverPageTitle
                // 返回跟新微课状态
                if (self.senceID) {
                    self.__courseStatus(respone.informationList)
                    return
                }
                // 记录这部分数据是属于哪块分页的
                _.each(respone.informationList, (item) => {
                    item.page = self.page
                })
                // 下拉刷新
                if (params && params.callBack && _.isFunction(params.callBack)) {
                    self.informationList = []
                    self.informationList = respone.informationList
                    params.callBack()
                    return
                }
                // 第一次请求或上拉加载
                self.isMoreLoaded = true
                if (respone.informationList && respone.informationList.length) {
                    self.informationList = self.informationList.concat(respone.informationList)
                } else {
                    self.isNotMore = true
                }

                self.$apply()
            }).catch(error => {
                self.isLoaded = true
                self.isMoreLoaded = true
                throw error
            })
        }
        /**
         * 今日任务，今日主题的局部刷新，跟踪微课的状态变化
         * @private
         */
        __courseStatus(list) {
            let self = this
            // 查询需要改的整块数据，而非一个sence
            let newData = _.find(list, (data) => {
                if ('todayTask' === data.type || 'subject' === data.type) {
                    let item = _.find(data.senceList, {id: self.senceID})
                    if (item) {
                        return data
                    }
                }
            })
            // 替换掉
            _.find(self.informationList, (data, index) => {
                if (self.sencePage === data.page
                    && ('todayTask' === data.type || 'subject' === data.type)) {
                    let item = _.find(data.senceList, {id: self.senceID})
                    if (item) {
                        self.informationList.splice(index, 1, newData)
                        self.$apply()
                    }
                }
            })
        }

        methods = {
            /**
             * 微信授权登录
             */
            getAuthorize(event) {
                let self = this
                let {detail: {errMsg, userInfo, rawData}} = event

                store.dispatch(getLoginInfo({userInfo, errMsg})).then(repsone => {
                    wepy.navigateTo({url: `/pages/user-module/mine?type=2`})
                })
            },
            getAvatar() {
                let self = this
                wepy.$instance.globalData.getHuilder('发现页/头像', 'click', '我的页面')
            },
            handleStartLesson(event) {
                let self = this
                let {currentTarget: {dataset: {item, courseItem}}} = event
                let buttonStatus = courseItem.buttonStatus
                let lessonType = courseItem.lessonType
                let source = 'discoverPage'
                let senceName = courseItem.senceName
                let resume = courseItem.resume

                self.sencePage = item.page
                self.courseID = courseItem.courseID
                self.senceID = courseItem.id

                if ('subject' === item.type) {
                    wepy.$instance.globalData.getHuilder('发现页/简易版专题','click',`${senceName}`)
                } else if ('todayTask' === item.type) {
                    wepy.$instance.globalData.getHuilder('发现页/今日任务','click',`${senceName}`)
                }

                //
                if ('previewTest' === lessonType) {
                    return self.$navigate(`/pages/activity-module/appraisal-start`, {
                        courseID:self.courseID,
                        senceID:self.senceID,
                        source})
                }

                if ('needPay' === buttonStatus) {
                    self.$navigate(`/pages/course-module/course-pay`, {senceID: self.senceID})
                    return
                }
                if ('finish' === buttonStatus) {
                    self.$navigate(`/pages/course-module/course-review`, {courseID: self.courseID, senceID: self.senceID})
                    return
                }
                navigateToLesson({
                    courseID:self.courseID,
                    senceID:self.senceID,
                    resumeLastRead: resume,
                    source
                })
            },
            /**
             * 下拉刷新
             * @param
             */
            getScrollRefresh() {
                let self = this
                self.scrollTop = 0
                self.$apply()
            },
            /**
             * 上拉加载
             * @param
             */
            getScrollMore(event) {
                let self = this
            },
            getEditorItem({currentTarget: {dataset: {item}}}) {
                let self = this
                let courseID = item.id
                let type = item.type


                // 微信事件上报
                wx.reportAnalytics('tap_discover_slogan', {
                    role: self.role,
                    nickname: self.userName,
                    channel: self.entrance.mappers[self.entrance.scenceID],
                    type: type,
                    id: courseID
                })

                wepy.$instance.globalData.getHuilder('发现页/专题','click', `${item.name}`)
                return self.$navigate('/pages/SpecialCourse/index', {courseID})
            },
            getSkillItem({currentTarget: {dataset: {item}}}){
                let self = this
                let examID = item.id
                let type = item.type

                 // 微信事件上报
                wx.reportAnalytics('tap_discover_slogan', {
                    role: self.role,
                    nickname: self.userName,
                    channel: self.entrance.mappers[self.entrance.scenceID],
                    type: type,
                    id: examID
                })
                wepy.$instance.globalData.getHuilder('发现页/测一测','click', `${item.name}`) // ga

                let postData = {
                    token: self.token,
                    examID: examID
                }
                fetch.getExamFront(postData).then((res) => {
                    if (res.buttonStatus === 'done') {
                        self.$navigate(`/pages/activity-module/${'noSkill' === type ? 'appraisal-results' : 'new-appraisal-results'}`, {examID})
                    } else {
                        self.$navigate(`/pages/activity-module/${'noSkill' === type ? 'appraisal-start' : 'new-appraisal-cover'}`, {examID})
                    }
                })
            }
        }

        events = {
            /**
             * 监听是否要禁止滚动
             * @param options
             */
            'on-studying-bar': (data) => {
                let self = this
                self.isScroll = data.isShow
            },
            'on-is-studying-bar': (data) => {
                let self = this
                self.hasStudyingBar = data.isShowBar
            }
        }

        /**
         * 分享
         * @param options
         * @returns {{title: string, path: string, success: success, fail: fail}}
         */
        onShareAppMessage(options) {
            return {
                title: '即能，互联网微学习',
                path: '/pages/FindList/index?source=FindTabShare',
                success(res) {
                    getStorageAsync({key: 'name'}).then(name => {
                        wx.reportAnalytics('share_event', {
                            nickname: name,
                            type: shareDictionary.SHARE_WE_APP.type,
                        })

                    }).catch(error => error)

                    getStorageAsync({key: 'token'}).then(token => {
                        fetch.reportSharing({token, type: shareDictionary.SHARE_WE_APP.type}) // 向后台上报分享行为

                    }).catch(error => error)
                },
                fail(res) {
                    console.log('转发失败')
                }
            }
        }

        onPullDownRefresh() {
            let self =this;
            self.page = 1
            self.__fetchCourses().then(()=>{
                wx.stopPullDownRefresh()
            }).catch((error)=>{
                console.log(error)
            })
        }
        onReachBottom() {
            let self = this

            if (self.isMoreLoaded) {
                self.page++
                self.__fetchCourses()
            }
        }
    }
</script>
