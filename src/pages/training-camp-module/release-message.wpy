<template>
    <view class="ui-team-announce">
        <jn-header title="问题和想法"></jn-header>
        <view class="announce-top" wx:if="{{senceID}}">
            <image class="announce-top-img" mode="aspectFill" src="{{imageUrl}}"/>
            <view>
                <view class="announce-top-title">{{senceName}}</view>
                <view class="announce-top-desc">{{skillGroup}}</view>
            </view>
        </view>
        <view class="announce-content">
      <textarea focus="{{true}}" class="announce-content-input" placeholder-class="announce-content-input-p"
                placeholder="{{action==='question'?'请输入你的问题或想法':'请输入消息内容'}}" bindinput="handleCommentInput"
                maxlength="{{76}}"></textarea>
            <view class="announce-content-tip">还可以输入{{computeStrLength}}个字</view>
        </view>
        <view class="team-learning-article__footer-btn-wapper" style="{{ipX?'padding-bottom:40rpx':''}}">
            <button wx:if="{{readyToSend}}" class="team-learning-article__footer-btn " plain="{{ true }}"
                    @tap.stop="handleSubmit">提 交
            </button>
            <button wx:else class="team-learning-article__footer-btn disable" plain="{{ true }}">提 交</button>
        </view>
    </view>
</template>

<script>
    import wepy from "wepy";
    import {sleep} from "../../utils"
    import loadingMixin from "../../mixins/loading";
    import header from '../../components/common/header'
    import {
        showErrorPage
    } from "../../utils";
    import Toast from "wepy-com-toast";
    import {
        course as courseApi, team as teamApi
    } from "../../api";
    import {
        NetworkError
    } from "../../errors";
    import {
        getStore,
        connect
    } from "wepy-redux";

    const store = getStore();
    const state = store.getState();
    @connect({
        userName(state) {
            return state.user.name;
        }, // mapState 即getters
        avatar(state) {
            return state.user.avatar;
        },
        token(state) {
            // return 'userID67eaa3af1eca4c5e99d90ef07c8b0353-1529130257419-29071e22805ed65d7aba43ad3fc07aad'
            return state.user.token;
        },
        code(state) {
            return state.user.code;
        },
        ipX(state) {
            return state.user.equipmentModel.startsWith('iPhone X')
        }
    })
    export default class TeamLearningAnnounce extends wepy.page {
        mixins = [loadingMixin]; // end mixins

        computed = {
            computeStrLength() {
                return 76 - this.inputValue.replace(/\s/g, "").length
            }
        }
        data = {
            readyToSend: false,
            inputValue: "",
            senceID: '',
            teamID: '',
            senceName: '',
            imageUrl: '',
            skillGroup: '',
            action: ''
        };
        components = {
            'jn-header': header
        }; // end components
        onLoad({teamID = '', senceID = '', senceName = '', imageUrl = '', skillGroup = '', action = ''}) {
            this.teamID = teamID
            this.senceID = senceID
            this.senceName = senceName
            this.imageUrl = imageUrl
            this.skillGroup = skillGroup
            this.action = action
            wepy.$instance.globalData.getLoadHuilder({pageTheme: senceName}) // ga统计
        }

        onShow() {
            wepy.setNavigationBarTitle({
                title: this.action === 'question' ? "提问" : '发布消息'
            })
        }

        methods = {
            handleSubmit() {
                teamApi.sendTeamPost({
                    token: this.token,
                    senceID: this.senceID,
                    action: this.action,
                    postContent: this.inputValue,
                    teamID: this.teamID
                })
                    .then(data => {
                        wx.showToast({
                            icon: 'success',
                            title: '消息发布成功'
                        })
                        return sleep(1)
                            .then(() => {
                                wx.navigateBack({
                                    delta: 1
                                })
                            })
                    })
            },
            handleCommentInput({
                                   detail: {
                                       value
                                   }
                               }) {
                this.inputValue = value
                this.readyToSend = value ? true : false
                this.$apply()
            },
        }; // end methods
        events = {}; // end events
    }
</script>

<style lang="less" scoped>
    @import "../../assets/style/theme";     
    .ui-team-announce{
        width: 100%;height: 100%;background-color: @background-gray-F4;
        .announce-top {width: 100%;height: 180rpx;background-color: @background-white;display: flex;align-items: center;border-top: @border-gray solid 2rpx;}
    }
  .team-learning-article__footer-btn-wapper {width: 100%;height: 140rpx;position: fixed;left: 0;bottom: 0;display: flex;justify-content: center;align-items: center;background-color: @background-white;border-top: @border-gray 2rpx solid;z-index: 1100;}
  .team-learning-article__footer-btn {width: 702rpx;height: 100rpx;line-height: 100rpx;background-color: @background-blue !important;color: @color-white !important;border: 0 !important;border-radius: @border-radius-20;}
  .disable {opacity: 0.2;}
  .announce-top-img {margin-left: 56rpx;width: 120rpx;height: 120rpx;}
  .announce-top-title {width: 500rpx;font-family: PingFangSC-Semibold;font-size: 32rpx;color: @color-black;line-height: 40rpx;margin-left: 16rpx;}
  .announce-top-desc {font-family: PingFangSC-Regular;font-size: 24rpx;color: @color-gray;line-height: 26rpx;margin-top: 28rpx;margin-left: 16rpx;}
  .announce-content {width: 100%;height: 350rpx;position: relative;border-top: 20rpx solid @border-gray;background-color: @background-white;display: flex;flex-direction: column;align-items: center;}
  .announce-content-input {font-size: 16px;color: @color-black;width: 670rpx;min-height: 220rpx;height: fit-content;margin-top: 44rpx;}
  .announce-content-input-p {color:@color-gray;}
  .announce-content-tip {font-family: PingFangSC-Regular;font-size: 28rpx;color: @color-gray;text-align: right;position: absolute;right: 26rpx;bottom: 22rpx}
</style>
