<style lang="less" scoped>

</style>

<template>
    <jn-header></jn-header>
    <view class="module-team-discuss-edit">
        <view class="ui-title">
            <textarea placeholder="输入标题（选填）"
                      maxlength="-1"
                      auto-height="{{true}}"
                      adjust-position="{{false}}"
                      data-type="title"
                      value="{{sendData.title}}"
                      bindblur="getBlur"></textarea>
        </view>

        <repeat for="{{sendData.list}}" key="index" index="index" item="data">
            <view class="ui-description" wx:if="{{'text'==data.type}}">
                <textarea placeholder="输入内容"
                          maxlength="-1"
                          auto-height="{{true}}"
                          adjust-position="{{false}}"
                          data-type="content"
                          value="{{data.content}}"
                          bindblur="getBlur"></textarea>
            </view>

            <view class="ui-link main-justify" wx:if="{{'link'==data.type}}">
                <textarea maxlength="-1"
                          auto-height="{{true}}"
                          data-type="{{index}}"
                          value="{{data.title}}"
                          adjust-position="{{false}}"
                          bindblur="getBlur"></textarea>
                <view class="cell-close cross-center">
                    <text class="icon-delete-select"
                          data-type="{{index}}"
                          @tap.stop="getDetele"></text>
                </view>
            </view>

            <view class="ui-thumb" wx:if="{{'image'==data.type}}">
                <image mode="widthFix" src="{{data.img}}"></image>
                <text class="icon-delete-select"
                      data-type="{{index}}"
                      @tap.stop="getDetele"></text>
            </view>

            <view class="ui-lesson" wx:if="{{'lesson'==data.type}}">
                <repeat for="{{data.list}}" key="index" index="index" item="item">
                    <view class="ui-item flex">
                        <view class="cell-thumb flex-box-0">
                            <image mode="aspectFit" src="{{item.imageUrl}}"></image>
                        </view>
                        <view class="ui-content main-justify cross-center">
                            <view class="ui-info">
                                <view class="cell-title">{{item.senceName}}</view>
                                <view class="cell-description">{{item.senceTarget}}…</view>
                            </view>
                        </view>
                    </view>
                </repeat>
                <text class="icon-delete-select"
                      data-type="{{index}}"
                      @tap.stop="getDetele"></text>
            </view>
        </repeat>

        <view class="ui-tool">
            <view class="ui-container main-justify cross-center">
                <view class="ui-list flex-box-1">
                    <button class="cell-item" @tap.stop="getAddThumb"><text class="icon-thumb"></text></button>
                    <button class="cell-item" @tap.stop="getAddLink"><text class="icon-link"></text></button>
                    <button class="cell-item" @tap.stop="getAddLesson"><text class="icon-course1"></text></button>
                    <button class="cell-item" @tap.stop="getAddPractice"><text class="icon-practice"></text></button>
                </view>
                <view class="cell-button flex-box-0"><text class="icon-send"></text></view>
            </view>
        </view>
    </view>
    <jn-insert-link :isShow.sync="isShowInsertLink"></jn-insert-link>
    <jn-insert-lesson :isShow.sync="isShowInsertLesson"></jn-insert-lesson>
    <jn-insert-practice wx:if="{{ true }}"
                        :isShowInsertPractice.sync="isShowInsertPractice"
                        @onClickClose.user="getClosePractice"
                        @onClickSure.user="getPracticeList"></jn-insert-practice>
</template>

<script>
    import wepy from 'wepy'
    import {getStore, connect} from 'wepy-redux'
    import header from '../../components/common/header'
    import insertLink from '../../components/team-module/insert-link'
    import insertLesson from '../../components/team-module/add-lesson'
    import insertPractice from '../../components/team-module/add-practice'
    import _ from 'underscore'

    const store = getStore()
    @connect({
        systemInfo(state) {
            return state.user
        }
    })
    export default class courseLearning extends wepy.page {
        components = {
            'jn-header': header,
            'jn-insert-link': insertLink,
            'jn-insert-lesson' : insertLesson,
            'jn-insert-practice' : insertPractice,
        }

        data = {
            isShowFullComponent: false,
            isShowInsertLink: false,
            isShowInsertLesson:false,
            isShowInsertPractice:false,
            sendData: {
                title: '',
                list: [
                    {
                        content: "",
                        index: 0,
                        type: "text"
                    },
                    {
                        type: 'lesson',
                        index: 1,
                        list: [
                            {
                                id:"senceID39e9c34a6a146ea32098c9b71349",
                                imageUrl: "http://image.runwise.cn/image/imageID84fe6aae802405832c54752d0978.png",
                                isSelected: true,
                                senceName: "定性衡量增长的基础",
                                senceTarget: "确定增长基础",
                            },
                            {
                                id:"senceID39e9c34a6a146ea32098c9b71349",
                                imageUrl: "http://image.runwise.cn/image/imageID84fe6aae802405832c54752d0978.png",
                                isSelected: true,
                                senceName: "定性衡量增长的基础",
                                senceTarget: "确定增长基础",
                            }
                        ]
                    }
                ]
            }
        }

        onLoad() {

        }

        onShow() {

        }

        __deteleModule(index) {
            let self = this
            let list = self.sendData.list
            list.splice(index, 1)
            self.$apply()
        }

        methods = {
            getBlur(event) {
                let self = this
                let {detail:{value}, currentTarget: {dataset: {type}}} = event
                switch(type) {
                    case 'title':
                        self.linkLoaction = value
                        break
                    case 'content':
                        self.linkTitle = value
                        break
                    default:
                        if ('' === value) {
                           self.__deteleModule(type)
                        }
                }
            },
            getAddThumb() {
                let self = this
                let list = self.sendData.list
                wx.chooseImage({
                    count: 1,
                    success: (data) => {
                        list.push({
                            img: data.tempFiles[0].path,
                            index: list.length,
                            type: "image"
                        })
                        self.$apply()
                    }
                })
            },
            getAddLink() {
                let self = this
                self.isShowInsertLink = true
                self.$apply()
            },
            getAddPractice() {
                let self = this;
                self.isShowInsertPractice = true;
                self.$apply()
            },
            getAddLesson() {
                let self = this
                self.isShowInsertLesson = true
                self.isShowFullComponent = true
                self.$apply()
            },
            getPracticeList(event) {
                let self = this;
                self.isShowInsertPractice = false;
                self.$apply()
                console.log(event,111)
            },
            getDetele(event) {
                let self = this
                let {currentTarget: {dataset: {type}}} = event
                self.__deteleModule(type)
            }
        }

        events = {
            'on-insert-link': (data) => {
                let self = this
                let list = self.sendData.list
                let item = _.find(list, {type: 'link'})

                if (!item) {
                    list.push({
                        title: data.title || data.link,
                        link: data.link,
                        type: 'link',
                        index: list.length
                    })
                } else {
                    item.title = data.title,
                    item.link = data.link
                }

                self.isShowInsertLink = false
                self.$apply()
            },
            'on-add-lesson': (data) => {
                let self = this
                let list = self.sendData.list
                if (data) {
                    list.push({
                        list: data,
                        type: 'lesson',
                        index: list.length
                    })
                }
console.log(list)
                self.isShowInsertLesson = false
                self.isShowFullComponent = false
                self.$apply()
            }
        }
    }
</script>
