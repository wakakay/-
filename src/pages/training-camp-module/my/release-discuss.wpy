<style lang="less" scoped>
    @import "../../../assets/style/theme";
    .ui-select-list{
        box-sizing:border-box;height:120rpx;padding:24rpx 32rpx;background-color:@background-color-E5;border-bottom:2rpx solid @border-gray;
        .cell-radio{
            margin-right:32rpx;font-size:34rpx;color:@color-black;line-height:64rpx;
            text{margin-right:12rpx;font-size:48rpx;color:@color-blue;position:relative;top:10rpx;}
        }
        .ui-switch{
            width:280rpx;
            text{margin-right:16rpx;font-size:34rpx;color:@color-black;line-height:64rpx;}
        }
    }
    .ui-time{
        box-sizing:border-box;height:140rpx;padding:16rpx 32rpx;background-color:@background-color-E5;border-bottom:2rpx solid @border-gray;
        .cell-unit{width:80rpx;text-align:center;font-size:24rpx;color:@color-blue;}
        .cell-label{padding-bottom:8rpx;font-size:24rpx;color:@color-gray;line-height:40rpx;}
        .cell-time{
            height:56rpx;padding:0 20rpx;background-color:@background-white;font-size:24rpx;color:@color-blue;line-height:56rpx;border-radius:@border-radius-32;
            text{display:block;font-size:24rpx;transform:rotate(90deg);}
        }
    }
</style>

<template>
    <jn-header></jn-header>
    <view class="ui-select-list main-justify">
        <view class="ui-radio dir-left">
            <view class="cell-radio">
                <text class="icon-selectable"></text>通知
            </view>
            <view class="cell-radio">
                <text class="icon-selected"></text>其他
            </view>
        </view>

        <view class="ui-switch flex-right">
            <text>置顶</text><switch color="#007AFF" />
        </view>
    </view>

    <view class="ui-time flex">
        <picker mode="date"
                value="{{date}}"
                start="2015-09-01"
                bindchange="bindDateChange">
            <view class="cell-label">开始时间</view>
            <view class="cell-time main-justify">{{date}}<text class="icon-right-arrow"></text></view>
        </picker>
        <view class="cell-unit">:</view>
        <picker mode="time"
                value="{{time}}"
                start="2015-09-01"
                bindchange="bindDateChange">
            <view class="cell-label">开始时间</view>
            <view class="cell-time main-justify">{{date}}<text class="icon-right-arrow"></text></view>
        </picker>
    </view>

    <view class="module-team-discuss-edit">
        <view class="ui-title">
            <textarea placeholder="输入标题（选填）"
                      maxlength="-1"
                      auto-height="{{true}}"
                      adjust-position="{{false}}"
                      data-type="title"
                      value="{{sendData.title}}"
                      bindblur="getBlur"></textarea>
        </view>

        <repeat for="{{sendData.infoList}}" key="index" index="index" item="data">
            <view class="ui-description" wx:if="{{'text'==data.type}}">
                <textarea placeholder="输入内容"
                          maxlength="-1"
                          auto-height="{{true}}"
                          adjust-position="{{false}}"
                          data-type="content"
                          value="{{data.content}}"
                          bindblur="getBlur"></textarea>
            </view>

            <view class="ui-link main-justify" wx:if="{{'link'==data.type}}">
                <textarea maxlength="-1"
                          auto-height="{{true}}"
                          data-type="{{index}}"
                          value="{{data.title}}"
                          adjust-position="{{false}}"
                          bindblur="getBlur"></textarea>
                <view class="cell-close cross-center">
                    <text class="icon-delete-select"
                          data-type="{{index}}"
                          @tap.stop="getDetele"></text>
                </view>
            </view>

            <view class="ui-thumb" wx:if="{{'image'==data.type}}">
                <image mode="widthFix" src="{{data.img}}"></image>
                <text class="icon-delete-select"
                      data-type="{{index}}"
                      @tap.stop="getDetele"></text>
            </view>

            <view class="ui-lesson" wx:if="{{'lesson'==data.type}}">
                <repeat for="{{data.list}}" key="index" index="index" item="item">
                    <view class="ui-item flex">
                        <view class="cell-thumb flex-box-0">
                            <image mode="aspectFit" src="{{item.imageUrl}}"></image>
                        </view>
                        <view class="ui-content main-justify cross-center">
                            <view class="ui-info">
                                <view class="cell-title">{{item.senceName}}</view>
                                <view class="cell-description">{{item.senceTarget}}…</view>
                            </view>
                        </view>
                    </view>
                </repeat>
                <text class="icon-delete-select"
                      data-type="{{index}}"
                      @tap.stop="getDetele"></text>
            </view>

            <view class="ui-practice" wx:if="{{'textSelectionVer2'==data.type}}">
                <repeat for="{{data.list}}" key="index" index="index" item="item">
                    <jn-single-choice :cardIndex.sync="index" :cardsList.sync="data.list"></jn-single-choice>
                </repeat>
                <text class="icon-delete-select"
                      data-type="{{index}}"
                      @tap.stop="getDetele"></text>
            </view>

        </repeat>

        <view class="ui-tool">
            <view class="ui-container main-justify cross-center">
                <view class="ui-list flex-box-1">
                    <button class="cell-item" @tap.stop="getAddThumb"><text class="icon-thumb"></text></button>
                    <button class="cell-item" @tap.stop="getAddLink"><text class="icon-link"></text></button>
                    <button class="cell-item" @tap.stop="getAddLesson"><text class="icon-course1"></text></button>
                    <button class="cell-item" @tap.stop="getAddPractice"><text class="icon-practice"></text></button>
                </view>
                <button class="cell-button flex-box-0"
                        disabled="{{!isSumbit}}"
                        @tap.stop="getSumbitDiscuss"><text class="icon-send"></text></button>
            </view>
        </view>
    </view>
    <jn-insert-link :isShow.sync="isShowInsertLink"></jn-insert-link>
    <jn-insert-lesson :isShow.sync="isShowInsertLesson"></jn-insert-lesson>
    <jn-insert-practice :isShow.sync="isShowInsertPractice"></jn-insert-practice>
</template>

<script>
    import wepy from 'wepy'
    import {getStore, connect} from 'wepy-redux'
    import header from '../../../components/common/header'
    import insertLink from '../../../components/team-module/insert-link'
    import insertLesson from '../../../components/team-module/add-lesson'
    import insertPractice from '../../../components/team-module/add-practice'
    import singleChoice from '../../../components/cards-type/single-choice'
    import config from '../../../api/config'
    import {fetch} from '../../../api'
    import _ from 'underscore'

    const store = getStore()
    @connect({
        systemInfo(state) {
            return state.user
        }
    })
    export default class myReleaseDiscuss extends wepy.page {
        components = {
            'jn-header': header,
            'jn-insert-link': insertLink,
            'jn-insert-lesson' : insertLesson,
            'jn-insert-practice' : insertPractice,
            'jn-single-choice': singleChoice
        }

        data = {
            date: '2016-09-01',
            time: '12:01',
            isShowFullComponent: false,
            isShowInsertLink: false,
            isShowInsertLesson:false,
            isShowInsertPractice:false,
            isSumbit: true,
            sendData: {
                title: '',
                infoList: [
                    {
                        content: "",
                        index: 0,
                        type: "text"
                    }
                ]
            }
        }

        onLoad() {

        }

        onShow() {
            let self = this

        }

        /**
         * 删除模块
         * @param index
         * @private
         */
        __deteleModule(index) {
            let self = this
            let list = self.sendData.infoList
            list.splice(index, 1)
            self.$apply()
        }

        /**
         * 上传图片到服务器
         * @param flie
         * @private
         */
        __chooseImage(flie) {
            let self = this
            let list = self.sendData.infoList
            wx.uploadFile({
                url: `${config.baseUrl + 'app/upload'}?token=userID77083e905f624045bd17d4ac4d5c2c0e-1547699531518-1e9020e9ae68406c5968328bb56faa51`,
                filePath: flie,
                name: 'file',
                header: {
                    'content-type': 'application/x-www-form-urlencoded'  //这里注意POST请求content-type是小写，大写会报错
                },
                success(respone) {
                    let info = JSON.parse(respone.data)
                    list.push({
                        img: info.data.url,
                        index: list.length,
                        type: "image"
                    })
                    self.$apply()
                }
            })
        }

        methods = {
            bindDateChange(e) {
                console.log('picker发送选择改变，携带值为', e)
            },
            /**
             * textarea失去焦点
             * @param event
             */
            getBlur(event) {
                let self = this
                let {detail:{value}, currentTarget: {dataset: {type}}} = event
                switch(type) {
                    case 'title':
                        self.sendData.title = value
                        break
                    case 'content':
                        self.sendData.infoList[0].content = value
                        break
                    default:
                        if ('' === value) {
                           self.__deteleModule(type)
                        }
                }
            },
            /**
             * 添加图片模块
             */
            getAddThumb() {
                let self = this
                let list = self.sendData.infoList
                wx.chooseImage({
                    count: 1,
                    success: (data) => {
                        self.__chooseImage(data.tempFiles[0].path)
                    }
                })
            },
            /**
             * 添加超链接
             */
            getAddLink() {
                let self = this
                self.isShowInsertLink = true
                self.$apply()
            },
            /**
             * 添加练习题
             */
            getAddPractice() {
                let self = this;
                self.isShowInsertPractice = true;
                self.$apply()
            },
            /**
             * 添加微课
             */
            getAddLesson() {
                let self = this
                self.isShowInsertLesson = true
                self.isShowFullComponent = true
                self.$apply()
            },
            /**
             * 删除模块
             * @param event
             */
            getDetele(event) {
                let self = this
                let {currentTarget: {dataset: {type}}} = event
                self.__deteleModule(type)
            },
            /**
             * 提交讨论信息
             */
            getSumbitDiscuss() {
                let self = this
                setTimeout(()=>{
                    if (!self.sendData.infoList[0].content) {
                        wx.showToast({title: '请填写内容', icon: 'none'})
                        return
                    }

                    self.isSumbit = false
                    self.$apply()
                    let postData = {
                        token: 'userID77083e905f624045bd17d4ac4d5c2c0e-1547699531518-1e9020e9ae68406c5968328bb56faa51',
                        body: {
                            json: {
                                teamID: 'T2c7ac27b5634eb843993a616a35c',
                                roleType: 'member',
                                infoType: 'normal',
                                userID: 'defaultUserID',
                                postID: 'defaultpostID',
                                ...self.sendData
                            }
                        }
                    }

                    fetch.queryPracticeList(postData).then(respone => {
                        self.isSumbit = true
                        self.sendData = {
                            title: '',
                                infoList: [
                                {
                                    content: "",
                                    index: 0,
                                    type: "text"
                                }
                            ]
                        }
                        self.$apply()
                        wx.showToast({title: '提交成功'})
                        setTimeout(() => {
                            wx.navigateBack()
                        }, 1500)
                    }).catch(error => {
                        wx.showToast({title: '网络错误', icon: 'none'})
                        self.isSumbit = true
                        self.$apply()
                    })
                }, 300)
            }
        }

        events = {
            'on-insert-link': (data) => {
                let self = this
                let list = self.sendData.infoList
                let item = _.find(list, {type: 'link'})

                if (!item) {
                    list.push({
                        title: data.title || data.link,
                        link: data.link,
                        type: 'link',
                        index: list.length
                    })
                } else {
                    item.title = data.title,
                    item.link = data.link
                }

                self.isShowInsertLink = false
                self.$apply()
            },
            'on-add-lesson': (data) => {
                let self = this
                let list = self.sendData.infoList
                if (data) {
                    list.push({
                        list: data,
                        type: 'lesson',
                        index: list.length
                    })
                }

                self.isShowInsertLesson = false
                self.isShowFullComponent = false
                self.$apply()
            },
            'on-add-practice': (data) => {
                console.log('practice', data)
                let self= this
                let list = self.sendData.infoList
                if (data) {
                    list.push({
                        list: data,
                        type: 'textSelectionVer2',
                        index: list.length
                    })
                }

                self.isShowInsertPractice = false
                self.isShowFullComponent = false
                self.$apply()
            }
        }
    }
</script>
