<style lang="less">
    @import "../../assets/style/theme";
    .pre-practice-end{width: 100%;height: 100%;}
    .pre-practice-end-article{width: 100%;height: fit-content;min-height: 100%;display: flex;flex-direction: column;align-items: center;background-image: linear-gradient(-180deg, #31C6D6 0%, #2DB7B5 100%);background-size: cover;background-position: bottom center;background-repeat: no-repeat;}
    .pre-practice-end-chart-wrapper{background: rgba(255, 255, 255, .94);border-radius: 12px;width: 686rpx;height: 980rpx;position: relative;}
    .pre-practice-end-block-title{margin-top: 48rpx;opacity: 0.9;font-family: PingFangSC-Semibold;font-size: 52rpx;color: #FFFFFF;text-align: center;line-height: 52rpx;text-shadow: 2px 2px 0 #FE417B;}
    .pre-practice-end-ability-block{width: 686rpx;border-radius: 24rpx;display: flex;align-items: center;flex-direction: column;margin-top: 24rpx;padding-bottom: 28rpx;}
    .pre-practice-end-ability-block .title{margin-top: 16rpx;font-family: PingFangSC-Medium;font-size: 36rpx;color: #FFFFFF;text-align: center;}
    .pre-practice-end-ability-block .desc{margin-top: 16rpx;font-family: PingFangSC-Regular;font-size: 32rpx;color: #FFFFFF;text-align: left;width: 550rpx;overflow:hidden;text-align: justify;}
    .pre-practice-end-course-recommend{width: 686rpx;border-radius: 24rpx;padding: 36rpx 40rpx;box-sizing: border-box;background-color: rgba(255, 255, 255, .8);display: flex;align-items: center;flex-direction: column;margin: 24rpx;}
    .pre-practice-end-course-recommend .title{font-family: PingFangSC-Medium;font-size: 36rpx;color: #14292C;line-height: 52rpx;}
    .pre-practice-end-course-recommend .divide-line{width: 100%;height: 2rpx;margin-top: 26rpx;padding: 0 -40rpx;opacity: 0.1;background: #2FBEC4;}
    .pre-practice-end-course-recommend .senceList{display: flex;flex-direction: column;align-items: flex-start;margin-top: 16rpx;}
    .pre-practice-end-course-recommend-sence{padding-left: 40rpx;font-family: PingFangSC-Regular;font-size: 30rpx;color: #14292C;line-height: 56rpx;position: relative;}
    .pre-practice-end-course-recommend-sence::before{content: '';position: absolute;left: 0;top: 18rpx;border-radius: 10rpx;width: 20rpx;height: 20rpx;opacity: 0.5;background-color: #2DB7B5;}
    .pre-practice-end-tend-to-course{margin-top: 40rpx;height: 50rpx;display: flex;align-items: center;justify-content: center;font-family: PingFangSC-Regular;font-size: 32rpx;color: #2DB7B5;text-align: right;line-height: 32rpx;}
    .pre-practice-end-tend-to-course image{width: 36rpx;height: 36rpx;transform: rotate(180deg);}
    .ui-mask{width:100%;height:100%;background-color:rgba(0,0,0,.1);position:fixed;top:0;left:0;z-index:10;pointer-events:none;-webkit-touch-callout:none;overflow:hidden;}
    .pre-practice-end-total-comment{position: absolute;bottom: 148rpx;left: 48rpx;width: 590rpx;}
    .pre-practice-end-total-comment .row{width: 100%;position: relative;height: 24rpx;}
    .pre-practice-end-total-comment text{width: 100%;}
    .pre-practice-end-total-comment .row .block-left{position: absolute;left: -24rpx;top: 0;width: 20rpx;height: 20rpx;border-top: #FE417B solid 4rpx;border-left: #FE417B solid 4rpx;}
    .pre-practice-end-total-comment .row .block-right{position: absolute;right:-24rpx;top: 0;width: 20rpx;height: 20rpx;border-bottom: #FE417B solid 4rpx;border-right: #FE417B solid 4rpx;}
    .pre-practice-end-box{box-sizing: border-box;width:100%;height:160rpx;padding:8rpx 32rpx 0;}
    .pre-practice-end-useravatar{width: 72rpx;height: 72rpx;margin-right:36rpx;border-radius: 50%;border: 4rpx solid #fff;}
    .pre-practice-end-title{opacity:.9;font-family:PingFangSC-Semibold;font-size:40rpx;color:@color-white;text-align:left;line-height:52rpx;text-shadow:4rpx 4rpx 0 #fe417b;;box-sizing:border-box;width:100%;padding-bottom:10rpx;}
    .pre-practice-end-title-desc{opacity:.9;font-family:PingFangSC-Medium;font-size:26rpx;color:@color-white;text-align:left;line-height:32rpx;box-sizing:border-box;width:100%;}
    .pre-practice-end-next-course-button{position: fixed;width: 200rpx;height: 72rpx;right: 0;bottom:80rpx;border-top-left-radius: 36rpx;border-bottom-left-radius: 36rpx;box-shadow: 0 2px 4px 0 @background-mask-normal-2;background-color: @background-blue;font-family: PingFangSC-Medium;font-size: 26rpx;color: @color-white;display: flex;align-items: center;justify-content: center;z-index: 9;}
</style>

<template>
    <mloading wx:if="{{ !isLoaded }}"/>
    <view catchtouchmove="{{!isLoaded}}">
        <view class="ui-mask" wx:if="{{ !isLoaded }}"></view>
        <view class="pre-practice-end-next-course-button" @tap.stop="handleToCourse">{{' '}}查看学习秘诀</view>
        <view class="pre-practice-end" >
            <view class="pre-practice-end-article" style="background-image:url('{{radarInfo.imageBottomURL}}') !important">
                <jn-header className="background-transparent"></jn-header>
                <view class="pre-practice-end-box dir-left cross-center">
                    <image class="pre-practice-end-useravatar" src="{{userAvatarUrl}}"/>
                    <view class="">
                        <view class="pre-practice-end-title">{{subjectHeading}}</view>
                        <view class="pre-practice-end-title-desc">{{subject}}</view>
                    </view>
                </view>

                <view class="pre-practice-end-chart-wrapper">
                    <charts-radar :radarData.sync="radarList" style="margin-top:-40rpx;"></charts-radar>

                    <image src="{{examFeedbackMsgURL}}" mode="scaleToFill" class="pre-practice-end-total-comment" ></image>
                    <view hidden="{{true}}" class="pre-practice-end-total-comment">
                      <view class="row">
                        <view class="block-left"></view>
                      </view>
                      <text>{{examFeedbackMsg}}</text>
                      <view class="row">
                        <view class="block-right"></view>
                      </view>
                    </view>
                    <measure-radar
                    :params.sync="radarParam"
                    :radarImage.sync="radarImage"
                    :isShow.sync="isShowShare"></measure-radar>
                </view>

                <view class="pre-practice-end-block-title">能力分析</view>
                <view class="pre-practice-end-ability-block" style="{{abilityColorSet[index%4]}}"
                      wx:for="{{abilityList}}" wx:key="{{index}}">
                    <text class="title">- {{item.name}} -</text>
                    <text class="desc">{{item.feedbackMsg}}</text>
                </view>

                <view hidden="{{true}}" class="pre-practice-end-block-title">课程推荐</view>
                <view hidden="{{true}}" class="pre-practice-end-course-recommend">
                    <view class="title">{{course.courseName}}</view>
                    <view class="divide-line"/>
                    <view class="senceList">
                        <view wx:for="{{course.senceList}}" wx:key="{{index}}"
                              class="pre-practice-end-course-recommend-sence">{{item}}
                        </view>
                    </view>
                    <view class="pre-practice-end-tend-to-course" @tap.stop="handleToCourse">
                        <text>去学习</text>
                        <image src="../../assets/img/icon-redo.svg"/>
                    </view>
                </view>

                <view style="width:100%;height:100rpx;"/>
            </view>
        </view>
    </view>
</template>

<script>
    import wepy from 'wepy'
    import header from '../../components/common/header'
    import Loading from '../../components/common/loading'
    import ChartsRadar from '../../components/Charts/radar' // 雷达图
    import MeasureRadar from '../../components/shareImages/measure-radar' // 分享图片
    import {practice as practiceApi} from '../../api'
    import {redirectToLesson} from '../../utils'
    import {getStore, connect} from 'wepy-redux'

    const store = getStore()

    @connect({
        avatar(state) {
            return state.user.avatar
        },
        userName(state) {
            return state.user.name
        }, // mapState 即getters
        token(state) {
            // return 'userID0ac241e49ee7467ab11ce9d04f5f589a-1527492135193-6ea1036a154597f750e2b43156499940'
            return state.user.token
        },
        windowHeight(state) {
            return state.user.screenHeight
        },
        courseID(state) {
            return state.practices.courseID
        },
        senceID(state) {
            return state.practices.senceID
        },
        entrance(state) {//全局场景值
            return state.entrance
        },
    })
    export default class PreviousPracticeEndingNew extends wepy.page {
        components = {
            'jn-header': header,
            'charts-radar': ChartsRadar,
            'measure-radar': MeasureRadar,
            'mloading': Loading,
        } // end components

        data = {
            examID: '',
            isLoaded: false,
            senceID: '',
            abilityList: [],
            abilityColorSet: ['background-image: linear-gradient(90deg, #FFD37F 0%, #FFA848 95%);',
                'background-image: linear-gradient(90deg, #FF96A4 0%, #FF5D6B 100%);',
                'background-image: linear-gradient(90deg, #83C4FD 0%, #4C92FA 99%);',
                'background-image: linear-gradient(90deg, #1CE9AF 0%, #0CCF77 100%);'],

            course: {},
            description: '',
            examFeedbackMsg: '',
            examFeedbackMsgURL:'',
            radarList: [],
            subject: '',
            subjectHeading: '',
            userAvatarUrl: '',
            userName: '',
            radarParam: {},
            radarInfo: {},
            radarImage: null,
            shareImage: null,
            isShowShare: false
        }

        onLoad({senceID, examID}) {
            this.senceID = senceID
            this.examID = examID
            wx.reportAnalytics('pre_test_end', {
                        username: this.userName,
                        examid: this.examID,
                        channel: this.entrance.mappers[this.entrance.scenceID]
                    })
        }

        onShow() {
            this.initialize()
                .catch(error => {
                    console.log('fail to initialize begging practice', error)

                    this.showErrorPage = true
                    this.$apply()
                })
        }

        onShareAppMessage(res) {
            let self = this
            return {
                title: self.subject,
                path: `/pages/PreviousPracticeBeginning/index?examID=${self.examID}`,
                imageUrl: self.shareImage,
                success: function(res) {
                    wx.showShareMenu({
                        withShareTicket: true
                    })

                    wx.reportAnalytics('pre_test_share', {
                        username: self.userName,
                        examid: self.examID,
                        channel: self.entrance.mappers[self.entrance.scenceID],
                        type:'分享小程序'
                    })
                },
                fail: function(res) {

                }
            }
        }

        initialize() {
            return practiceApi.getUserExamScore({token: this.token, examID: this.examID})
                .then(data => {
                    this.isLoaded = true
                    this.course = data.course
                    this.description = data.description
                    this.examFeedbackMsg = data.examFeedbackMsg
                    this.examFeedbackMsgURL = data.examFeedbackMsgURL
                    this.radarList = data.radarList
                    this.subject = data.subject
                    this.subjectHeading = data.subjectHeading
                    this.userAvatarUrl = data.userAvatarUrl
                    this.userName = data.userName
                    this.abilityList = data.abilityList
                    this.shareImage = data.shareImage
                    this.radarInfo = {
                        subjectHeading: data.subjectHeading,
                        examFeedbackMsg: data.examFeedbackMsg,
                        imageBottomURL: data.imageResultURL || data.imageBottomURL,
                        examFeedbackMsgURL: data.examFeedbackMsgURL,
                        shareCodeImage: data.shareCodeImage
                    }
                    this.$apply()
                    wepy.$instance.globalData.getLoadHuilder({pageTheme: this.subjectHeading}) // ga统计
                })

        } 

        methods = {
            handleToCourse() {
                if (!this.course.courseID) return console.log('courseID is unusable')
                wx.reportAnalytics('pre_test_next_course', {
                        username: this.userName,
                        examid: this.examID,
                        channel: this.entrance.mappers[this.entrance.scenceID],
                        courseid: this.course.courseID,
                })
                wx.navigateTo({url: `/pages/course-module/course-details?id=${this.course.courseID}`})
            },
            handleReflashPage() {
                this.initialize(this.senceID)
                    .catch(error => {
                        console.log('fail to initialize begging practice', error)
                        wx.hideLoading()
                        this.showErrorPage = true
                        this.$apply()
                    })
            },
            handleStartLesson({currentTarget: {dataset: {courseID, senceID}}}) {
                return wepy.navigateBack({
                    delta: 1
                })
            }
        }

        events = {
            'on-radar-chart-options': (data) => {
                let self = this
                self.radarImage = data.radarImage
                self.radarParam = Object.assign(data.radarParam, this.radarInfo); //data.radarParam
                self.$apply()
            },

            'on-alert-visible': (data) => {
                let self = this
                self.isShowShare = data.isShow
                self.$apply()
            },

            'on-card-share': () => {
                let self = this
                wx.reportAnalytics('pre_test_share', {
                    username: self.userName,
                    examid: self.examID,
                    channel: self.entrance.mappers[self.entrance.scenceID],
                    type: '分享图片'
                })
            },
        }
    }
</script>
