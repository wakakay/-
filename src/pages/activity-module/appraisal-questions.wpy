<style lang="less" scoped>
    @import "../../assets/style/theme";
    .ui-pre-practice{
        width: 100%;height: 100%;background-position: top center;background-repeat: no-repeat;background-size: cover;position: relative;overflow:hidden;
        /* 进度条 */
        .ui-progress-box{
            .ui-progress{width:216rpx;height:10rpx;background-color:@background-gray-F4;border-radius:6rpx;position:relative;left:0rpx;overflow:hidden;}
            .cell-current{height:100%;background-color:#A1A9AB;border-radius:6rpx;position:absolute;left:0;top:0;transition:width .5s ease-in-out;}
            .cell-number{width:58rpx;padding-left:16rpx;font-size:24rpx;color:#A1A9AB;}
        }
        /* 题目 */
        .ui-practice-block{
            background-color: transparent;margin-top:182rpx;padding: 0 72rpx;box-sizing:border-box;
            .cell-title{font-family: PingFangSC-Medium;font-size: 34rpx;color: @color-black;margin-bottom:82rpx;}
            .ui-item{
                height: 112rpx;border-radius: @border-radius-20;display: flex;align-items: center;width: 606rpx;
                .cell-icon{width: 48rpx;height: 48rpx;border-radius: 50%;font-family: PingFangSC-Regular;font-size: 32rpx;line-height: 32rpx;display: flex;align-items: center;justify-content: center;position:relative;border: 2rpx solid @border-blue;margin-right: 24rpx;box-sizing: border-box;}
                .cell-icon.icon-selected{
                    &::before{content:'';width: 28rpx;height: 28rpx;margin:-14rpx 0 0 -14rpx;border-radius: 50%;background-color: @background-blue;position: absolute;left:50%;top:50%;}
                }
                .cell-content{font-family: PingFangSC-Regular;font-size: 32rpx;color: @color-black;display:flex;flex: 1;}
            }
        }
        .ui-margin{width: 100%;height: 30rpx;}
        .ui-bottom{
            width: 100%;position: absolute;bottom:120rpx;display:flex;justify-content:center;
            .cell-btn{
                width: 402rpx;height: 100rpx;border-radius: @border-radius-20;background: @background-gray-F4;color:@color-blue;text-align: center;line-height: 100rpx;font-size:34rpx;
                text{margin-right: 10rpx}
            }
        }
    }
    .ui-shade{
        position: fixed;z-index: @z-index-mask;left: 0;right: 0;top: 0;bottom: 0;background: @background-mask-normal;
        .ui-comfirm{
            position: absolute;top: 50%;left: 50%;transform: translate(-50%,-50%);border-radius:@border-radius-16;width:560rpx;background: @background-white;overflow:hidden;
            .cell-content{font-size: 34rpx;color:@color-black;height: 190rpx;text-align: center;line-height: 190rpx;}
            .ui-btn{
                color:@color-blue;height: 100rpx;border-top:2rpx solid @border-gray;display: flex;border-bottom-left-radius:@border-radius-16;border-bottom-right-radius:@border-radius-16;
                .cell-item{width: 280rpx;text-align: center;line-height: 100rpx;}
                .cell-hover{background: @background-gray-F4;}
                &:last-of-type .cell-item{border-left:2rpx solid @border-gray; }
            }
        }
    }
</style>

<template>
    <mloading wx:if="{{ !isLoaded }}" />
    <view class="ui-pre-practice" wx:if="{{ isLoaded }}"
          style="background-image: url('{{prePracticeObj.imagePracticeURL}}');">
        <jn-header className="background-transparent">
            <view slot="content" class="ui-progress-box main-center cross-center">
                <view class="ui-progress">
                    <view class="cell-current" style="width:{{((currentIndex)/(prePracticeObj.practiceList.length)) * 100}}%"></view>
                </view>
                <view class="cell-number">{{currentIndex}}/{{prePracticeObj.practiceList.length}}</view>
            </view>
        </jn-header>
        <swiper class="ui-practice-block" style="height: calc(100% - {{headerHeigth}}px)"
                current="{{activedIndex}}" bindchange="getSwiperItem" duration="{{300}}">
            <block wx:for="{{tempList}}" wx:index="{{index}}" wx:key="{{index}}">
                <swiper-item
                        bindtouchstart="getTouchStart"
                        bindtouchmove="getTouchMove"
                        data-practice-id="{{item.practiceID}}">
                    <view class="cell-title">{{item.content}}</view>
                    <block wx:for="{{item.optionList}}" wx:key="{{optionIndex}}"
                           wx:for-item="selectItem" wx:index="{{optionIndex}}" >
                        <view  class="ui-item" @tap.stop="getSelectItem"
                               data-item="{{selectItem}}" data-practice-id="{{item.practiceID}}">
                            <view class="cell-icon"
                                  :class="{'icon-selected' : selectObj[item.practiceID] === selectItem.optionID}">
                            </view>
                            <view class="cell-content">{{selectItem.optionContent}}</view>
                        </view>
                    </block>
                </swiper-item>
            </block>
        </swiper>
        <view class="ui-margin"></view>
        <view class="ui-bottom">
            <view class="cell-btn" wx:if="{{ arrLength.length === prePracticeObj.practiceList.length}}" @tap.stop="handleTapToFinish">
                完成<text class="icon-details"></text>
            </view>
        </view>
    </view>
    <view class="ui-shade" wx:if="{{isShowShade}}">
        <view class="ui-comfirm">
            <view class="cell-content">测评完成，是否现在提交? </view>
            <view class="ui-btn">
                <view hover-class="cell-hover" class="cell-item" @tap.stop="getCancel">取消</view>
                <view hover-class="cell-hover" class="cell-item" @tap.stop="getComfirm">确定</view>
            </view>
        </view>
    </view>
</template>

<script>
    import wepy from "wepy";
    import {registered as fetch} from "../../api"
    import {getStore, connect} from "wepy-redux"
    import Loading from '../../components/common/loading'
    import header from '../../components/common/header'
    import _ from 'underscore'

    const store = getStore();
    @connect({
        userName(state) {
            return state.user.name;
        },
        token(state) {
            return state.user.token;
        },
        entrance(state) {
            //全局场景值
            return state.entrance;
        },
    })
    export default class appraisalQuestions extends wepy.page {
        config = {
            disableScroll: true
        }
        components = {
            'jn-header': header,
            'mloading': Loading,
        };
        data = {
            isLoaded: false,
            headerHeigth:68,
            examID: '',
            currentIndex:1,
            activedIndex:0,
            SelectIndex:-1,
            isShowShade:false,
            prePracticeObj:{
                buttonStatus:'',
                examTitle:'',
                imageBottomURL:'',
                imagePracticeURL:'',
                imageResultURL:'',
                practiceList:[]
            },
            tempList:[],
            selectObj:{},
            startPoint:[0,0],
            curPoint:[0,0],
            commitList:[],
            arrLength:[]
        };
        methods = {
            handleTapToFinish() {
                this.isShowShade = true;
            },
            getCancel(){
                this.isShowShade = false;
            },
            getSwiperItem(event){
                let self = this
                let detail = event.detail
                self.currentIndex = detail.current+1
                self.activedIndex = detail.current
                self.$apply()
            },
            // 点击单选
            getSelectItem(event){
                let self = this
                let dataset = event.currentTarget.dataset
                let item = dataset.item
                let index = item.optionID
                let id = dataset.practiceId
                // 获得已选的id
                self.selectObj[id] = index
                self.arrLength = _.keys(self.selectObj)
                // 动态 改变 tempList
                let tempPracticeList = self.prePracticeObj.practiceList
                for(let i = 0 ; i < self.arrLength.length+1 ;i++) {
                    if(self.arrLength.length < self.prePracticeObj.practiceList.length) {
                        self.tempList[i] = self.prePracticeObj.practiceList[i]
                    }
                }
                setTimeout(()=>{
                    if(self.activedIndex < self.prePracticeObj.practiceList.length -1 ) {
                        self.activedIndex = self.activedIndex + 1
                    }
                    self.$apply()
                }, 100)
                self.$apply()
            },
            // 移动
            getTouchStart(e) {
                let self = this
                self.startPoint = [e.touches[0].clientX,e.touches[0].clientY]
                self.$apply()
            },
            getTouchMove(e) {
                let self = this
                self.curPoint =  [e.touches[0].clientX,e.touches[0].clientY]
                let id = e.currentTarget.dataset.practiceId
                let arrKeys = _.keys(self.selectObj)
                if(self.startPoint[0] > self.curPoint[0]) {
                    if(_.indexOf(arrKeys,id) <= -1) {
                        self.$apply()
                        wx.showToast({
                            title: '请选择选项',
                            icon: 'none',
                            duration: 200
                        })
                    }
                }
            },
            getComfirm() {
                let self = this;
                let keys = _.keys(self.selectObj);
                let values = _.values(self.selectObj);
                _.each(keys, (item,index)=>{
                    self.commitList.push({'optionID':values[index],'practiceID':item})
                });
                let postData = {
                    token:self.token,
                    json:{
                        'examID':self.examID,
                        'practiceList':self.commitList
                    }
                }
                console.log(postData,'postData1')
                fetch.sendUserDoExam(postData).then((res)=>{
                    self.isShowShade = false;
                    wx.hideLoading()
                    wepy.redirectTo({ url: `/pages/activity-module/appraisal-results?examID=${self.examID}`})
                })
                self.$apply()
            },
        };
        __getExamPracticeList(parameter){
            let self = this
            let postData = {
                token: parameter && parameter.token || self.token,
                examID: self.examID
            }
            fetch.getExamPracticeList(postData).then((res) => {
                self.isLoaded = true
                self.prePracticeObj.buttonStatus = res.buttonStatus
                self.prePracticeObj.examTitle = res.examTitle
                self.prePracticeObj.imageBottomURL = res.imageBottomURL
                self.prePracticeObj.imagePracticeURL = res.imagePracticeURL
                self.prePracticeObj.imageResultURL = res.imageResultURL
                self.prePracticeObj.practiceList = res.practiceList
                self.tempList[0] = _.first(self.prePracticeObj.practiceList);
                self.$apply()

                // ga统计
                wepy.$instance.globalData.getLoadHuilder({pageTheme: self.prePracticeObj.examTitle})
                // 微信统计
                wx.reportAnalytics('pre_test_ing', {
                    username: this.userName,
                    examid: this.examID,
                    channel: this.entrance.mappers[this.entrance.scenceID],
                })
            })
        }

        onLoad({examID}) {
            let self = this
            self.examID = examID
            self.$apply()

            self.__getExamPracticeList()
        }

      

        events = {
            'header-info': (data) => {
                let self = this
                self.headerHeigth = data.headerHeigth
                self.$apply()
            }
        }
    }
</script>


